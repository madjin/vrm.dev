<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VRM – ドキュメント</title>
    <link>https://vrm.dev/docs/</link>
    <description>Recent content in ドキュメント on VRM</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 04 Aug 2019 17:59:33 +0900</lastBuildDate>
    
	  <atom:link href="https://vrm.dev/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: v0.66からv0.79の変更点</title>
      <link>https://vrm.dev/docs/gltf/update/</link>
      <pubDate>Fri, 20 Aug 2021 17:44:22 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/gltf/update/</guid>
      <description>
        
        
        &lt;p&gt;&lt;code&gt;glTF&lt;/code&gt; 部分の &lt;code&gt;UniVRM-0.66&lt;/code&gt; からの主な更新点です。&lt;/p&gt;
&lt;h2 id=&#34;scriptedimporter-の採用&#34;&gt;ScriptedImporter の採用&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;glb&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UIの変更&lt;/li&gt;
&lt;li&gt;SubAssetsの挙動変更&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ForceText&lt;/code&gt; 時の動作が軽快に&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://vrm.dev/docs/gltf/scripted_importer/&#34;&gt;ScriptedImporter&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;反転軸オプション追加&#34;&gt;反転軸オプション追加&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;glb&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/pull/755&#34;&gt;https://github.com/vrm-c/UniVRM/pull/755&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/pull/958&#34;&gt;https://github.com/vrm-c/UniVRM/pull/958&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Exporter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RuntimeImport&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EditorImport&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;material関連&#34;&gt;Material関連&lt;/h2&gt;
&lt;h3 id=&#34;smoothnessgltf-と-roughnessunity-の変換ロジックを修正&#34;&gt;Smoothness(glTF) と Roughness(Unity) の変換ロジックを修正&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pbr&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/issues/388&#34;&gt;https://github.com/vrm-c/UniVRM/issues/388&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;importexport時に-metallicroughnessocclusion-テクスチャーを一枚にまとめる&#34;&gt;Import/Export時に MetallicRoughnessOcclusion テクスチャーを一枚にまとめる&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pbr&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/issues/781&#34;&gt;https://github.com/vrm-c/UniVRM/issues/781&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mipmap-のインポート設定を修正&#34;&gt;MipMap のインポート設定を修正&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pbr&lt;/code&gt;, &lt;code&gt;mtoon&lt;/code&gt; 法線マップに影響が出やすい&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/issues/947&#34;&gt;https://github.com/vrm-c/UniVRM/issues/947&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Unity のバージョン</title>
      <link>https://vrm.dev/docs/univrm/install/unity_version/</link>
      <pubDate>Wed, 11 Aug 2021 15:49:48 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/install/unity_version/</guid>
      <description>
        
        
        &lt;h2 id=&#34;univrm-0800-&#34;&gt;UniVRM-0.80.0 ～&lt;/h2&gt;
&lt;p&gt;Unity-2018.4LTS のサポートを終了して、開発バージョンを &lt;code&gt;Unity-2019.4LTS&lt;/code&gt; に更新しました。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Unity Version&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Unity-2019.4 LTS&lt;/td&gt;
&lt;td&gt;UniVRMの開発に使っているバージョン&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unity-2020.4 LTS&lt;/td&gt;
&lt;td&gt;リリース時にUPMの動作確認をしてるバージョン&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unity-2021&lt;/td&gt;
&lt;td&gt;問題が発生した場合は &lt;a href=&#34;https://github.com/vrm-c/UniVRM/issues&#34;&gt;github&lt;/a&gt; にご報告ください&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;univrm-0560--0790&#34;&gt;UniVRM-0.56.0 ～ 0.79.0&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Unity Version&lt;/th&gt;
&lt;th&gt;動作&lt;/th&gt;
&lt;th&gt;Scripting Runtime Version&lt;/th&gt;
&lt;th&gt;UPM&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Unity-2017&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unity-2018.1&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unity-2018.2&lt;/td&gt;
&lt;td&gt;×&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unity-2018.3&lt;/td&gt;
&lt;td&gt;△&lt;/td&gt;
&lt;td&gt;.Net4.X equivalent&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;C#7.3。動くかもしれないが未確認&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unity-2018.4 LTS&lt;/td&gt;
&lt;td&gt;◎&lt;/td&gt;
&lt;td&gt;.Net4.X equivalent&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;UniVRMの開発に使っているバージョン&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unity-2019.1&lt;/td&gt;
&lt;td&gt;○&lt;/td&gt;
&lt;td&gt;.Net4.X equivalent&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unity-2019.2&lt;/td&gt;
&lt;td&gt;○&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;.Net3.5が無くなったので Scripting Runtime Version 設定が不要になった&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unity-2019.3&lt;/td&gt;
&lt;td&gt;○&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2019.3.4f1 から UPM(githubのサブフォルダ) が動作する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unity-2019.4 LTS&lt;/td&gt;
&lt;td&gt;◎&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;○&lt;/td&gt;
&lt;td&gt;リリース時にUPMの動作確認をしてるバージョン&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unity-2020&lt;/td&gt;
&lt;td&gt;○&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;○&lt;/td&gt;
&lt;td&gt;Editor機能(Prefabなど)が一部動作せず。&lt;code&gt;UniVRM-0.69.0&lt;/code&gt; で修正&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;-univrm-055&#34;&gt;～ UniVRM-0.55&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Unity-5.6 以降&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: fbx の import, T-Pose 初期エクスポート</title>
      <link>https://vrm.dev/docs/univrm1/vrm1_tutorial/first_export_from_fbx/</link>
      <pubDate>Tue, 10 Aug 2021 18:51:50 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm1/vrm1_tutorial/first_export_from_fbx/</guid>
      <description>
        
        
        &lt;h2 id=&#34;使用する素材&#34;&gt;使用する素材&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;new_seedsan.fbx&lt;/li&gt;
&lt;li&gt;関連する *.png&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fbx-の-import&#34;&gt;fbx の import&lt;/h2&gt;
&lt;p&gt;Assets に作業用のフォルダ &lt;code&gt;Assets/seedsan/fbx&lt;/code&gt; を作ります。&lt;/p&gt;
&lt;h3 id=&#34;texture-を-import&#34;&gt;Texture を import&lt;/h3&gt;
&lt;p&gt;関連する png を &lt;code&gt;Assets/seedsan/fbx&lt;/code&gt; に import します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;backpack.png&lt;/li&gt;
&lt;li&gt;body.png&lt;/li&gt;
&lt;li&gt;faceparts.png&lt;/li&gt;
&lt;li&gt;gradation.png&lt;/li&gt;
&lt;li&gt;hair.png&lt;/li&gt;
&lt;li&gt;nm_backpack_normals.png&lt;/li&gt;
&lt;li&gt;nm_body_normals.png&lt;/li&gt;
&lt;li&gt;nm_wear.png&lt;/li&gt;
&lt;li&gt;planekun_face.png&lt;/li&gt;
&lt;li&gt;robo_arm.png&lt;/li&gt;
&lt;li&gt;wear.png&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fbx-を-import&#34;&gt;fbx を import&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;new_seedsan.fbx&lt;/code&gt; を &lt;code&gt;Assets/seedsan/fbx&lt;/code&gt; に import します。&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;fbx import&lt;/h4&gt;

    &lt;p&gt;import した fbx シーンに出しました。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/fbx_import.jpg&#34;   /&gt;&lt;/p&gt;
&lt;p&gt;テクスチャの割り当てが一部うまくいきませんでした。
次の手順で修正します。&lt;/p&gt;


&lt;/div&gt;

&lt;h2 id=&#34;material-の調整&#34;&gt;material の調整&lt;/h2&gt;
&lt;h3 id=&#34;extract&#34;&gt;extract&lt;/h3&gt;
&lt;p&gt;import した状態では material が SubAsset なっていて設定を変更することができません。&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;subasset&lt;/h4&gt;

    &lt;p&gt;subasset というのは asset の子アセットでファイルとして独立していません。
また、設定を変更できないので inspector がグレーアウトしています。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/embedded_subasset.jpg&#34;   /&gt;&lt;/p&gt;


&lt;/div&gt;

&lt;p&gt;subasset を取り出します。&lt;/p&gt;
&lt;p&gt;fbx importer の &lt;code&gt;Materials&lt;/code&gt; タブの &lt;code&gt;Extract Materials...&lt;/code&gt; ボタンを押してください。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/extract_materials.jpg&#34;   /&gt;

&lt;p&gt;folder 選択ダイアログが現れるので &lt;code&gt;Assets/seedsan/materials&lt;/code&gt; を選択します。
fbx の subasset であった material が指定したフォルダの中に取り出され、fbx importer の &lt;code&gt;Materials&lt;/code&gt; タブの &lt;code&gt;Remapped Materials&lt;/code&gt; にセットされます。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/extracted.jpg&#34;   /&gt;



&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;fbx reset&lt;/h4&gt;

    &lt;p&gt;fbx を初期状態に戻すには ⚙メニューから &lt;code&gt;reset&lt;/code&gt; でできます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/fbx_reset.jpg&#34;   /&gt;&lt;/p&gt;


&lt;/div&gt;

&lt;h3 id=&#34;material-の修正&#34;&gt;material の修正&lt;/h3&gt;
&lt;p&gt;seedsan の 各マテリアルの texture は下記のとおりです。
テクスチャの割り当てを確認するだけなので Shader は &lt;code&gt;Standard&lt;/code&gt; のままにします。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Albedo&lt;/th&gt;
&lt;th&gt;Normal Map&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;huku_bake&lt;/td&gt;
&lt;td&gt;wear.png&lt;/td&gt;
&lt;td&gt;✅nm_wear.png&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hair&lt;/td&gt;
&lt;td&gt;hair.png&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;body_bake&lt;/td&gt;
&lt;td&gt;body.png&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eye&lt;/td&gt;
&lt;td&gt;✅faceparts.png&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;eye_trans&lt;/td&gt;
&lt;td&gt;✅faceparts.png&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;arm_mat&lt;/td&gt;
&lt;td&gt;✅robo_arm.png&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;arm_plastic&lt;/td&gt;
&lt;td&gt;✅robo_arm.png&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;green_emit&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;body_bake&lt;/td&gt;
&lt;td&gt;body.png&lt;/td&gt;
&lt;td&gt;✅nm_body_normals.png&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;body_nm&lt;/td&gt;
&lt;td&gt;body.png&lt;/td&gt;
&lt;td&gt;✅nm_body_normals.png&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wear_metal&lt;/td&gt;
&lt;td&gt;wear.png&lt;/td&gt;
&lt;td&gt;✅nm_wear.png&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;huku_bake&lt;/td&gt;
&lt;td&gt;wear.png&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;armgear_plastic&lt;/td&gt;
&lt;td&gt;wear.png&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;robo_face&lt;/td&gt;
&lt;td&gt;planekun_face.png&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;glass&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;backpack_metal&lt;/td&gt;
&lt;td&gt;backpack.png&lt;/td&gt;
&lt;td&gt;✅nm_backpack_normals.png&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;green_emit&lt;/td&gt;
&lt;td&gt;backpack.png&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;backpack_nm&lt;/td&gt;
&lt;td&gt;backpack.png&lt;/td&gt;
&lt;td&gt;✅nm_backpack_normals.png&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;backpack_plastic&lt;/td&gt;
&lt;td&gt;backpack.png&lt;/td&gt;
&lt;td&gt;✅nm_backpack_normals.png&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;anim_logo&lt;/td&gt;
&lt;td&gt;gradation.png&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;次に、法線マップの TextureType を &lt;code&gt;Normal map&lt;/code&gt; に変更して、右下の &lt;code&gt;apply&lt;/code&gt; ボタンを押します。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/texturetype_normalmap.jpg&#34;   /&gt;

&lt;h2 id=&#34;mesh-の調整&#34;&gt;mesh の調整&lt;/h2&gt;
&lt;h3 id=&#34;blendshape-の法線確認&#34;&gt;BlendShape の法線確認&lt;/h3&gt;
&lt;p&gt;head を選択して、&lt;code&gt;SkinnedMeshRenderer&lt;/code&gt; のインスペクタを表示します。
&lt;code&gt;BlendShapes&lt;/code&gt; を開いて、スライダーを操作して確認します。&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;法線確認&lt;/h4&gt;

    blend shape の法線を確認したいので、shader は Standard のままにしています。

&lt;/div&gt;

&lt;p&gt;それほど目だないのですが唇の印影が付きすぎています。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/blendshape_normal_aa.jpg&#34;   /&gt;

&lt;p&gt;fbx の import 設定を修正します。
fbx の inspector の &lt;code&gt;Model&lt;/code&gt; タブの &lt;code&gt;BlendShape normals&lt;/code&gt; から &lt;code&gt;None&lt;/code&gt; を選択します。
&lt;code&gt;Apply&lt;/code&gt; で適用します。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/fbx_model_blendshapenormals.jpg&#34;   /&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/blendshape_normal_aa.jpg&#34;   /&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/blendshape_normal_none.jpg&#34;   /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/issues/828&#34;&gt;#828&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;humanoid-の調整&#34;&gt;humanoid の調整&lt;/h2&gt;
&lt;h3 id=&#34;animationtype-を-humanoid-にする&#34;&gt;AnimationType を humanoid にする&lt;/h3&gt;
&lt;p&gt;fbx の import 設定を修正します。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Rig&lt;/code&gt; タブの AnimationType を &lt;code&gt;Humanoid&lt;/code&gt; にして &lt;code&gt;Apply&lt;/code&gt; します。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/fbx_animation_type.jpg&#34;   /&gt;

&lt;h3 id=&#34;jaw-ボーンの割り当てを解除します&#34;&gt;jaw ボーンの割り当てを解除します。&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Rig&lt;/code&gt; タブの &lt;code&gt;Configure&lt;/code&gt; ボタンを押して、Humanoid のボーン割り当て設定画面に入ります。&lt;/p&gt;
&lt;p&gt;fbx importer の自動割り当てで &lt;code&gt;jaw&lt;/code&gt; (顎) ボーンに &lt;code&gt;hair_A&lt;/code&gt; が割り当てられてしまいました。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/humanoid_jaw.jpg&#34;  width=&#34;300&#34; /&gt;

&lt;p&gt;割り当てを削除して 右下の &amp;lsquo;Done` ボタン押します。&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;jaw ボーンにご注意&lt;/h4&gt;

    fbx の自動割り当てで前髪などが誤って &lt;code&gt;jaw&lt;/code&gt; に割り当てられることがよくあります。
前髪が変な動きをする場合、これが原因のことがあります。

&lt;/div&gt;

&lt;h2 id=&#34;vrm1-としてエクスポートします&#34;&gt;VRM1 としてエクスポートします&lt;/h2&gt;
&lt;p&gt;VRMの詳細なセットアップをする前にここで一度出力します。
このエクスポートにより以下の状態になります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;モデルが T-Pose になる&lt;/li&gt;
&lt;li&gt;モデルが T-Pose の状態で 回転とスケールが 除去された状態になる&lt;/li&gt;
&lt;li&gt;VRM1 として最低限必要な Meta が設定される&lt;/li&gt;
&lt;li&gt;VRM1 としてインポートしなおすことで VRM1 のコンポーネントがアタッチされた状態になる&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;prefab-をシーンに出して-t-pose-にする&#34;&gt;prefab をシーンに出して T-Pose にする&lt;/h3&gt;
&lt;h3 id=&#34;vrm1-の-export-dialog-を出して-最小限の-meta-を入力する&#34;&gt;VRM1 の Export Dialog を出して 最小限の meta を入力する&lt;/h3&gt;
&lt;h3 id=&#34;export-する&#34;&gt;export する&lt;/h3&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: VRM-1.0の変更点</title>
      <link>https://vrm.dev/docs/vrm1/changed/</link>
      <pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://vrm.dev/docs/vrm1/changed/</guid>
      <description>
        
        
        &lt;h2 id=&#34;vrm-0x-からの変更点&#34;&gt;VRM-0.X からの変更点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;glTF: z- forward =&amp;gt; z+ forward&lt;/li&gt;
&lt;li&gt;glTF: shared bufferView =&amp;gt; divided bufferView&lt;/li&gt;
&lt;li&gt;VRM0: meta =&amp;gt; &lt;code&gt;VRMC_vrm&lt;/code&gt; meta&lt;/li&gt;
&lt;li&gt;VRM0: humanoid =&amp;gt; &lt;code&gt;VRMC_vrm&lt;/code&gt; humanoid&lt;/li&gt;
&lt;li&gt;VRM0: blendshape =&amp;gt; &lt;code&gt;VRMC_vrm&lt;/code&gt; expression&lt;/li&gt;
&lt;li&gt;VRM0: lookat =&amp;gt; &lt;code&gt;VRMC_vrm&lt;/code&gt; lookat&lt;/li&gt;
&lt;li&gt;VRM0: firstperson =&amp;gt; &lt;code&gt;VRMC_vrm&lt;/code&gt; firstperson&lt;/li&gt;
&lt;li&gt;VRM0: springBone =&amp;gt; &lt;code&gt;VRMC_springBone&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;新規&lt;/code&gt; =&amp;gt; &lt;code&gt;VRMC_materials_hdr_emissiveMultiplier&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;VRM0: mtoon =&amp;gt; &lt;code&gt;VRMC_materials_mtoon&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;新規&lt;/code&gt; =&amp;gt; &lt;code&gt;VRMC_node_constraint&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;gltf-z-forward&#34;&gt;glTF: z+ forward&lt;/h2&gt;
&lt;p&gt;モデルは Z+ 方向が前方になるように格納します。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;VRM0&lt;/th&gt;
&lt;th&gt;VRM1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;forward&lt;/td&gt;
&lt;td&gt;z-&lt;/td&gt;
&lt;td&gt;z+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;right&lt;/td&gt;
&lt;td&gt;x+&lt;/td&gt;
&lt;td&gt;x-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;実装&lt;/h4&gt;

    &lt;p&gt;Y軸 180 度の回転になります。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;Vector3 vrm0;
&lt;span style=&#34;color:#078;font-weight:bold&#34;&gt;var&lt;/span&gt; vrm1 = &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;new&lt;/span&gt; Vector3(-vrm0.x, vrm0.y, -vrm0.z);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;TODO&lt;/code&gt;&lt;/p&gt;


&lt;/div&gt;

&lt;h2 id=&#34;gltf-divided-vertex-buffer&#34;&gt;glTF: divided vertex buffer&lt;/h2&gt;
&lt;p&gt;bufferView の primitive 間での共有をやめます。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;VRM0&lt;/th&gt;
&lt;th&gt;VRM1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;bufferView&lt;/td&gt;
&lt;td&gt;shared&lt;/td&gt;
&lt;td&gt;divided&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;利点&lt;/td&gt;
&lt;td&gt;GameEngine メモリレイアウトに近いので変換が少ない&lt;/td&gt;
&lt;td&gt;一般的な glTF ローダーでロードできる&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;欠点&lt;/td&gt;
&lt;td&gt;UniVRM 以外の glTF ローダーでメモリ使用量が爆発する可能性(ロードできるが頂点バッファに未使用領域ができてしまう)&lt;/td&gt;
&lt;td&gt;export 時に頂点の増加・並び順の変化がありえる。import 時に連結する手間。morphTarget の扱いが煩雑&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;実装&lt;/h4&gt;

    &lt;code&gt;Vrm&lt;/code&gt; 専用の共有頂点ローダーをやめて、
一般的な &lt;code&gt;glTF&lt;/code&gt; ローダーで問題ありません。

&lt;/div&gt;

&lt;h2 id=&#34;vrmc_vrm-meta&#34;&gt;VRMC_vrm: meta&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;TODO&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;vrmc_vrm-humanoid&#34;&gt;VRMC_vrm: humanoid&lt;/h2&gt;
&lt;p&gt;必須ボーンの見直し。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;VRM0&lt;/th&gt;
&lt;th&gt;VRM1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;neck&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;head&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hips&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;spine&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;chest&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;left/right UpperArm&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;left/right LowerArm&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;left/right Hand&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;left/right UpperLeg&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;left/right LowerLeg&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;left/right Foot&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以下の項目が廃止になります(&lt;code&gt;VRMHumanoidDescription&lt;/code&gt; に記録されていた)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;armStretch&lt;/li&gt;
&lt;li&gt;legStretch&lt;/li&gt;
&lt;li&gt;upperArmTwist&lt;/li&gt;
&lt;li&gt;lowerArmTwist&lt;/li&gt;
&lt;li&gt;upperLegTwist&lt;/li&gt;
&lt;li&gt;lowerLegTwist&lt;/li&gt;
&lt;li&gt;feetSpacing&lt;/li&gt;
&lt;li&gt;hasTranslationDoF&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vrmc_vrm-expression&#34;&gt;VRMC_vrm: expression&lt;/h2&gt;
&lt;p&gt;BlendShapeは、Expression に名称を変更します。&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;BlendShape&lt;/h4&gt;

    BlendShapeは Unity の MorphTarget 機能のことで、区別が付きにくかったためです。

&lt;/div&gt;

&lt;p&gt;preset の見直し&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;VRM0&lt;/th&gt;
&lt;th&gt;VRM1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;喜&lt;/td&gt;
&lt;td&gt;joy(joyとfunが曖昧)&lt;/td&gt;
&lt;td&gt;happy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;怒&lt;/td&gt;
&lt;td&gt;angry&lt;/td&gt;
&lt;td&gt;angry&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;哀&lt;/td&gt;
&lt;td&gt;sorrow(文語)&lt;/td&gt;
&lt;td&gt;sad&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;楽&lt;/td&gt;
&lt;td&gt;fun(joyとfunが曖昧)&lt;/td&gt;
&lt;td&gt;relaxed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;驚&lt;/td&gt;
&lt;td&gt;(新規追加)&lt;/td&gt;
&lt;td&gt;surprised&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;あ&lt;/td&gt;
&lt;td&gt;a(非日本語で自然なように変更)&lt;/td&gt;
&lt;td&gt;aa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;い&lt;/td&gt;
&lt;td&gt;i(非日本語で自然なように変更)&lt;/td&gt;
&lt;td&gt;ih&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;う&lt;/td&gt;
&lt;td&gt;u(非日本語で自然なように変更)&lt;/td&gt;
&lt;td&gt;ou&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;え&lt;/td&gt;
&lt;td&gt;e(非日本語で自然なように変更)&lt;/td&gt;
&lt;td&gt;ee&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;お&lt;/td&gt;
&lt;td&gt;o(非日本語で自然なように変更)&lt;/td&gt;
&lt;td&gt;oh&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;overrideMouse, overrideLipSync, overrideBlink 設定の追加&lt;/li&gt;
&lt;li&gt;VRM0 の materialBind から MaterialColorBind と TextureTransformBind に整理&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vrmc_vrm-lookat&#34;&gt;VRMC_vrm: lookat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;degreemap.curve&lt;/code&gt; が廃止になります&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vrmc_vrm-firstperson&#34;&gt;VRMC_vrm: firstperson&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;firstPersonBone&lt;/code&gt; は廃止になり、&lt;code&gt;Head&lt;/code&gt; 固定になります&lt;/li&gt;
&lt;li&gt;&lt;code&gt;firstPersonBoneOffset&lt;/code&gt; は、&lt;code&gt;lookAt.offsetFromHeadBone&lt;/code&gt; になります&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vrmc_springbone&#34;&gt;VRMC_springBone&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;VRM0&lt;/th&gt;
&lt;th&gt;VRM1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;設定単位&lt;/td&gt;
&lt;td&gt;房&lt;/td&gt;
&lt;td&gt;節&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;子&lt;/td&gt;
&lt;td&gt;children[0]&lt;/td&gt;
&lt;td&gt;children のいずれか&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;末端&lt;/td&gt;
&lt;td&gt;7cm の遠さに 自動で追加&lt;/td&gt;
&lt;td&gt;追加しない&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;拡張を分離 =&amp;gt; 独立した &lt;code&gt;VRMC_springBone&lt;/code&gt; 拡張&lt;/li&gt;
&lt;li&gt;Collider 形状に Capsule を追加&lt;/li&gt;
&lt;li&gt;Unity座標系の混在を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vrmc_materials_hdr_emissivemultiplier&#34;&gt;VRMC_materials_hdr_emissiveMultiplier&lt;/h2&gt;
&lt;p&gt;エミッションによる発光表現です。&lt;/p&gt;
&lt;p&gt;glTF では emissiveFactor(float3) の値域が [0.0, 1.0] です。
これに係数を追加することで、1.0 を越える値を表せるようにします。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;VRM0&lt;/th&gt;
&lt;th&gt;VRM1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;mtoon の emissiveFactor&lt;/td&gt;
&lt;td&gt;独自に格納していた(0, 1 制限が無い)&lt;/td&gt;
&lt;td&gt;gltf material の emissiveFactor に格納(0, 1 制限がある)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;gltf-2.0 の標準マテリアル(PBR), VRMC_materials_mtoon から利用します。&lt;/p&gt;
&lt;h2 id=&#34;vrmc_materials_mtoon&#34;&gt;VRMC_materials_mtoon&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;拡張を分離 =&amp;gt; 独立した &lt;code&gt;VRMC_materials_mtoon&lt;/code&gt; 拡張&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;TODO&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;vrmc_node_constraint&#34;&gt;VRMC_node_constraint&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;開発中&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;translation&#34;&gt;translation&lt;/h3&gt;
&lt;h3 id=&#34;rotation&#34;&gt;rotation&lt;/h3&gt;
&lt;h3 id=&#34;aim&#34;&gt;aim&lt;/h3&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: VRMをインポートする</title>
      <link>https://vrm.dev/docs/univrm/import/univrm_import/</link>
      <pubDate>Mon, 12 Oct 2020 15:28:09 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/import/univrm_import/</guid>
      <description>
        
        
        &lt;h2 id=&#34;エディタモードでvrmファイルをインポートする&#34;&gt;エディタモードでVRMファイルをインポートする&lt;/h2&gt;
&lt;h3 id=&#34;1unityで空のプロジェクトを作る&#34;&gt;1.Unityで空のプロジェクトを作る&lt;/h3&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/unity_new_project.png&#34;   /&gt;

&lt;hr&gt;
&lt;p&gt;もしくは&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/new_project.jpg&#34;   /&gt;

&lt;hr&gt;
&lt;p&gt;Unityを起動し、プロジェクトを新規作成します。&lt;/p&gt;
&lt;h3 id=&#34;2unityにunivrmをインストール&#34;&gt;2.UnityにUniVRMをインストール&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases&#34;&gt;UniVRM/releases&lt;/a&gt;から最新のunitypackageをダウンロードし、&lt;code&gt;Assets/VRM&lt;/code&gt;、&lt;code&gt;Assets/UniGLTF&lt;/code&gt;及び&lt;code&gt;Assets/VRMShaders&lt;/code&gt;にインストールします。
&lt;strong&gt;既存のUniVRMが存在している場合、あらかじめVRM、UniGLTF、VRMShaders、そしてMeshUtilityフォルダを削除することを推奨&lt;/strong&gt;しています。
UniVRM-XXX.unitypackageファイルをUnityにインポートしてください。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/package_import.jpg&#34; alt=&#34;package_import&#34; width=&#34;400&#34; /&gt;

&lt;hr&gt;
&lt;h3 id=&#34;3vrmファイルをunity上に読み込む&#34;&gt;3.VRMファイルをUnity上に読み込む&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;VRMファイルを、UnityのAssetsにドラッグ＆ドロップする&lt;/strong&gt;だけで、VRMファイルがインポートされ&lt;strong&gt;モデルデータのPrefabが生成されます&lt;/strong&gt;。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_prefab.png&#34;   /&gt;

&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;VRMから生成されたPrefabをシーンに配置します&lt;/strong&gt;。すると、モデルデータが表示されます。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_scene2.png&#34;   /&gt;

&lt;hr&gt;
&lt;p&gt;読み込まれたモデルデータをHierarchyで選択すると、インスペクタに各種情報が表示されます。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_settings.png&#34;   /&gt;

&lt;hr&gt;
&lt;h2 id=&#34;関連セクション&#34;&gt;関連セクション&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm.dev/how_to_make_vrm/setup_vrm/#vrm独自の設定を行う&#34;&gt;vrm独自の設定を行う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/export/univrm_export/&#34;&gt;VRMをエクスポートする&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: ヒューマノイド概要</title>
      <link>https://vrm.dev/docs/univrm/humanoid/humanoid_overview/</link>
      <pubDate>Wed, 16 Sep 2020 15:43:09 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/humanoid/humanoid_overview/</guid>
      <description>
        
        
        &lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;VRMのヒューマノイドは、主にモーションキャプチャーの Forward kinematics のモーションを受けられることを基準に決めました。&lt;/p&gt;
&lt;p&gt;１フレームのモーション(ポーズ)は以下の情報で表される想定です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hipsボーンの移動値&lt;/li&gt;
&lt;li&gt;各ボーンの回転値&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ある Gltf Scene (Unity Hierarhcy) がこのデータを受けて同じポーズを再現するには以下の条件必要です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gltf Node (Unity GameObject) とボーン(hips, spine, chest&amp;hellip;)の対応が分かっている&lt;/li&gt;
&lt;li&gt;ボーンの親子関係が決まっている&lt;/li&gt;
&lt;li&gt;ポーズを受ける前の姿勢が決まっている =&amp;gt; T-Pose&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;備考&lt;/h4&gt;

    細かく言えば、ボーンの長さが違うと同じポーズになりません。
これを解決する技術を、リターゲットと言いますが VRM では特に指定していません。
例えば、股-膝-足首-踵 の比率が違うと地面に対してすべります。

&lt;/div&gt;

&lt;p&gt;Unity の HumanoidAvatar を元に決めたのでだいたい同じです。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.unity3d.com/Manual/AvatarCreationandSetup.html&#34;&gt;https://docs.unity3d.com/Manual/AvatarCreationandSetup.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;さらに、プログラムでの扱いを簡単にするために&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;すべての Gltf Node (Unity GameObject) の回転を0にしたときに初期ポーズになる&lt;/li&gt;
&lt;li&gt;スケールは変化しない&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;を追加したものが VRM のヒューマノイドです。&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;備考&lt;/h4&gt;

    特にスケールは難しい問題で、スケール中心が原点以外、負のスケール、XYZ別々のスケールなどを考慮したプログラム書くのは大変な負担となります。

&lt;/div&gt;

&lt;h2 id=&#34;t-pose&#34;&gt;T-Pose&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/T_pose.png&#34; alt=&#34;T_pose&#34;  /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;T-Poseの例&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;腕と手の指についても規約があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;手の平は下向き&lt;/li&gt;
&lt;li&gt;親指は水平でXZ平面(上から見て)45度&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;unityのヒューマノイド&#34;&gt;Unityのヒューマノイド&lt;/h2&gt;
&lt;p&gt;Unity では、 Avatar というオブジェクトがあります。
これを、 Humanoid モードに設定できます。
Avatar は Unity の オブジェクトですが、Humanoid Avatar の設定画面は &lt;code&gt;fbx importer&lt;/code&gt; の一部です。
このため、 fbx 以外のデータから Humanoid Avatar のあるモデルを作れません。
ただし、Program から Humanoid Avatar を作成する関数はあるので、
UniVRMは Humanoid Avatar を作成できます。 &lt;a href=&#34;https://vrm.dev/docs/univrm/humanoid/meshutility_humanoid/&#34;&gt;humanoid component&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;互換性のあるbvh&#34;&gt;互換性のあるBVH&lt;/h2&gt;
&lt;p&gt;初期姿勢が、 &lt;code&gt;T-Pose&lt;/code&gt; であるBVHと互換性があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hips に移動値を代入して&lt;/li&gt;
&lt;li&gt;hips から子に向かって ローカル回転を代入します&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;詳細&#34;&gt;詳細&lt;/h2&gt;
&lt;p&gt;ボーンの一覧は、&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.unity3d.com/ja/2019.4/ScriptReference/HumanBodyBones.html&#34;&gt;https://docs.unity3d.com/ja/2019.4/ScriptReference/HumanBodyBones.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;と同じです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;対象となるノードはスキニング(GLTFのskinおよびjoint、UnityのSkinnedMeshRendererなど)とは無関係に選択できる&lt;/li&gt;
&lt;li&gt;必須のボーンがすべて含まれている&lt;/li&gt;
&lt;li&gt;ボーンの親子関係がヒューマノイドの定義を守っている(LowerLegの最初に見つかる祖先ボーンがUpperLegであるなど)&lt;/li&gt;
&lt;li&gt;hipsをrootに以下の親子関係。カッコは必須でないボーン
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;hips - spine - chest - (upper chest) - neck - head&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;headからleft - (eye)&lt;/li&gt;
&lt;li&gt;headからright - (eye)&lt;/li&gt;
&lt;li&gt;chestまたはupper chestからleft - (shoulder) - upper arm - lower arm - hand - (fingers)&lt;/li&gt;
&lt;li&gt;chestまたはupper chestからright - (shoulder) - upper arm - lower arm - hand - (fingers)&lt;/li&gt;
&lt;li&gt;hipsからleft - upper leg - lower leg - foot - (toes)&lt;/li&gt;
&lt;li&gt;hipsからright - upper leg - lower leg - foot - (toes)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;間にヒューマノイドに関係ないノードが入ることは許す(LowerLegの親がemptyでその親がUpperLegであるなど)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;必須でないボーンは飛ばしてよい(UpperArmの親がshoulderじゃなくてchestなど)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;関連イシュー&#34;&gt;関連イシュー&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vrm-c/vrm-specification/issues/87&#34;&gt;https://github.com/vrm-c/vrm-specification/issues/87&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.unity3d.com/jp/2014/05/26/mecanim-humanoids/&#34;&gt;Mecanim Humanoids&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/ousttrue/items/aead1c943855561b62e7&#34;&gt;BlenderからUnityのHumanoid互換でfbxをエクスポートする&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 0. Unityを用意して、UniVRMをインストールする</title>
      <link>https://vrm.dev/docs/vrm/how_to_make_vrm/setup_unity/</link>
      <pubDate>Wed, 26 Aug 2020 15:52:30 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/vrm/how_to_make_vrm/setup_unity/</guid>
      <description>
        
        
        &lt;h2 id=&#34;univrm-をダウンロードする&#34;&gt;UniVRM をダウンロードする&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases&#34;&gt;https://github.com/vrm-c/UniVRM/releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;から最新版をダウンロードしてください。
ファイル名は、&lt;code&gt;UniVRM-0.XX.0_YYYY.unitypackage&lt;/code&gt; です。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/download_unitypackage.png&#34; alt=&#34;download_unitypackage&#34;&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;XX YY&lt;/h4&gt;

    XX は UniVRM のバージョン。YYYY は バージョン識別 ID です。

&lt;/div&gt;

&lt;h2 id=&#34;unity-をインストールする&#34;&gt;Unity をインストールする&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://create.unity3d.com/jp-howto-install-win&#34;&gt;https://create.unity3d.com/jp-howto-install-win&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;UniVRMの対応するバージョンの Unity をインストールしてください。
対応するUnityのバージョンは、&lt;code&gt;UniVRM をダウンロードする&lt;/code&gt; の URL をご確認ください。&lt;/p&gt;
&lt;p&gt;推奨バージョン以外を使う場合は、 &lt;a href=&#34;https://vrm.dev/docs/univrm/install/&#34;&gt;インストール&lt;/a&gt; もご確認ください。&lt;/p&gt;
&lt;h2 id=&#34;unityで空のプロジェクトを作る&#34;&gt;Unityで空のプロジェクトを作る&lt;/h2&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/unity_new_project.png&#34;   /&gt;

&lt;p&gt;もしくは&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/new_project.jpg&#34;   /&gt;

&lt;p&gt;Unityを起動し、プロジェクトを新規作成します。New→Create projectをクリック。&lt;/p&gt;
&lt;h2 id=&#34;unity-に-univrm-unitypackage-を-import&#34;&gt;Unity に UniVRM unitypackage を Import&lt;/h2&gt;
&lt;p&gt;メニューの &lt;code&gt;Assets&lt;/code&gt; - &lt;code&gt;Import pacakge&lt;/code&gt; - &lt;code&gt;Custom Package&lt;/code&gt; を選択して、
ダウンロードした &lt;code&gt;UniVRM-0.XX.0_YYYY.unitypackage&lt;/code&gt; を選んでください。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/package_import.jpg&#34; alt=&#34;package_import&#34; width=&#34;400&#34; /&gt;

&lt;p&gt;右下の &lt;code&gt;import&lt;/code&gt; ボタンを押します。&lt;/p&gt;
&lt;h2 id=&#34;import-が成功したか確認する方法&#34;&gt;import が成功したか確認する方法&lt;/h2&gt;
&lt;p&gt;VRM menu が表示されていれば動作しています：&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_menu.jpg&#34; alt=&#34;vrm menu&#34;  /&gt;

&lt;hr&gt;
&lt;p&gt;前のバージョン：&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_menu_old.jpg&#34; alt=&#34;vrm menu old&#34;  /&gt;

&lt;hr&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Unity-2018 で menu が出てこない場合&lt;/h4&gt;

    &lt;code&gt;ProjectSettings&lt;/code&gt; - &lt;code&gt;Player&lt;/code&gt; - &lt;code&gt;Other Settings&lt;/code&gt; - &lt;code&gt;Scripting Runtime Version&lt;/code&gt; を &lt;code&gt;.Net4.X equivalent&lt;/code&gt; になっていることを確認してください

&lt;/div&gt;

&lt;h3 id=&#34;console&#34;&gt;Console&lt;/h3&gt;
&lt;p&gt;Console を表示させると、Unity のエラーメッセージが見れます。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/show_console.jpg&#34; alt=&#34;show console&#34; width=&#34;500&#34; /&gt;

&lt;p&gt;Console左上の clear ボタンを押して赤いメッセージが消えない場合は unitypackage のインストールに失敗しているなど、unity project に異常があります。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/error_in_console.jpg&#34; alt=&#34;clear console&#34; width=&#34;500&#34; /&gt;

&lt;h2 id=&#34;manual&#34;&gt;Manual&lt;/h2&gt;
&lt;p&gt;➡ &lt;a href=&#34;https://vrm.dev/docs/univrm/install/&#34;&gt;インストール&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 構成</title>
      <link>https://vrm.dev/dev/univrm-1.xx/structure/</link>
      <pubDate>Tue, 21 Apr 2020 17:12:49 +0900</pubDate>
      
      <guid>https://vrm.dev/dev/univrm-1.xx/structure/</guid>
      <description>
        
        
        &lt;h2 id=&#34;assetsvrmlib&#34;&gt;Assets/vrmlib&lt;/h2&gt;
&lt;p&gt;GLTFからバイト列を切り出して、index 参照を実体化して作業しやすくした中間の入れ物 &lt;code&gt;VrmLib.Model&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;assetsprotobufserializer&#34;&gt;Assets/ProtobufSerializer&lt;/h2&gt;
&lt;p&gt;VRM-1.0 の読み書き。
ProtocolBufferで定義して、Jsonのシリアライザを生成したもの。&lt;/p&gt;
&lt;p&gt;VRM-1.0 から中間形式の &lt;code&gt;VrmLib.Model&lt;/code&gt; に移し替える。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VRM-1.0 &amp;lt;=&amp;gt; VrmLib.Model&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;assetsvrm&#34;&gt;Assets/VRM&lt;/h2&gt;
&lt;p&gt;UniVRM-0.55 に &lt;code&gt;package.json&lt;/code&gt; を追加したもの。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MToon shader&lt;/li&gt;
&lt;li&gt;UniUnlit shader&lt;/li&gt;
&lt;li&gt;VRM-0.X のシリアライザ&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;assetsunivrm0xreader&#34;&gt;Assets/UniVRM0XReader&lt;/h2&gt;
&lt;p&gt;VRM-0.X から中間形式の &lt;code&gt;VrmLib.Model&lt;/code&gt; に移し替える。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VRM-0.x =&amp;gt; VrmLib.Model&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;assetsunivrm-10&#34;&gt;Assets/UniVRM-1.0&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;VrmLib.Model &amp;lt;=&amp;gt; Unity&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;右手系・左手系の変換&lt;/li&gt;
&lt;li&gt;スクリプトスレッドで実行する必要あり&lt;/li&gt;
&lt;li&gt;GLTF部分(Mesh, Texture, Material, GameObject, SkinnedMeshRendererなど)&lt;/li&gt;
&lt;li&gt;VRM部分(HumanoidAvatar, BlendShapeProxy, LookAt, FirstPersonなど)&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: ブレンドシェイプの設定</title>
      <link>https://vrm.dev/docs/univrm/blendshape/univrm_blendshape/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/blendshape/univrm_blendshape/</guid>
      <description>
        
        
        &lt;p&gt;UniVRM v0.45で導入された新機能は&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/blendshape/blendshape_setup/&#34;&gt;設定画面&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/blendshape/univrm_bake_blendshape/&#34;&gt;BlendShapeの状態をベイクする&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;をご覧ください。&lt;/p&gt;
&lt;h2 id=&#34;vrmblendshapeproxy&#34;&gt;VRMBlendShapeProxy&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMBlendShapeProxy.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;実行時のVRMBlendShapeProxyのインスペクタ。Editorをプレイ状態にすると表示されます&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;使い方は、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BlendShapeAvatarのインスペクタで設定する(Editor)&lt;/li&gt;
&lt;li&gt;BlendShapeClipの値を０~１に変更する(実行時)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;となっています。&lt;/p&gt;
&lt;h2 id=&#34;blendshapeavatar&#34;&gt;BlendShapeAvatar&lt;/h2&gt;
&lt;p&gt;このアセットのインスペクタで表情設定を作成します。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMBlendShapeProxyEditor.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;これをダブルクリックする&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;か&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeAvatarAsset.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;これを選択状態にする&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeAvatarEditor.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;BlendShapeEditorのインスペクタ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;作りたい表情の名前を選択して表示を切り替えます。
以下、Funを選択した例です。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeClip.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;mouth_smileとeye_smileとeyeblow_smileを100にする&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;画像のように眉毛と目と口のBlendShapeがわかれているBlendShapeをグループ化して名前とプリセットを指定することができます。&lt;/p&gt;
&lt;p&gt;Sliderを変更してBlendShapeを作った後はApplyを押して値を記録してください。&lt;/p&gt;
&lt;h2 id=&#34;blendshapeのプリセット&#34;&gt;BlendShapeのプリセット&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShape_Preset.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Presetを選択する&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;BlendShapeClipに対して事前定義された名前です。
以下のものがあります。&lt;/p&gt;
&lt;h3 id=&#34;neutral&#34;&gt;NEUTRAL&lt;/h3&gt;
&lt;p&gt;標準の表情を指定します。
待機状態で使うことを想定しています。&lt;/p&gt;
&lt;h3 id=&#34;a-i-u-e-o&#34;&gt;A, I, U, E, O&lt;/h3&gt;
&lt;p&gt;リップシンクの&lt;code&gt;あ・い・う・え・お&lt;/code&gt;の音声に対応します。&lt;/p&gt;
&lt;h3 id=&#34;blink&#34;&gt;Blink&lt;/h3&gt;
&lt;p&gt;まばたきです。&lt;/p&gt;
&lt;h3 id=&#34;blink_l-blink_r&#34;&gt;Blink_L, Blink_R&lt;/h3&gt;
&lt;p&gt;片目だけつぶる動作です。&lt;/p&gt;
&lt;h3 id=&#34;joy-angry-sorrow-fun&#34;&gt;Joy, Angry, Sorrow, Fun&lt;/h3&gt;
&lt;p&gt;喜怒哀楽です。&lt;/p&gt;
&lt;h3 id=&#34;lookup-lookdown-lookleft-lookright&#34;&gt;LookUp, LookDown, LookLeft, LookRight&lt;/h3&gt;
&lt;p&gt;目線がモーフで制御されているタイプのモデルで使います。&lt;/p&gt;
&lt;h3 id=&#34;unknown&#34;&gt;Unknown&lt;/h3&gt;
&lt;p&gt;事前定義に無い表情などを作るときに指定します。&lt;/p&gt;
&lt;h2 id=&#34;blendshapeproxyの値を変更する実行時&#34;&gt;BlendShapeProxyの値を変更する(実行時)&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMBlendShapeProxyRuntime.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Presetを使う&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;インスペクタから操作できます。&lt;/p&gt;
&lt;h2 id=&#34;オプション表情を追加する&#34;&gt;[オプション]表情を追加する&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMBlendShapeProxyRuntime.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ボタンを押します&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;保存ファイルを決めます。
一番後ろのボタンを選択して名前を入力して設定を作成してください。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeClipOption.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ボタンを押します&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;コードからは以下のように呼び出せます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;// unknownなのでstringで呼び出し
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&lt;/span&gt;proxy.ImmediatelySetValue(&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;びっくり&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f60&#34;&gt;1.0f&lt;/span&gt;); &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;// 0から1で指定
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;オプションマテリアルの色をモーフする&#34;&gt;[オプション]マテリアルの色をモーフする&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeClipMaterial.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Materialモーフの設定&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: GLTFについて</title>
      <link>https://vrm.dev/docs/univrm/gltf/gltf_about/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/gltf/gltf_about/</guid>
      <description>
        
        
        &lt;p&gt;glTFはOpenGLの仕様策定をしているKHRONOSによる3Dフォーマットです。2017年にVersion2が策定されました。
VRMはglTF2.0をベースとしたフォーマットとなっています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/KhronosGroup/glTF&#34;&gt;https://github.com/KhronosGroup/glTF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;gltfはどんな情報を記録できるのか&#34;&gt;glTFはどんな情報を記録できるのか&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;メッシュ(頂点配列、インデックス配列)
&lt;ul&gt;
&lt;li&gt;モーフターゲット&lt;/li&gt;
&lt;li&gt;スキニング(4weight)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;テクスチャ&lt;/li&gt;
&lt;li&gt;マテリアル(PBR)&lt;/li&gt;
&lt;li&gt;シーン&lt;/li&gt;
&lt;li&gt;アニメーション&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;カメラ&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;光源&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3Dのシーン全体を記録できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenGLの右手系Y-UP座標&lt;/li&gt;
&lt;li&gt;メートル単位&lt;/li&gt;
&lt;li&gt;リトルエンディアン&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;gltfフォーマット概説&#34;&gt;glTFフォーマット概説&lt;/h2&gt;
&lt;p&gt;JSON記述部と、画像や頂点配列を記録するバイナリ部の２つの部分からなります。&lt;/p&gt;
&lt;p&gt;gltf形式では、URLやパスで参照する方法で外部のバイナリデータにアクセスします。
glb形式ではJSON部とバイナリ部をひとつのファイルにまとめていて、バイト列のオフセットでバイナリデータにアクセスします。
プログラムから扱うには外部ファイルへのアクセスが無いglb形式の方が簡単&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;です。&lt;/p&gt;
&lt;h2 id=&#34;glb形式&#34;&gt;glb形式&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ヘッダ部 + チャンク部繰り返し&lt;/code&gt;という構造になっています。
実質的には、
&lt;code&gt;ヘッダ部 + JSON CHUNk + BINARY CHUNK&lt;/code&gt;となります。&lt;/p&gt;
&lt;p&gt;ヘッダ部&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;長さ&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;内容&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;型&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ascii&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&amp;ldquo;glTF&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;gltfバージョン&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;int32&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;file size&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;int32&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;チャンク部&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;長さ&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;内容&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;型&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;chunk size&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;int32&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;chunk type&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ascii&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&amp;ldquo;JSON&amp;rdquo; or &amp;ldquo;BIN\x00&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;chunk size&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;chunk body&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;バイト列&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;python3によるパース例&#34;&gt;python3によるパース例&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;struct&lt;/span&gt;
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0cf;font-weight:bold&#34;&gt;json&lt;/span&gt;

&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;Reader&lt;/span&gt;:
    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; __init__(self, data: &lt;span style=&#34;color:#366&#34;&gt;bytes&lt;/span&gt;)&lt;span style=&#34;color:#555&#34;&gt;-&amp;gt;&lt;/span&gt;None:
        self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;data &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; data
        self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;pos &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;read_str&lt;/span&gt;(self, size):
        result &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;data[self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;pos: self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;pos &lt;span style=&#34;color:#555&#34;&gt;+&lt;/span&gt; size]
        self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;pos &lt;span style=&#34;color:#555&#34;&gt;+=&lt;/span&gt; size
        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; result&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;strip()

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;read&lt;/span&gt;(self, size):
        result &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;data[self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;pos: self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;pos &lt;span style=&#34;color:#555&#34;&gt;+&lt;/span&gt; size]
        self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;pos &lt;span style=&#34;color:#555&#34;&gt;+=&lt;/span&gt; size
        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; result

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;read_uint&lt;/span&gt;(self):
        result &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; struct&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;unpack(&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;I&amp;#39;&lt;/span&gt;, self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;data[self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;pos:self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;pos &lt;span style=&#34;color:#555&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;4&lt;/span&gt;])[&lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;]
        self&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;pos &lt;span style=&#34;color:#555&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;4&lt;/span&gt;
        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; result


&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#c0f&#34;&gt;parse_glb&lt;/span&gt;(data: &lt;span style=&#34;color:#366&#34;&gt;bytes&lt;/span&gt;):
    reader &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; Reader(data)
    magic &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; reader&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;read_str(&lt;span style=&#34;color:#f60&#34;&gt;4&lt;/span&gt;)
    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt;  magic &lt;span style=&#34;color:#555&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;glTF&amp;#39;&lt;/span&gt;:
        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;raise&lt;/span&gt; &lt;span style=&#34;color:#c00;font-weight:bold&#34;&gt;Exception&lt;/span&gt;(f&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;magic not found: #{magic}&amp;#39;&lt;/span&gt;)

    version &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; reader&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;read_uint()
    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; version &lt;span style=&#34;color:#555&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;:
        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;raise&lt;/span&gt; &lt;span style=&#34;color:#c00;font-weight:bold&#34;&gt;Exception&lt;/span&gt;(f&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;version:#{version} is not 2&amp;#39;&lt;/span&gt;)

    size &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; reader&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;read_uint()
    size &lt;span style=&#34;color:#555&#34;&gt;-=&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;12&lt;/span&gt;

    json_str &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; None
    body &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; None
    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;while&lt;/span&gt; size &lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;:
        &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;#print(size)&lt;/span&gt;

        chunk_size &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; reader&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;read_uint()
        size &lt;span style=&#34;color:#555&#34;&gt;-=&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;4&lt;/span&gt;

        chunk_type &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; reader&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;read_str(&lt;span style=&#34;color:#f60&#34;&gt;4&lt;/span&gt;)
        size &lt;span style=&#34;color:#555&#34;&gt;-=&lt;/span&gt; &lt;span style=&#34;color:#f60&#34;&gt;4&lt;/span&gt;

        chunk_data &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; reader&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;read(chunk_size)
        size &lt;span style=&#34;color:#555&#34;&gt;-=&lt;/span&gt; chunk_size

        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; chunk_type &lt;span style=&#34;color:#555&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;BIN&lt;/span&gt;&lt;span style=&#34;color:#c30;font-weight:bold&#34;&gt;\x00&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;&lt;/span&gt;:
            body &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; chunk_data
        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;elif&lt;/span&gt; chunk_type &lt;span style=&#34;color:#555&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JSON&amp;#39;&lt;/span&gt;:
            json_str &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; chunk_data
        &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;else&lt;/span&gt;:
            &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;raise&lt;/span&gt; &lt;span style=&#34;color:#c00;font-weight:bold&#34;&gt;Exception&lt;/span&gt;(f&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;unknown chunk_type: {chunk_type}&amp;#39;&lt;/span&gt;)

    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; json&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;loads(json_str), body


&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#366&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;AliciaSolid.vrm&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;as&lt;/span&gt; f:
    parsed, body &lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt; parse_glb(f&lt;span style=&#34;color:#555&#34;&gt;.&lt;/span&gt;read())&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;vrmによる拡張情報&#34;&gt;VRMによる拡張情報&lt;/h2&gt;
&lt;p&gt;JSONの&lt;code&gt;json[&#39;extensions&#39;][&#39;VRM&#39;]&lt;/code&gt;以下に格納されています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vrm-c/vrm-specification/blob/master/specification/0.0/README.ja.md&#34;&gt;VRM仕様&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vrmのgltf部分を3d-builderで表示する&#34;&gt;VRMのglTF部分を3D Builderで表示する&lt;/h2&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_3dbuilder.png&#34;   /&gt;

&lt;p&gt;～.vrmとなっているファイル拡張子を ～.glb に変更すると、&lt;strong&gt;Windows 10標準搭載の3D Builderで読み込み確認することができます&lt;/strong&gt;（ただしVRM独自の設定は反映されません)。&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;VRMではサポートしていません &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;VRMではglbを採用しています。 &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: LookAt</title>
      <link>https://vrm.dev/docs/univrm/lookat/univrm_lookat/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/lookat/univrm_lookat/</guid>
      <description>
        
        
        &lt;p&gt;VRMでは頭から目標(注視点)への相対的な回転(Yaw, Pitch)を得て、
目に適用できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VRMLookAtHead + VRMLookAtBoneApplyer または VRMLookAtBlendShapeApplyer の２つのコンポーネントで設定します。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;lookatの種類&#34;&gt;LookAtの種類&lt;/h2&gt;
&lt;p&gt;注視点への Yaw, Pitch 角を適用する方法が以下の３種類あります。
モデルに応じて選択してください。&lt;/p&gt;
&lt;h3 id=&#34;bone&#34;&gt;Bone&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/lookat/lookat_bone/&#34;&gt;eye ボーンが回転するタイプ&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;blendshape&#34;&gt;BlendShape&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/lookat/lookat_blendshape/&#34;&gt;BlendShapeの頂点移動で制御するタイプ&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;textureuv&#34;&gt;TextureUV&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/lookat/lookat_uv/&#34;&gt;目のテクスチャの &lt;code&gt;UV Offset&lt;/code&gt; で制御するタイプ&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;vrmlookathead&#34;&gt;VRMLookAtHead&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMLookAtHead.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;VRMLookAtHead&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;このコンポーネントは頭から見たTargetの方向を計算します。&lt;/p&gt;
&lt;h3 id=&#34;target&#34;&gt;Target&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Application設定 です。モデルのセットアップには使いません&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注視する対象物です。目を向けたい場所にあるオブジェクトをセットしてください。
カメラをセットすればカメラ目線になります。&lt;/p&gt;
&lt;h2 id=&#34;視線計算の基準位置&#34;&gt;視線計算の基準位置&lt;/h2&gt;
&lt;p&gt;VRMFirstPerson の FirstPersonOffset で Head ボーンからの相対的な基準位置を設定できます。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/firstperson.png&#34;   /&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: MToon</title>
      <link>https://vrm.dev/docs/univrm/shaders/shader_mtoon/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/shaders/shader_mtoon/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://www.slideshare.net/VirtualCast/vrm-mtoon&#34;&gt;MToonの使い方&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;mtoon-について&#34;&gt;MToon について&lt;/h1&gt;
&lt;p&gt;MToon は日本のアニメ的表現をすることを目標としています。
主色 (Lit Color) と陰色 (Shade Color) の 2 色を、Lighting パラメータや光源環境に応じて混合することでそれを実現します。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/mtoon_about.png&#34; alt=&#34;alicia MToon&#34;  /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;MToon を適用したニコニ立体ちゃん&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;手早く設定したい人向け&#34;&gt;手早く設定したい人向け&lt;/h1&gt;
&lt;h2 id=&#34;共通項目&#34;&gt;共通項目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;目的のマテリアルを選択し、シェーダを &lt;code&gt;VRM/MToon&lt;/code&gt; に変更&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Color-&amp;gt;Lit Color, Alpha&lt;/code&gt; と &lt;code&gt;Color-&amp;gt;Shade Color&lt;/code&gt; に同じテクスチャを設定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Color-&amp;gt;Lit Color, Alpha&lt;/code&gt; は白色 &lt;code&gt;Color-&amp;gt;Shade Color&lt;/code&gt; は好きな陰色を設定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Shading-&amp;gt;Toony&lt;/code&gt; は好きな値。主色と影色をパキッとさせたいときは &lt;code&gt;1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Rim-&amp;gt;Additive&lt;/code&gt; は &lt;code&gt;Spheremap&lt;/code&gt; や &lt;code&gt;MatCap&lt;/code&gt; と同等のテクスチャを設定&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Outline-&amp;gt;Width-&amp;gt;Mode&lt;/code&gt; は輪郭線を必要とするなら &lt;code&gt;WorldCoordinates&lt;/code&gt; で、しないなら &lt;code&gt;None&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Outline-&amp;gt;Width-&amp;gt;Width&lt;/code&gt; は 見た目上好きな値&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;普通のマテリアル&#34;&gt;普通のマテリアル&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Shading Shift&lt;/code&gt; は &lt;code&gt;0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Shading Toony-&amp;gt;Shadow Receive Multiplier&lt;/code&gt; は &lt;code&gt;1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;キャラクタの顔など影があまりついてほしくないマテリアル&#34;&gt;キャラクタの顔など、影があまりついてほしくないマテリアル&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Shading Shift&lt;/code&gt; はマイナスの値&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Shading Toony-&amp;gt;Shadow Receive Multiplier&lt;/code&gt; は &lt;code&gt;0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;設定項目&#34;&gt;設定項目&lt;/h1&gt;
&lt;h2 id=&#34;準備&#34;&gt;準備&lt;/h2&gt;
&lt;p&gt;目的のマテリアルを選択し、シェーダを &lt;code&gt;VRM/MToon&lt;/code&gt; に変更します。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/set_mtoon.png&#34; alt=&#34;select MToon&#34;  /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Material の Shader を VRM/MToon に変更.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;rendering&#34;&gt;Rendering&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/mtoon_inspector_rendering.png&#34; alt=&#34;MToon Rendering&#34;  /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Rendering Inspector に含まれる項目.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Rendering 項目では主色と影色、および描画方法を設定します。&lt;/p&gt;
&lt;h3 id=&#34;rendering-type&#34;&gt;Rendering Type&lt;/h3&gt;
&lt;p&gt;マテリアルが不透明か半透明かどうかを設定します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Opaque
&lt;ul&gt;
&lt;li&gt;不透明です。基本的には Opaque を設定することを推奨します。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cutout
&lt;ul&gt;
&lt;li&gt;不透明ですが &lt;code&gt;Color-&amp;gt;Lit Color, Alpha&lt;/code&gt; のアルファ値情報を参照して &lt;code&gt;Color-&amp;gt;Alpha-&amp;gt;Cutoff&lt;/code&gt; の値より小さな箇所の描画をスキップします。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Transparent
&lt;ul&gt;
&lt;li&gt;半透明です。&lt;code&gt;Color-&amp;gt;Lit Color, Alpha&lt;/code&gt; のアルファ値どおりの不透明度になります。&lt;/li&gt;
&lt;li&gt;デメリットとして輪郭線描画は正しく行われません。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cull-mode&#34;&gt;Cull Mode&lt;/h3&gt;
&lt;p&gt;ポリゴンのどちら側の面を描画するかを設定します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Back
&lt;ul&gt;
&lt;li&gt;表側を描画します。基本的にはこの Back を選択します。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Front
&lt;ul&gt;
&lt;li&gt;裏側を描画します。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;None
&lt;ul&gt;
&lt;li&gt;両面を描画します。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;alpha&#34;&gt;Alpha&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Rendering Type&lt;/code&gt; が &lt;code&gt;Cutout&lt;/code&gt; であるときだけ設定する必要があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cutoff (&lt;code&gt;Color-&amp;gt;Alpha&lt;/code&gt;)
&lt;ul&gt;
&lt;li&gt;描画するしないのしきい値を設定します。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;color&#34;&gt;Color&lt;/h2&gt;
&lt;p&gt;描画色を設定します。
テクスチャと色は乗算されます。
光が当たる主色は &lt;code&gt;Lit Color, Alpha&lt;/code&gt; に、光が当たらない陰色は &lt;code&gt;Shade Color&lt;/code&gt; に設定します。
また &lt;code&gt;Lit Color, Alpha&lt;/code&gt; のアルファ値には不透明度情報を設定します。&lt;/p&gt;
&lt;h2 id=&#34;lighting&#34;&gt;Lighting&lt;/h2&gt;
&lt;h3 id=&#34;shading-shift&#34;&gt;Shading Shift&lt;/h3&gt;
&lt;p&gt;光の当たり方に対して、主色と陰色のしきい値を調整します。
&lt;code&gt;0&lt;/code&gt; のとき普通のライティングになります。
マイナス値にするとアニメ的な、主色の範囲が広いライティングになります。
マイナス値のときはセルフシャドウを無効化する必要があるため、表示された警告に従い &lt;code&gt;Shadow Receive Multiplier&lt;/code&gt; を &lt;code&gt;0&lt;/code&gt; に設定する必要があります。&lt;/p&gt;
&lt;h3 id=&#34;shading-toony&#34;&gt;Shading Toony&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Shading Shift&lt;/code&gt; の項目における主色と陰色のしきい値付近を滑らかに変化させるか否かを設定します。
&lt;code&gt;0&lt;/code&gt; のときは通常の Lambert モデルのような写実寄りの滑らかさになります。
&lt;code&gt;1&lt;/code&gt; のときはしきい値ではっきり主色と陰色が変化するアニメ調のライティングになります。&lt;/p&gt;
&lt;h3 id=&#34;shadow-receive-multiplier&#34;&gt;Shadow Receive Multiplier&lt;/h3&gt;
&lt;p&gt;セルフシャドウや落影の影響度を設定します。
&lt;code&gt;0&lt;/code&gt; のときは影響を受けません。
&lt;code&gt;1&lt;/code&gt; のときは影響を受けます。&lt;/p&gt;
&lt;h3 id=&#34;lightcolor-attenuation&#34;&gt;LightColor Attenuation&lt;/h3&gt;
&lt;p&gt;光源の色の影響度を設定します。
&lt;code&gt;0&lt;/code&gt; のときは光源の色の影響を受けます。
&lt;code&gt;1&lt;/code&gt; のときは光源の色の影響を無効化し、光源の色の輝度だけを反映します。&lt;/p&gt;
&lt;h3 id=&#34;rim-additive&#34;&gt;Rim Additive&lt;/h3&gt;
&lt;p&gt;カメラと法線の関係による追加光源を表現します。
一般にはスフィアマップや MatCap と呼ばれます。&lt;/p&gt;
&lt;h3 id=&#34;emission&#34;&gt;Emission&lt;/h3&gt;
&lt;p&gt;光源環境によらず一定な色を設定します。&lt;/p&gt;
&lt;h3 id=&#34;normal-map&#34;&gt;Normal Map&lt;/h3&gt;
&lt;p&gt;法線マップを設定します。
右側の値は法線マップの強さを設定します。&lt;/p&gt;
&lt;h2 id=&#34;outline&#34;&gt;Outline&lt;/h2&gt;
&lt;p&gt;輪郭線を設定します。&lt;/p&gt;
&lt;h3 id=&#34;width-mode&#34;&gt;Width Mode&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;None
&lt;ul&gt;
&lt;li&gt;輪郭線を描画しません&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;WorldCoordinates
&lt;ul&gt;
&lt;li&gt;世界に対して一定の幅の輪郭線を描画します&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ScreenCoordinates
&lt;ul&gt;
&lt;li&gt;スクリーンに対して一定の幅の輪郭線を描画します&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;width&#34;&gt;Width&lt;/h3&gt;
&lt;p&gt;輪郭線の幅を設定します。
&lt;code&gt;Width Mode&lt;/code&gt; が &lt;code&gt;WorldCoordinates&lt;/code&gt; のとき単位はメートルです。&lt;/p&gt;
&lt;h3 id=&#34;color-mode&#34;&gt;Color Mode&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;FixedColor
&lt;ul&gt;
&lt;li&gt;固定色で描画します&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MixedLighting
&lt;ul&gt;
&lt;li&gt;ライティングの影響を乗算します&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;color-1&#34;&gt;Color&lt;/h3&gt;
&lt;p&gt;輪郭線の色を設定します。&lt;/p&gt;
&lt;h3 id=&#34;color-lighting-mix&#34;&gt;Color Lighting Mix&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Color Mode&lt;/code&gt; が &lt;code&gt;MixedLighting&lt;/code&gt; のとき、その乗算係数を設定します。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 「VRM」って何？どんなことができる？</title>
      <link>https://vrm.dev/vrm_about/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/vrm_about/</guid>
      <description>
        
        
        &lt;h2 id=&#34;vrmとは&#34;&gt;「VRM」とは&lt;/h2&gt;
&lt;p&gt;VRMでは「人型」の「キャラクター・アバター」を取り扱うことができます。&lt;strong&gt;UnityでVRMファイルを読み書きする標準実装(UniVRM)が提供されます&lt;/strong&gt; が、 &lt;strong&gt;フォーマットは &lt;a href=&#34;https://www.khronos.org/gltf/&#34;&gt;GLTF&lt;/a&gt; ベースでクロスプラットフォーム&lt;/strong&gt; であり他のゲームエンジンやWebでも取り扱うことが可能です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ヒューマノイドを定義しているのでモーションキャプチャーや人型向けの汎用のモーションを再生できる。&lt;/li&gt;
&lt;li&gt;テクスチャやマテリアルなどすべてのデータが１ファイルにまとまり、&lt;strong&gt;簡単に実行時にロードできる&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;「喜怒哀楽」「瞬き」「あいうえお」といった標準の顔操作が定義されている。ユーザー操作で表情を選択したり、音声からリップシンクしたり、ランダムで瞬きしたり、フェイシャルキャプチャーを割り当てたりできる ➡️ &lt;a href=&#34;https://vrm.dev/docs/univrm/blendshape/univrm_blendshape/&#34;&gt;BlendShape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3種類のマテリアル(シェーダー)に対応 ➡️ &lt;a href=&#34;https://vrm.dev/docs/univrm/shaders/shader_mtoon/&#34;&gt;MToon&lt;/a&gt;, &lt;a href=&#34;https://vrm.dev/docs/univrm/shaders/univrm_unlit/&#34;&gt;Unlit&lt;/a&gt;, &lt;a href=&#34;https://vrm.dev/docs/univrm/shaders/univrm_standard/&#34;&gt;PBR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3種類の視線制御に対応 ➡️ &lt;a href=&#34;https://vrm.dev/docs/univrm/lookat/lookat_bone/&#34;&gt;ボーンによる視線&lt;/a&gt;、 &lt;a href=&#34;https://vrm.dev/docs/univrm/lookat/lookat_blendshape/&#34;&gt;BlendShapeによる視線&lt;/a&gt;、 &lt;a href=&#34;https://vrm.dev/docs/univrm/lookat/lookat_uv/&#34;&gt;TextureUVによる視線&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;キャラクターの髪の毛などについて、物理エンジンに依存しない「揺れ物」標準実装を用意 ➡️ &lt;a href=&#34;https://vrm.dev/docs/univrm/springbone/univrm_secondary/&#34;&gt;SpringBone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;VRでのアバター利用のための、&lt;strong&gt;「一人称視点再現のための情報」&lt;/strong&gt; ➡️ &lt;a href=&#34;https://vrm.dev/docs/univrm/firstperson/univrm_firstperson/&#34;&gt;FirstPerson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;タイトル・作者名などのメタ情報だけでなく、サムネイルや &lt;strong&gt;VR時代に即した、アバターに特化したライセンス情報&lt;/strong&gt; も内包可能 ➡️ &lt;a href=&#34;https://vrm.dev/docs/vrm/vrm_meta/&#34;&gt;Meta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;というように単なるモデルデータに留まらず、&lt;strong&gt;アプリケーションでロードしてすぐに使えるようになっています&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;vrmで何ができるの&#34;&gt;VRMで何ができるの？&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;VRM対応アプリケーションで同じアバター（3Dモデル）データを使うことができます。&lt;/strong&gt;
対応アプリケーションが揃うと、こんな未来になるはず…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VRM対応のキャラクタ製作ツールで自分のアバターをつくる&lt;/li&gt;
&lt;li&gt;自分のアバターで生放送をしていたら、友達も生放送をはじめたので友達の放送に凸しに行った&lt;/li&gt;
&lt;li&gt;放送後そのままVRゲームを起動、自分のアバターでVR世界を探索&lt;/li&gt;
&lt;li&gt;ゲームに飽きたのでVR世界のチャットへ移動。同じアバターで友達と遊ぶ&lt;/li&gt;
&lt;li&gt;翌日はVR勉強会にVR参加。もちろんアバターはいつもの姿で&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;「自分の」アバター（3Dモデルデータ）を「VRM」で取り扱うことで、いろいろなVRM対応アプリケーションやゲームで相互に行き来できるようになります。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;生放送、動画作成、ゲーム、チャット…。いまは複数のVR世界が分断されています。この分断されたVR世界をつなぐための第一歩、それがVRMなのです。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/VRM_WorldConnect_jp.png&#34; alt=&#34;VRM applications&#34;  /&gt;

&lt;hr&gt;
&lt;p&gt;➡️ &lt;a href=&#34;https://vrm.dev/vrm_applications/&#34;&gt;VRMファイルが使えるアプリケーション&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;vrmの特徴&#34;&gt;VRMの特徴&lt;/h2&gt;
&lt;p&gt;VR(Virtual Reality)やVTuberなどにおいて &lt;strong&gt;「キャラクターや人型のアバター（の3Dモデル）」&lt;/strong&gt; を取り扱おうとした場合、従来はアプリケーションごと・3Dモデルデータごとに独自のシステムを開発したり細かく調整したりする必要がありました。&lt;/p&gt;
&lt;p&gt;というのも…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3Dモデルを作成したクリエイターや使用したモデリングツールによって「作法」が違いデータの状況がひとつひとつ異なっている
&lt;ul&gt;
&lt;li&gt;座標系が異なっていたり (Y-UP, Z-UP, 右手系、左手系)&lt;/li&gt;
&lt;li&gt;スケールが異なっていたり(メートル単位、cm単位)&lt;/li&gt;
&lt;li&gt;初期姿勢が異なっていたり(T-Pose, A-Pose, Z+向き、Z-向き)&lt;/li&gt;
&lt;li&gt;表情の表現方法が異なっていたり(Morph, Bone, 識別方法)&lt;/li&gt;
&lt;li&gt;骨（ボーン）の入れ方も状況によって異なっていたり(ボーンの識別方法、親子、リグ)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3Dモデルデータを取り扱うフォーマットは、各社各様で仕様が必要以上に複雑であったり、必要な情報が足りなかったりしている
&lt;ul&gt;
&lt;li&gt;対応ソフトが多い「FBXファイル」はアプリケーションごとに読めたり読めなかったり。どのアプリケーションのどのバージョンで出力したFBXなのか…というのを気にしたかたも多いと思います&lt;/li&gt;
&lt;li&gt;また、ランタイムロードというよりは、アセットとして取り込む方向性です&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3Dモデルデータを「アバターとして使用する」という観点で見ると、必要な情報が整備されていない
&lt;ul&gt;
&lt;li&gt;たとえば一人称視点を実現するための視点の位置はどこか、一人称視点から表示するためには頭部の表示を消さなければならないが、具体的にはどこを消すのか、など&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VRでのアバター表現が急速に盛り上がるなか、こういった状況が続くとアプリケーション開発者にとっても、3Dモデルクリエイターにとっても二度手間三度手間になってしまいます。
この状況を改善するために&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「人型のキャラクターやアバター」において&lt;/li&gt;
&lt;li&gt;細かいモデルデータの差違を吸収・統一し&lt;/li&gt;
&lt;li&gt;アプリケーション側の取り扱いを簡単にする&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;「VRM」は、このような特徴のある「プラットフォーム非依存の3Dアバターファイルフォーマット」を提案する&lt;/strong&gt; ものです。&lt;/p&gt;
&lt;h2 id=&#34;vrmファイルを投稿する探す&#34;&gt;VRMファイルを投稿する・探す&lt;/h2&gt;
&lt;p&gt;現在、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://seed.online/&#34;&gt;The Seed Online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.vroid.com/&#34;&gt;VRoid Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://3d.nicovideo.jp/&#34;&gt;ニコニ立体&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;でVRMファイルの投稿ができます。
ニコニ立体では&lt;a href=&#34;https://3d.nicovideo.jp/search?word_type=tag&amp;amp;word=VRM&#34;&gt;こちら&lt;/a&gt;から投稿されたVRMモデルデータのリストが見られます。ライセンスなど確認して使ってみてください。&lt;/p&gt;
&lt;p&gt;なお、ニコニ立体にご自分でVRMファイルを投稿する際、「バーチャルキャスト連携」を有効にすると&lt;a href=&#34;https://virtualcast.jp/&#34;&gt;バーチャルキャスト&lt;/a&gt;から利用できます。&lt;/p&gt;
&lt;h2 id=&#34;vrmを使うアプリケーションを開発する&#34;&gt;VRMを使うアプリケーションを開発する&lt;/h2&gt;
&lt;p&gt;➡️ &lt;a href=&#34;https://vrm.dev/docs/vrm/vrm_development/&#34;&gt;VRMで開発する&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: VrmObject と Extract</title>
      <link>https://vrm.dev/docs/univrm1/vrm1_tutorial/vrm_object/</link>
      <pubDate>Wed, 04 Aug 2021 21:17:28 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm1/vrm1_tutorial/vrm_object/</guid>
      <description>
        
        
        &lt;h2 id=&#34;vrm-10-の-subasset-を-extract-する&#34;&gt;vrm-1.0 の subasset を extract する&lt;/h2&gt;
&lt;p&gt;vrm-1.0 を import した状態では、付属するアセット(texture, material, meshなど)は fbx と同様に subasset になります。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/vrm1_subasset.jpg&#34;  width=&#34;400&#34; /&gt;

&lt;p&gt;この状態では、subasset の中身を変更することができません。
extract により subasset を個別の Asset に展開します。&lt;/p&gt;
&lt;h3 id=&#34;texturematerial-の-extract&#34;&gt;Texture/Material の Extract&lt;/h3&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/vrm_extract_material_before.jpg&#34;  width=&#34;600&#34; /&gt;

&lt;p&gt;vrm の subasset の texture と material を外部アセットに展開します。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/vrm_extract_material.jpg&#34;  width=&#34;600&#34; /&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/vrm_extract_material_assets.jpg&#34;  width=&#34;400&#34; /&gt;
&lt;/p&gt;
&lt;h3 id=&#34;vrm-関連の-extract&#34;&gt;VRM 関連の Extract&lt;/h3&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/vrm_extract_vrm_before.jpg&#34;  width=&#34;600&#34; /&gt;

&lt;p&gt;vrm の subasset の vrmobject と expression を外部アセットに展開します。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/vrm_extract_vrm.jpg&#34;  width=&#34;600&#34; /&gt;

&lt;h2 id=&#34;vrmobject&#34;&gt;VrmObject&lt;/h2&gt;
&lt;p&gt;VRM モデルには &lt;code&gt;VrmController&lt;/code&gt; コンポーネントがアタッチされており、
&lt;code&gt;VrmController&lt;/code&gt; は &lt;code&gt;VrmObject&lt;/code&gt; を参照します。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/vrm_controller.jpg&#34;  width=&#34;600&#34; /&gt;

&lt;p&gt;VrmObject は以下の４つの設定を持っています。
これらの変更は、シーンではなくアセットに対する変更になります。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/vrm_object.jpg&#34;  width=&#34;600&#34; /&gt;

&lt;h2 id=&#34;meta-画面hahahugoshortcode-s8-hbhb&#34;&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm1/vrm1_tutorial/meta/&#34;&gt;Meta 画面&lt;/a&gt;&lt;/h2&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/vrm_meta_settings.jpg&#34;  width=&#34;400&#34; /&gt;

&lt;h2 id=&#34;expression-画面hahahugoshortcode-s10-hbhb&#34;&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm1/vrm1_tutorial/expression/&#34;&gt;Expression 画面&lt;/a&gt;&lt;/h2&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/vrm_expression_settings.jpg&#34;  width=&#34;400&#34; /&gt;

&lt;h2 id=&#34;lookat-画面hahahugoshortcode-s12-hbhb&#34;&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm1/vrm1_tutorial/lookat/&#34;&gt;LookAt 画面&lt;/a&gt;&lt;/h2&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/vrm_lookat_settings.jpg&#34;  width=&#34;400&#34; /&gt;

&lt;h2 id=&#34;firstperson-画面hahahugoshortcode-s14-hbhb&#34;&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm1/vrm1_tutorial/firstperson/&#34;&gt;FirstPerson 画面&lt;/a&gt;&lt;/h2&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/vrm_firstperson_settings.jpg&#34;  width=&#34;400&#34; /&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: UniGLTF</title>
      <link>https://vrm.dev/docs/univrm/gltf/unigltf/</link>
      <pubDate>Mon, 15 Mar 2021 17:10:43 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/gltf/unigltf/</guid>
      <description>
        
        
        &lt;p&gt;この記事は、 &lt;code&gt;UniVRM-0.63.2&lt;/code&gt; 以降を対象としています。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;UniVRM&lt;/code&gt; に内包されていた &lt;code&gt;UniGLTF&lt;/code&gt; を単体で使えるように整理しました。
&lt;code&gt;Assets/UniGLTF&lt;/code&gt; フォルダに展開されます。&lt;/p&gt;
&lt;h2 id=&#34;unitypackage&#34;&gt;UnityPackage&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;UniVRM-0.XX.unitypackage&lt;/code&gt; でインストールできます。
&lt;code&gt;Assets/VRM&lt;/code&gt; を削除すると &lt;code&gt;glTF&lt;/code&gt; 関連の機能だけを単体で利用できます。&lt;/p&gt;
&lt;h2 id=&#34;upm&#34;&gt;UPM&lt;/h2&gt;
&lt;p&gt;UniGLTF は　VRMShaders に依存しています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;dependencies&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;...&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.vrmshaders&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRMShaders#v0.63.2&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.unigltf&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/UniGLTF#v0.63.2&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;...&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;unigltf-に含まれる機能&#34;&gt;UniGLTF に含まれる機能&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;glTF/glb の読み書き&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;gltf拡張&#34;&gt;glTF拡張&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;KHR_materials_unlit の読み書き
&lt;ul&gt;
&lt;li&gt;unityの unlit 系マテリアルのエクスポート&lt;/li&gt;
&lt;li&gt;VRMShadersの &lt;a href=&#34;https://vrm.dev/docs/univrm/shaders/univrm_unlit/&#34;&gt;UniUnlit&lt;/a&gt; shader としてのインポート&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;KHR_texture_transform の読み書き&lt;/li&gt;
&lt;li&gt;morphTarget(blendShape)の名前を &lt;code&gt;/meshes/*/primitives/*/extras/targetNames&lt;/code&gt;, &lt;code&gt;/meshes/*/extras/targetNames&lt;/code&gt; に読み書きする&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: BaseModel</title>
      <link>https://vrm.dev/docs/univrm/humanoid/base_model/</link>
      <pubDate>Tue, 09 Feb 2021 10:16:43 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/humanoid/base_model/</guid>
      <description>
        
        
        &lt;p&gt;以下の条件を満たす &lt;code&gt;GameObject&lt;/code&gt; をエクスポートして VRM にできます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Animator がアタッチされている&lt;/li&gt;
&lt;li&gt;Animator に HumanoidAvatar がセットされている&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fbx&#34;&gt;FBX&lt;/h2&gt;
&lt;p&gt;fbx で上記の条件を満たすには、 &lt;code&gt;fbx importer&lt;/code&gt; の &lt;code&gt;rig&lt;/code&gt; 設定で &lt;code&gt;humanoid&lt;/code&gt; 化してください。
fbx の prefab は、 humanoid 化すると Animator がアタッチされて &lt;code&gt;HumanoidAvatar&lt;/code&gt; がセットされた状態になります。&lt;/p&gt;
&lt;p&gt;fbx が humanoid 化できるには、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vrm-c/vrm-specification/blob/master/specification/0.0/README.ja.md#%E5%AE%9A%E7%BE%A9%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%83%9C%E3%83%BC%E3%83%B3&#34;&gt;必須のボーン&lt;/a&gt; がすべて含まれている&lt;/li&gt;
&lt;li&gt;ボーンの親子関係が正しい&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;の２つの条件が必用です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ボーンの名前は自由です&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://qiita.com/ousttrue/items/aead1c943855561b62e7&#34;&gt;BlenderからUnityのHumanoid互換でfbxをエクスポートする&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;fbx-をシーン上で加工する&#34;&gt;FBX をシーン上で加工する&lt;/h2&gt;
&lt;p&gt;問題ない&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fbx prefab 内の GameObject に子 GameObject を追加する&lt;/li&gt;
&lt;li&gt;fbx prefab 内の GameObject を disable にする&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;うまくいかない場合あり&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fbx prefab 内の GameObject を削除する&lt;/li&gt;
&lt;li&gt;fbx prefab 内の GameObject を動かす(移動、回転、拡大・縮小、親の付け替え)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;何故問題があるかというと&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HumanoidAvatar が GameObject ヒエラルキーと一致しなくなる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;からです。
HumanoidAvatar にはおそらく、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;元の姿勢&lt;/li&gt;
&lt;li&gt;ヒューマンボーン(hipsなど)と GameObjectの対応関係&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;が記録されています。
これに変更を加えた場合再作成する必用があります。
下記の HumanoidComponent で作成できます。&lt;/p&gt;
&lt;h2 id=&#34;gameobject-から手動で-humanoidavatar-を作成する&#34;&gt;GameObject から手動で HumanoidAvatar を作成する&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;fbx importer&lt;/code&gt; に頼らずに HumanoidAvatar を作成できます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/humanoid/meshutility_humanoid/&#34;&gt;HumanoidComponent&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;これを使うと、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;人型の GLTF&lt;/li&gt;
&lt;li&gt;シーン上でキューブを人型に積み上げる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;などのヒエラルキーに対して、後付けで &lt;code&gt;HumanoidAvatar&lt;/code&gt; を作成することができます。
HumanoidAvatar を作成した GameObject (シーン上、Prefabの両方) は エクスポートして VRM にすることができます。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: PrefabがImportされるタイミングと上書きの注意</title>
      <link>https://vrm.dev/docs/univrm/import/prefab_importer_behaviour/</link>
      <pubDate>Mon, 12 Oct 2020 18:24:15 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/import/prefab_importer_behaviour/</guid>
      <description>
        
        
        &lt;h2 id=&#34;049&#34;&gt;0.49&lt;/h2&gt;
&lt;p&gt;UnityEditorでVRMをAssetImportしたときに、Material, BlendShapeAvatarが既存の場合は上書きしません。
その場合に、Prefab からの Material, BlendShapeAvatarへの参照は既存のファイルを参照するようにしました。&lt;/p&gt;
&lt;h2 id=&#34;046&#34;&gt;0.46&lt;/h2&gt;
&lt;p&gt;UnityEditorでVRMをAssetImportしたときに、Material, BlendShapeAvatar, BlendShapeClip が既存の場合は上書きしません。
Mesh, Texture, Prefabは上書きします。&lt;/p&gt;
&lt;p&gt;Material, BlendShapeAvatar, BlendShapeClipはユーザーが変更しているかもしれないので上書きしないことにしました。
上書きしたい場合はImport前に削除してください。&lt;/p&gt;
&lt;h2 id=&#34;045以前&#34;&gt;0.45以前&lt;/h2&gt;
&lt;p&gt;UnityEditorでVRMをAssetImportしたときに、Mesh, Texture, Material, BlendShape, Prefabが既存の場合は上書きされます。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: BlendShapeのセットアップ(v0.45)</title>
      <link>https://vrm.dev/docs/univrm/blendshape/blendshape_setup/</link>
      <pubDate>Tue, 15 Sep 2020 20:06:14 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/blendshape/blendshape_setup/</guid>
      <description>
        
        
        &lt;h2 id=&#34;blendshape関連のアセット&#34;&gt;BlendShape関連のアセット&lt;/h2&gt;
&lt;p&gt;VRMをImportすると、&lt;code&gt;モデル名から拡張子を除いた名前 + BlendShapes&lt;/code&gt; フォルダにPresetを表すBlendShapeClipが作成されます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/blendshapeclip_assets.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;BlendShapeAvatarアセット。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/blendshapeavatar.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;設定画面&#34;&gt;設定画面&lt;/h2&gt;
&lt;p&gt;アセットには以下の設定画面があります。&lt;/p&gt;
&lt;h3 id=&#34;blendshapeavatarアセットのインスペクタ&#34;&gt;BlendShapeAvatarアセットのインスペクタ&lt;/h3&gt;
&lt;h4 id=&#34;editorタブ&#34;&gt;Editorタブ&lt;/h4&gt;
&lt;p&gt;BlendShapeClip選択・設定作成&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/select_blendshapeavatar.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;listタブv045から&#34;&gt;Listタブ(v0.45から)&lt;/h4&gt;
&lt;p&gt;BlendShapeClipのリスト&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/list.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;blendshapeclipアセットのインスペクタ&#34;&gt;BlendShapeClipアセットのインスペクタ。&lt;/h3&gt;
&lt;h4 id=&#34;blendshapeタブ&#34;&gt;BlendShapeタブ&lt;/h4&gt;
&lt;p&gt;設定作成します。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/alicia_binary.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;blendshape-listタブ&#34;&gt;BlendShape Listタブ&lt;/h4&gt;
&lt;p&gt;BlendShapeタブで作成した値を見ることが出来ます。
あまり使わない。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/blendshape_angry.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;material-listタブ&#34;&gt;Material Listタブ&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;BlendShapeによる&lt;/code&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/lookat/lookat_blendshape/&#34;&gt;LookAt&lt;/a&gt;(後述)や、BlendShapeで色を変える設定を作成することができます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/material_color.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;各blendshapeclipの設定&#34;&gt;各BlendShapeClipの設定&lt;/h2&gt;
&lt;p&gt;各BlendShapeClipに対して顔を作ります(顔以外も可)。&lt;/p&gt;
&lt;h3 id=&#34;1-対象のblendshapeclipを選ぶ&#34;&gt;1. 対象のBlendShapeClipを選ぶ&lt;/h3&gt;
&lt;p&gt;BlendShapeAvatarのインスペクタから選択する&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/select_blendshapeavatar.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;アセットのBlendShapeClipを直接選択する&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/select_blendshapeclip.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-スライダを操作して顔を作る&#34;&gt;2. スライダを操作して顔を作る&lt;/h3&gt;
&lt;p&gt;モデルに存在するSKinnedMeshRendererの名前から、
目的のBlendShapeのスライダーを探して値を設定します。
変更値は即座に反映されます。
&lt;code&gt;Apply&lt;/code&gt;ボタン不要になりました(v0.45)。&lt;/p&gt;
&lt;h3 id=&#34;3-previewの操作&#34;&gt;3. Previewの操作&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Preview Weight Slider&lt;/code&gt; で0~1の効き具合をテストできます。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;左ドラッグ・右ドラッグ&lt;/code&gt;向きを変えられます。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;中ドラッグ&lt;/code&gt;移動できます。&lt;/p&gt;
&lt;h3 id=&#34;中間値を許可しない設定v045&#34;&gt;中間値を許可しない設定(v0.45)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/alicia_binary.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;スクリーンショットのような記号的表現でBlendShapeの中間値を表示したくない場合を想定して、二値化フラグを追加しました。四捨五入(round)で実装しています。&lt;/p&gt;
&lt;p&gt;ロードするアプリケーションがv0.45以降になっていると有効になります。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/binary.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: LookAt(Bone)</title>
      <link>https://vrm.dev/docs/univrm/lookat/lookat_bone/</link>
      <pubDate>Tue, 15 Sep 2020 20:06:14 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/lookat/lookat_bone/</guid>
      <description>
        
        
        &lt;p&gt;VRMLookAtHead + VRMLookAtBoneApplyer の２つのコンポーネントを組み合わせます。&lt;/p&gt;
&lt;h2 id=&#34;ボーン制御の視線-vrmlookatboneapplyer&#34;&gt;ボーン制御の視線: VRMLookAtBoneApplyer&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMLookAtBoneApplyer.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;VRMLookAtBoneApplyer&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;VRMLookAtHeadの計算した視線方向のパラメーターをEyeBoneに適用します。&lt;/p&gt;
&lt;h3 id=&#34;degreemapping&#34;&gt;DegreeMapping&lt;/h3&gt;
&lt;p&gt;目標物への相対角度 yaw, pitch を、eye bone のローテンションにそのまま代入すると目が動きすぎてしまいます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;yaw, pitch 角の上限値 =&amp;gt; Curve X Range Degree&lt;/li&gt;
&lt;li&gt;yaw, pitch が上限の時の eye bone の回転角度 =&amp;gt; Curve Y Range Degree&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;で設定できます。
次の４方向を設定してください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VerticalDown&lt;/li&gt;
&lt;li&gt;VerticalUp&lt;/li&gt;
&lt;li&gt;HorizontalOuter&lt;/li&gt;
&lt;li&gt;HorizontalInner&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;横方向は左右ではなく、内外になります。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 1. VRMファイルを作成する</title>
      <link>https://vrm.dev/how_to_make_vrm/convert_from_humanoid_model/</link>
      <pubDate>Wed, 26 Aug 2020 15:52:06 +0900</pubDate>
      
      <guid>https://vrm.dev/how_to_make_vrm/convert_from_humanoid_model/</guid>
      <description>
        
        
        &lt;h2 id=&#34;unityでhumanoidとして扱えるモデルデータを用意します&#34;&gt;UnityでHumanoidとして扱えるモデルデータを用意します&lt;/h2&gt;
&lt;p&gt;ヒューマノイドモデルは、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;必ずご自分で作られたモデル、ないし、加工しVRアバターとして使うことが許諾されているモデルデータをご用意ください&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;後述しますが、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;VRMファイル自体にライセンス情報を記述する項目がありますので、特にその項目については権利者自身が設定する&lt;/strong&gt; ようにしてください。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;また、Humanoid として認識させるために必須のボーンがすべて含まれている必要があります。&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;ベースモデル&lt;/h4&gt;

    使用可能なベースモデルの詳細は、 &lt;a href=&#34;https://vrm.dev/docs/univrm/humanoid/base_model/&#34;&gt;BaseModel&lt;/a&gt; を参照してください。

&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/vrm-specification/blob/master/specification/0.0/README.ja.md#%E5%AE%9A%E7%BE%A9%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%83%9C%E3%83%BC%E3%83%B3&#34;&gt;必須ボーン&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;unity-に-fbx-を-import-する&#34;&gt;unity に fbx を import する&lt;/h2&gt;
&lt;p&gt;fbx のフォルダを unityの Assets フォルダにドロップします。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/fbx_folder.jpg&#34;   /&gt;

&lt;p&gt;unity&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/assets_fbx.jpg&#34;   /&gt;

&lt;p&gt;青いアイコンが fbx の asset(prefab) です。&lt;/p&gt;
&lt;h2 id=&#34;fbx-の-material-を設定する&#34;&gt;fbx の material を設定する&lt;/h2&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/fbx_default.jpg&#34;   /&gt;

&lt;p&gt;この時点では fbx importer による初期状態になっており、マテリアルがデフォルト状態(StandardShaderでColor, ColorTexture割り当てのみ。半透明設定が無いなど)なので、マテリアルを最低限設定します。
VRM 向けなので、この例では全部 &lt;code&gt;MToon&lt;/code&gt; にします。&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Shader&lt;/h4&gt;

    VRMは、&lt;a href=&#34;https://vrm.dev/docs/univrm/shaders/shader_mtoon/&#34;&gt;MToon&lt;/a&gt;、&lt;a href=&#34;https://vrm.dev/docs/univrm/shaders/univrm_unlit/&#34;&gt;Unlit&lt;/a&gt; と &lt;a href=&#34;https://vrm.dev/docs/univrm/shaders/univrm_standard/&#34;&gt;Standard&lt;/a&gt; の３種類を記録できます。

&lt;/div&gt;

&lt;p&gt;&lt;code&gt;Extract Materials&lt;/code&gt; ボタンを押して fbx のフォルダに &lt;code&gt;Materials&lt;/code&gt; フォルダを作成してそこを選択。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/extract_materials.jpg&#34; alt=&#34;extract_materials&#34; width=&#34;900&#34; /&gt;

&lt;hr&gt;
&lt;p&gt;Shader をすべて &lt;code&gt;VRM/Mtoon&lt;/code&gt; に変更&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/change_to_mtoon.jpg&#34; alt=&#34;change_to_mtoon&#34;  /&gt;

&lt;hr&gt;
&lt;p&gt;MToon の &lt;code&gt;Shade Color&lt;/code&gt; を白に変更&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/shade_color_to_white.jpg&#34; alt=&#34;shade_color_to_white&#34;  /&gt;

&lt;hr&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_preview.jpg&#34;   /&gt;

&lt;p&gt;ちゃんとした設定はこちら。&lt;a href=&#34;https://vrm.dev/docs/univrm/shaders/shader_mtoon/&#34;&gt;MToonの設定&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;手順の説明なので先に進みます。&lt;/p&gt;
&lt;h2 id=&#34;fbx-を-humanoid-設定にする&#34;&gt;fbx を humanoid 設定にする&lt;/h2&gt;
&lt;p&gt;fbx デフォルトは、generic 設定です。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/rig_generic.jpg&#34;   /&gt;

&lt;p&gt;humanoid に変更します。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/select_humanoid.jpg&#34;   /&gt;

&lt;p&gt;&lt;code&gt;apply&lt;/code&gt; を押します。&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;humanoid&lt;/h4&gt;

    このとき fbx importer がヒューマノイドボーンの割り当てを自動で推定します。
失敗する時もあり、成功しても間違っている場合もあります。

&lt;/div&gt;

&lt;p&gt;humanoid のボーン割り当て画面に入ります。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;configure&lt;/code&gt; ボタンを押します。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/BoneMapping.png&#34; alt=&#34;BoneMapping&#34; width=&#34;600&#34; /&gt;

&lt;p&gt;ボーンの割り当てを確認してください。&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;bone&lt;/h4&gt;

    &lt;ul&gt;
&lt;li&gt;前髪に顎ボーンが割り当てられる&lt;/li&gt;
&lt;li&gt;目のハイライトに目ボーンが割り当てられる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;などにご注意ください。

&lt;/div&gt;

&lt;h2 id=&#34;prefab-をシーンに展開&#34;&gt;prefab をシーンに展開&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;File&lt;/code&gt; - &lt;code&gt;New Scene&lt;/code&gt; として、
fbx の prefab をシーンに展開します。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/DragImportedModel.png&#34;  width=&#34;600&#34; /&gt;

&lt;h2 id=&#34;fbx-の-blendshpae-の法線が乱れていないか確認する&#34;&gt;fbx の blendshpae の法線が乱れていないか確認する&lt;/h2&gt;
&lt;p&gt;BlendShapeで変な影が出る場合の対策です。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/blendshape/check_blendshape_normal/&#34;&gt;BlendShape の法線を確認しよう&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;エクスポート&#34;&gt;エクスポート&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_menu.jpg&#34; alt=&#34;vrm_menu&#34; width=&#34;250&#34; /&gt;

&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VRM0&lt;/code&gt; - &lt;code&gt;Export UniVRM-0.XX&lt;/code&gt; を押してダイアログを表示します。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/UniVRMExportHumanoid.jpg&#34; alt=&#34;UniVRMExportHumanoid&#34; width=&#34;400&#34; /&gt;

&lt;br&gt;&lt;/p&gt;
&lt;p&gt;前のバージョンは &lt;code&gt;VRM&lt;/code&gt; - &lt;code&gt;UniVRM-0.XX&lt;/code&gt; - &lt;code&gt;Export humanoid&lt;/code&gt;。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/export058_empty.jpg&#34;  width=&#34;600&#34; /&gt;

&lt;p&gt;&lt;code&gt;Export Root&lt;/code&gt; に prefab をシーンに展開した GameObject をドロップします。&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;エラー&lt;/h4&gt;

    &lt;p&gt;エクスポートダイアログで各種エラーチェックをしています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;赤いメッセージは解決する必要があります。&lt;/li&gt;
&lt;li&gt;黄色いメッセージは無視してエクスポートできます。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/export/univrm_export/&#34;&gt;エクスポートダイアログ&lt;/a&gt;&lt;/p&gt;


&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/export_dialog_title_version_author.jpg&#34;  width=&#34;900&#34; /&gt;

&lt;br&gt;
ライセンス情報を入力してください。赤いメッセージな無くなれば Export を押せます。
次の作業のため、&lt;code&gt;Assets/models/vrm&lt;/code&gt; フォルダを作成してそこにエクスポートしました。&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;エクスポート先&lt;/h4&gt;

    エクスポート先には、Unity の Assets 内、外どちらでも選択できます。
Assets 内を選択すると、Export 直後に Import が発動します(Importの方が重い)。
Assets 内を選択する場合は、新規に専用のフォルダを作成すると分かりやすくなります。

&lt;/div&gt;

&lt;h2 id=&#34;エクスポートオプション&#34;&gt;エクスポートオプション&lt;/h2&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/export_options.jpg&#34;  width=&#34;900&#34; /&gt;



&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;T-Poseにする&lt;/h4&gt;

    自動で T-Pose 化します。このオプションを使わずにシーン上で見た目で T-Pose にしても問題ありません。

&lt;/div&gt;



&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Pose Freeze&lt;/h4&gt;

    エクスポート時に正規化します。
最新版は、 &lt;code&gt;ExportRoot&lt;/code&gt; をセットしたときにヒエラルキーに回転・拡縮があるかどうかを調べて、このチェックボックスを自動で設定するようになっています。

&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: UniUnlit</title>
      <link>https://vrm.dev/docs/univrm/shaders/univrm_unlit/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/shaders/univrm_unlit/</guid>
      <description>
        
        
        &lt;h2 id=&#34;unigltfuniunlit-シェーダー&#34;&gt;&lt;code&gt;UniGLTF/UniUnlit&lt;/code&gt; シェーダー&lt;/h2&gt;
&lt;p&gt;Unity の &lt;code&gt;Unlit&lt;/code&gt; 系シェーダーは、機能ごとに&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unlit/Color&lt;/li&gt;
&lt;li&gt;Unlit/Texture&lt;/li&gt;
&lt;li&gt;Unlit/Transparent&lt;/li&gt;
&lt;li&gt;Unlit/Transparent Cutout&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;のように分かれています。&lt;/p&gt;
&lt;p&gt;また、&lt;code&gt;GLTF&lt;/code&gt; では設定可能なのだけど、標準の &lt;code&gt;Unlit&lt;/code&gt; 系シェーダーでは再現できない組み合わせがあります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Texture&lt;/code&gt; かつ &lt;code&gt;Color&lt;/code&gt; の乗算&lt;/li&gt;
&lt;li&gt;頂点カラー&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらを解決する、統一 &lt;code&gt;unlit&lt;/code&gt; シェーダーとして &lt;code&gt;UniGLTF/UniUnlit&lt;/code&gt; があります。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;UniVRM&lt;/code&gt; で、&lt;code&gt;GLTF&lt;/code&gt; で &lt;code&gt;Unlit&lt;/code&gt; 設定のマテリアルをインポートすると、
すべて &lt;code&gt;UniGLTF/UniUnlit&lt;/code&gt; 使うようになります。&lt;/p&gt;
&lt;p&gt;エクスポートしてからインポートする場合の対応表。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;export&lt;/th&gt;
&lt;th&gt;gltf&lt;/th&gt;
&lt;th&gt;import&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Unlit/Color&lt;/td&gt;
&lt;td&gt;KHR_materials_unlit&lt;/td&gt;
&lt;td&gt;UniGLTF/UniUnlit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unlit/Texture&lt;/td&gt;
&lt;td&gt;KHR_materials_unlit&lt;/td&gt;
&lt;td&gt;UniGLTF/UniUnlit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unlit/Transparent&lt;/td&gt;
&lt;td&gt;KHR_materials_unlit&lt;/td&gt;
&lt;td&gt;UniGLTF/UniUnlit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unlit/Transparent Cutout&lt;/td&gt;
&lt;td&gt;KHR_materials_unlit&lt;/td&gt;
&lt;td&gt;UniGLTF/UniUnlit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VRM/UnlitTexture&lt;/td&gt;
&lt;td&gt;KHR_materials_unlit&lt;/td&gt;
&lt;td&gt;UniGLTF/UniUnlit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VRM/UnlitTransparent&lt;/td&gt;
&lt;td&gt;KHR_materials_unlit&lt;/td&gt;
&lt;td&gt;UniGLTF/UniUnlit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VRM/UnlitCutout&lt;/td&gt;
&lt;td&gt;KHR_materials_unlit&lt;/td&gt;
&lt;td&gt;UniGLTF/UniUnlit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UniGLTF/UniUnlit&lt;/td&gt;
&lt;td&gt;KHR_materials_unlit&lt;/td&gt;
&lt;td&gt;UniGLTF/UniUnlit&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;なお、UniVRM がサポートするシェーダーの中で、&lt;code&gt;UniGLTF/UniUnlit&lt;/code&gt; だけが頂点カラーをサポートしています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Meshに頂点カラーが含まれている&lt;/li&gt;
&lt;li&gt;Materialが &lt;code&gt;Unlit&lt;/code&gt; 判定である&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;場合に、import すると頂点カラーが適用されます。
頂点カラーが不要であるモデルに、Unity の &lt;code&gt;unlit&lt;/code&gt; 系マテリアルを適用してエクスポートすると、
次にインポートするときに意図せずに色が変わる場合があります。
この場合、エクスポート時に &lt;code&gt;RemoveVertexColor&lt;/code&gt; を有効にすることで、頂点カラーを含まない &lt;code&gt;Mesh&lt;/code&gt; をエクスポートすることができます。&lt;/p&gt;
&lt;h2 id=&#34;gltf&#34;&gt;GLTF&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;UniUnlit&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;GLTF Unlit&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;カラーファクター&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/pbrMetallicRoughness/baseColorFactor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;カラーテクスチャ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/pbrMetallicRoughness/baseColorTexture&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;レンダリングモード&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/alphaMode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;カリングモード&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/doubleSided&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: エクスポートダイアログ</title>
      <link>https://vrm.dev/docs/univrm/export/univrm_export/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/export/univrm_export/</guid>
      <description>
        
        
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;用語&lt;/th&gt;
&lt;th&gt;意味&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Root&lt;/td&gt;
&lt;td&gt;エクスポート対象となる一番親のオブジェクト(ひとつだけ)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ヒエラルキー&lt;/td&gt;
&lt;td&gt;Root自身と子孫全部&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;v058&#34;&gt;v0.58~&lt;/h2&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/export062_dialog.png&#34; alt=&#34;vrm export&#34; width=&#34;900&#34; /&gt;

&lt;p&gt;Unityの &lt;a href=&#34;https://docs.unity3d.com/ScriptReference/EditorWindow.html&#34;&gt;EditorWindow&lt;/a&gt; で画面を作成しています。&lt;/p&gt;
&lt;h3 id=&#34;使い方&#34;&gt;使い方&lt;/h3&gt;
&lt;h4 id=&#34;window-を表示する&#34;&gt;Window を表示する&lt;/h4&gt;
&lt;p&gt;以前と同じメニューから表示できます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_menu.jpg&#34; alt=&#34;vrm_menu&#34; width=&#34;250&#34; /&gt;

&lt;br&gt;&lt;/p&gt;
&lt;p&gt;前のバージョン：&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/UniVRMExportHumanoid.jpg&#34; alt=&#34;UniVRMExportHumanoid&#34; width=&#34;400&#34; /&gt;

&lt;ul&gt;
&lt;li&gt;シーン側でエクスポート可能なオブジェクトを先に選択する必要が無くなりました&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;対象のオブジェクトをセットする&#34;&gt;対象のオブジェクトをセットする&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Drag&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/export058_drag.gif&#34; alt=&#34;vrm export&#34; width=&#34;600&#34; /&gt;

&lt;ul&gt;
&lt;li&gt;Selector&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/export058_select.gif&#34; alt=&#34;vrm export&#34; width=&#34;600&#34; /&gt;

&lt;h4 id=&#34;exportrootの条件&#34;&gt;ExportRootの条件&lt;/h4&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/export058_empty.jpg&#34; alt=&#34;vrm export&#34; width=&#34;600&#34; /&gt;

&lt;p&gt;ExportRoot が以下の条件を満たすと設定画面が表示されます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Root である(親が無い)&lt;/li&gt;
&lt;li&gt;Root に回転・スケールが無い(移動は可能)&lt;/li&gt;
&lt;li&gt;ヒューマノイドである(Animatorコンポーネントがアタッチしてあり、Humanoid.Avatarがセットしてある)&lt;/li&gt;
&lt;li&gt;Z+向きである(左足と右足のボーン位置から判定)&lt;/li&gt;
&lt;li&gt;ヒエラルキーの中に enable な mesh を含む&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;エクスポート設定画面&#34;&gt;エクスポート設定画面&lt;/h4&gt;
&lt;p&gt;Metaやエクスポートオプションを設定してください。
警告は修正するかしないかを判断して、問題無ければ無視してください。
選択状態のオブジェクトがエクスポート可能であれば、ダイアログ右下の &lt;code&gt;export&lt;/code&gt; ボタンを押すことができるようになります。
VRMモデルのファイルサイズの詳しい内容は&lt;a href=&#34;https://vrm.dev/docs/univrm/export/vrm_size/&#34;&gt;こちら&lt;/a&gt;を参考してください。&lt;/p&gt;
&lt;h2 id=&#34;オプション&#34;&gt;オプション&lt;/h2&gt;
&lt;p&gt;エクスポートのオプションです。
チェックするとエクスポート前に追加の処理を実行します。&lt;/p&gt;
&lt;h3 id=&#34;force-t-pose&#34;&gt;Force T Pose&lt;/h3&gt;
&lt;p&gt;エクスポート前に強制的にT-Poseにします。
手動でだいたいT-Poseに出来た場合は、チェックしなくても問題ありません。&lt;/p&gt;
&lt;h3 id=&#34;pose-freeze&#34;&gt;Pose Freeze&lt;/h3&gt;
&lt;p&gt;モデルを正規化します。
正規化済みのモデルを再正規化する必用はありませんが、正規化されていない部品を追加した場合は必要です。
正規化されているか否かは、ヒエラルキーのすべてのGameObjectの回転が0 スケールが1 であるか否かです。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0.58 では自動でチェックボックスが On/Off されます&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;useexperimentalexporter&#34;&gt;UseExperimentalExporter&lt;/h3&gt;
&lt;p&gt;シリアライザーのバージョン。
どちらでも動作します。&lt;/p&gt;
&lt;h3 id=&#34;usesparseaccessor&#34;&gt;UseSparseAccessor&lt;/h3&gt;
&lt;p&gt;BlendShapeが多数ある場合にファイルサイズを削減できます。&lt;/p&gt;
&lt;h3 id=&#34;onlyblendshapeposition&#34;&gt;OnlyBlendshapePosition&lt;/h3&gt;
&lt;p&gt;BlendShapeのNormal, Tangent をエクスポートしない。
ファイルサイズを削減できます。
UniVRM-0.53 より前のバージョンはインポート時にエラーになるのに注意してください。&lt;/p&gt;
&lt;h3 id=&#34;reduceblendshape&#34;&gt;ReduceBlendshape&lt;/h3&gt;
&lt;p&gt;BlendShapeClip設定から参照されないBlendShapeをエクスポートしない。
ファイルサイズを削減できます。&lt;/p&gt;
&lt;h3 id=&#34;reduceblendshapeclip&#34;&gt;ReduceBlendshapeClip&lt;/h3&gt;
&lt;p&gt;Presetが Unknown であるBlendShapeClipをエクスポートしない。
ReduceBlendshapeと組み合わせて使います。&lt;/p&gt;
&lt;h3 id=&#34;removevertexcolor&#34;&gt;RemoveVertexColor&lt;/h3&gt;
&lt;p&gt;頂点カラーをエクスポートしない。
GLTFには、頂点カラーを含むが使わないという設定がありません。
UniVRMでは、 &lt;code&gt;unlit&lt;/code&gt; のみ頂点カラー対応です。&lt;/p&gt;
&lt;h2 id=&#34;エラー項目&#34;&gt;エラー項目&lt;/h2&gt;
&lt;p&gt;バージョン毎の判定。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;message&lt;/th&gt;
&lt;th&gt;0.56&lt;/th&gt;
&lt;th&gt;0.57&lt;/th&gt;
&lt;th&gt;0.58&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;The Root translation, rotation and scale will be dropped&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;warn&lt;/td&gt;
&lt;td&gt;error(移動は可)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jaw bone&lt;/td&gt;
&lt;td&gt;warn&lt;/td&gt;
&lt;td&gt;warn&lt;/td&gt;
&lt;td&gt;warn&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Same name bone&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;warn(自動リネーム)&lt;/td&gt;
&lt;td&gt;warn&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vertex color&lt;/td&gt;
&lt;td&gt;warn&lt;/td&gt;
&lt;td&gt;warn&lt;/td&gt;
&lt;td&gt;warn&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unknown shader&lt;/td&gt;
&lt;td&gt;warn&lt;/td&gt;
&lt;td&gt;warn&lt;/td&gt;
&lt;td&gt;warn&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Require source&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Require no parent&lt;/td&gt;
&lt;td&gt;ok&lt;/td&gt;
&lt;td&gt;ok&lt;/td&gt;
&lt;td&gt;error(新規)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Require Z+ forward&lt;/td&gt;
&lt;td&gt;ok&lt;/td&gt;
&lt;td&gt;ok&lt;/td&gt;
&lt;td&gt;error(新規)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Require animator&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Require humanoid avatar&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Require Title/Version/Author&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;No active mesh&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Prefab export&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;ok(NO_ACTIVE_MESHだった)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Springbone validation&lt;/td&gt;
&lt;td&gt;ok&lt;/td&gt;
&lt;td&gt;ok&lt;/td&gt;
&lt;td&gt;warn&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;require-source&#34;&gt;Require source&lt;/h3&gt;
&lt;p&gt;エクスポート可能なオブジェクトをシーンで選択してださい&lt;/p&gt;
&lt;h3 id=&#34;require-animator&#34;&gt;Require animator.&lt;/h3&gt;
&lt;p&gt;RootにAnimatorコンポーネントがついていません(ヒューマノイドでない)&lt;/p&gt;
&lt;h3 id=&#34;require-animatoravatar&#34;&gt;Require animator.avatar&lt;/h3&gt;
&lt;p&gt;RootのAnimatorにavatarがありません(ヒューマノイドでない)&lt;/p&gt;
&lt;h3 id=&#34;animatoravatar-is-not-valid&#34;&gt;Animator.avatar is not valid.&lt;/h3&gt;
&lt;p&gt;RootのAnimatorのavatarが正常でない(ヒューマノイドでない)&lt;/p&gt;
&lt;h3 id=&#34;animatoravatar-is-not-humanoid-please-change-models-animationtype-to-humanoid&#34;&gt;Animator.avatar is not humanoid. Please change model&amp;rsquo;s AnimationType to humanoid.&lt;/h3&gt;
&lt;p&gt;RootのAnimatorのavatarがhumanoidでない。FBXのimport設定の rig で humanoidに変更してください&lt;/p&gt;
&lt;h3 id=&#34;require-title&#34;&gt;Require Title.&lt;/h3&gt;
&lt;p&gt;ダイアログのタイトルを入力してください(必須項目)&lt;/p&gt;
&lt;h3 id=&#34;require-version&#34;&gt;Require Version.&lt;/h3&gt;
&lt;p&gt;ダイアログのバージョンを入力してください(必須項目)&lt;/p&gt;
&lt;h3 id=&#34;require-author&#34;&gt;Require Author.&lt;/h3&gt;
&lt;p&gt;ダイアログのAuthorを入力してください(必須項目)&lt;/p&gt;
&lt;h3 id=&#34;no-active-mesh&#34;&gt;No active mesh&lt;/h3&gt;
&lt;p&gt;ヒエラルキーに active なメッシュが含まれていない&lt;/p&gt;
&lt;h3 id=&#34;filename-0-is-too-long&#34;&gt;FileName &amp;lsquo;{0}&amp;rsquo; is too long.&lt;/h3&gt;
&lt;p&gt;material, texture, mesh の名前が長すぎる。
リネームしてください&lt;/p&gt;
&lt;h3 id=&#34;the-root-translation-rotation-and-scale-will-be-dropped&#34;&gt;The Root translation, rotation and scale will be dropped&lt;/h3&gt;
&lt;p&gt;Rootに移動・回転・スケール値が設定されている。
そのままエクスポートした場合、ルートの TRS は無くなります。
移動に関しては問題がない場合が多いと思われますが、回転・スケールに関しては意図したとおりにならないこともありそうなのでご注意ください。&lt;/p&gt;
&lt;h3 id=&#34;jaw-bone-is-included-it-may-not-what-you-intended-please-check-the-humanoid-avatar-setting-screen&#34;&gt;Jaw bone is included. It may not what you intended. Please check the humanoid avatar setting screen&lt;/h3&gt;
&lt;p&gt;humanoid設定に顎が含まれている。
FBXインポート時に意図せずに自動で割り当てられる場合があります。
間違えて、前髪等が顎になっていて顎にポーズが入力した場合に微妙に動く場合があります。
FBX importer の rig 設定に戻って設定を解除することをおすすめします。&lt;/p&gt;
&lt;h3 id=&#34;there-are-bones-with-the-same-name-in-the-hierarchy-they-will-be-automatically-renamed-after-export&#34;&gt;There are bones with the same name in the hierarchy. They will be automatically renamed after export&lt;/h3&gt;
&lt;p&gt;ヒエラルキーの中に同じ名前のGameObjectが含まれている。
エクスポートした場合に自動でリネームする。&lt;/p&gt;
&lt;h3 id=&#34;this-model-contains-vertex-color&#34;&gt;This model contains vertex color&lt;/h3&gt;
&lt;p&gt;ヒエラルキーに含まれる mesh に頂点カラーが含まれている。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;頂点カラー&lt;/th&gt;
&lt;th&gt;含まれている挙動&lt;/th&gt;
&lt;th&gt;挙動&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;UniVRM-0.53以前&lt;/td&gt;
&lt;td&gt;未対応&lt;/td&gt;
&lt;td&gt;含まれているけど無視する挙動&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UniVRM-0.54～&lt;/td&gt;
&lt;td&gt;使う&lt;/td&gt;
&lt;td&gt;含まれているものは使う挙動&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Unlitで頂点カラーが含まれているが使わないという設定がありせん。
必要ない場合は、&lt;code&gt;Remove Vertex Color&lt;/code&gt; オプションで削除できます。&lt;/p&gt;
&lt;h3 id=&#34;unknown-material-0-is-used-this-will-export-as-standard-fallback&#34;&gt;unknown material &amp;lsquo;{0}&amp;rsquo; is used. this will export as &lt;code&gt;Standard&lt;/code&gt; fallback&lt;/h3&gt;
&lt;p&gt;standard, unlit, mtoon 以外のマテリアルは、standard になります。&lt;/p&gt;
&lt;h2 id=&#34;v057&#34;&gt;v0.57&lt;/h2&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/export_dialog_56.jpg&#34; alt=&#34;vrm export&#34; width=&#34;600&#34; /&gt;

&lt;p&gt;Unityの &lt;a href=&#34;https://docs.unity3d.com/ScriptReference/ScriptableWizard.html&#34;&gt;ScriptableWizard&lt;/a&gt; で画面を作成しています。
v0.58 以降でダイアログを改善予定です。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: UniVRMをインストールする</title>
      <link>https://vrm.dev/docs/univrm/install/univrm_install/</link>
      <pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/install/univrm_install/</guid>
      <description>
        
        
        &lt;h2 id=&#34;unity-version&#34;&gt;Unity Version&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Unity-2019.4 が推奨バージョンです。その他のバージョンは、&lt;a href=&#34;https://vrm.dev/docs/univrm/install/unity_version/&#34;&gt;Unityのバージョン&lt;/a&gt; を参照してください。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;unitypackage-の入手&#34;&gt;unitypackage の入手&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases&#34;&gt;https://github.com/vrm-c/UniVRM/releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;UniVRM-0.XX.X_XXXX.unitypackage&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;です。&lt;/p&gt;
&lt;h2 id=&#34;インストール前の準備&#34;&gt;インストール前の準備&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Unityで新規のプロジェクトを作成します&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ProjectSettings&lt;/code&gt; - &lt;code&gt;Player&lt;/code&gt; - &lt;code&gt;Other Settings&lt;/code&gt; - &lt;code&gt;Rendering&lt;/code&gt; - &lt;code&gt;ColorSpace&lt;/code&gt; を &lt;code&gt;Linear&lt;/code&gt; に設定します(推奨)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/linear_setting.jpg&#34; alt=&#34;linear setting&#34; width=&#34;600&#34; /&gt;



&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Unity-2018.3, Unity-2018.4, Unity-2019.1 で作業する場合&lt;/h4&gt;

    &lt;ul&gt;
&lt;li&gt;&lt;code&gt;ProjectSettings&lt;/code&gt; - &lt;code&gt;Player&lt;/code&gt; - &lt;code&gt;Other Settings&lt;/code&gt; - &lt;code&gt;Scripting Runtime Version&lt;/code&gt; を &lt;code&gt;.Net4.X equivalent&lt;/code&gt; にしてください&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;



&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;既存のプロジェクト&lt;/h4&gt;

    事前に、古いバージョンの VRM を削除することを推奨しています。
&lt;a href=&#34;https://vrm.dev/docs/univrm/install/univrm_uninstall/&#34;&gt;UniVRMをアンインストール&lt;/a&gt; を参照してください。

&lt;/div&gt;

&lt;h2 id=&#34;unitypackage-の-import&#34;&gt;unitypackage の import&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;unitypackage&lt;/code&gt; を Import します。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Assets&lt;/code&gt; - &lt;code&gt;Import Package&lt;/code&gt; - &lt;code&gt;Custom Package...&lt;/code&gt; で &lt;code&gt;UniVRM-0.XX.X_XXXX.unitypackage&lt;/code&gt; を選択します。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Assets/VRM&lt;/code&gt;、&lt;code&gt;Assets/UniGLTF&lt;/code&gt;お及び&lt;code&gt;Assets/VRMShaders&lt;/code&gt; の３つのフォルダに import されます。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/package_import.jpg&#34; alt=&#34;package_import&#34; width=&#34;350&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;UnityPackageをインポート&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;import-が成功したか確認する方法&#34;&gt;import が成功したか確認する方法&lt;/h2&gt;
&lt;p&gt;VRM menu が表示されていれば動作しています：&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_menu.jpg&#34; alt=&#34;vrm menu&#34;  /&gt;

&lt;hr&gt;
&lt;p&gt;前のバージョン：&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_menu_old.jpg&#34; alt=&#34;vrm menu old&#34;  /&gt;

&lt;hr&gt;
&lt;p&gt;menu が出てこない場合は、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Console を表示させます。左上の clear ボタンを推して、エラー(赤いメッセージ)が無いことを確認してください&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/show_console.jpg&#34; alt=&#34;show console&#34; width=&#34;500&#34; /&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/clear_console.jpg&#34; alt=&#34;clear console&#34; width=&#34;500&#34; /&gt;

&lt;h2 id=&#34;関連セクション&#34;&gt;関連セクション&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm.dev/how_to_make_vrm/&#34;&gt;VRMファイルを作ってみたい&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/import/univrm_import/&#34;&gt;VRMをインポートする&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: モデル情報</title>
      <link>https://vrm.dev/docs/univrm/meta/univrm_meta/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/meta/univrm_meta/</guid>
      <description>
        
        
        &lt;h2 id=&#34;vrmmeta&#34;&gt;VRMMeta&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/meta_new.jpg&#34; alt=&#34;meta&#34; width=&#34;800&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;VRMMetaコンポーネント&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;情報information&#34;&gt;情報(Information)&lt;/h3&gt;
&lt;h4 id=&#34;タイトルtitle&#34;&gt;タイトル(Title)&lt;/h4&gt;
&lt;p&gt;アバターモデルの名前を設定します&lt;/p&gt;
&lt;h4 id=&#34;作者author&#34;&gt;作者(Author)&lt;/h4&gt;
&lt;p&gt;モデルの作者の名前を記述します&lt;/p&gt;
&lt;h4 id=&#34;連絡先contact-information&#34;&gt;連絡先(Contact Information)&lt;/h4&gt;
&lt;p&gt;モデルの作者への連絡先を記述します&lt;/p&gt;
&lt;h4 id=&#34;参照reference&#34;&gt;参照(Reference)&lt;/h4&gt;
&lt;p&gt;何か「親作品」に相当するものがある場合は参照URLなどを記述します&lt;/p&gt;
&lt;h4 id=&#34;サムネイルthumbnail&#34;&gt;サムネイル(Thumbnail)&lt;/h4&gt;
&lt;p&gt;アバターモデルのサムネイルを登録します。2048x2048程度の解像度を推奨します。&lt;/p&gt;
&lt;h4 id=&#34;バージョン&#34;&gt;バージョン&lt;/h4&gt;
&lt;p&gt;モデルのバージョンを文字列で指定します。
自由に記述できます。&lt;/p&gt;
&lt;h3 id=&#34;使用許諾ライセンス情報license&#34;&gt;使用許諾・ライセンス情報(License)&lt;/h3&gt;
&lt;h4 id=&#34;アバターの人格に関する許諾範囲personation--characterization-permission&#34;&gt;アバターの人格に関する許諾範囲(Personation / Characterization Permission)&lt;/h4&gt;
&lt;h5 id=&#34;アバターに人格を与えることの許諾範囲a-person-who-can-perform-with-this-avatar&#34;&gt;アバターに人格を与えることの許諾範囲(A person who can perform with this avatar)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;アバターを操作することはアバター作者にのみ許される(The avatar may only be manipulated by its creator)&lt;/li&gt;
&lt;li&gt;明確に許可された人限定(Authorized only to explicitly specified person)&lt;/li&gt;
&lt;li&gt;全員に許可(Authorized to anyone)&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;このアバターを用いて暴力表現を演じることの許可permission-to-perform-violent-acts-with-this-avatar&#34;&gt;このアバターを用いて暴力表現を演じることの許可(Permission to perform violent acts with this avatar)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;不許可(Disallow)&lt;/li&gt;
&lt;li&gt;許可(Allow)&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;このアバターを用いて性的表現を演じることの許可permission-to-perform-sexual-acts-with-this-avatar&#34;&gt;このアバターを用いて性的表現を演じることの許可(Permission to perform sexual acts with this avatar)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;不許可(Disallow)&lt;/li&gt;
&lt;li&gt;許可(Allow)&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;商用利用の許可for-commercial-use&#34;&gt;商用利用の許可(For commercial use)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;不許可(Disallow)&lt;/li&gt;
&lt;li&gt;許可(Allow)&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;その他のライセンス条件other-license-url&#34;&gt;その他のライセンス条件(Other License Url)&lt;/h5&gt;
&lt;p&gt;上記許諾条件以外のライセンス条件がある場合はそのライセンス文書へのURLを記述&lt;/p&gt;
&lt;h4 id=&#34;再配布改変に関する許諾範囲redistribution--modifications-license&#34;&gt;再配布・改変に関する許諾範囲(Redistribution / Modifications License)&lt;/h4&gt;
&lt;h5 id=&#34;ライセンスタイプlicense-type&#34;&gt;ライセンスタイプ(License Type)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;再配布禁止(Redistribution Prohibited)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/deed.ja&#34;&gt;著作権放棄(CC0)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.ja&#34;&gt;Creative Commons CC BYライセンス(CC_BY)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/deed.ja&#34;&gt;Creative Commons CC BY NCライセンス(CC_BY_NC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/deed.ja&#34;&gt;Creative Commons CC BY SAライセンス(CC_BY_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ja&#34;&gt;Creative Commons CC BY NC SAライセンス(CC_BY_NC_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nd/4.0/deed.ja&#34;&gt;Creative Commons CC BY NDライセンス(CC_BY_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.ja&#34;&gt;Creative Commons CC BY NC NDライセンス(CC_BY_NC_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;その他(Other)&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;その他ライセンス条件other-license-url&#34;&gt;その他ライセンス条件(Other License Url)&lt;/h5&gt;
&lt;p&gt;上記許諾条件以外のライセンス条件がある場合はそのライセンス文書へのURLを記述&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: HumanoidComponent</title>
      <link>https://vrm.dev/docs/univrm/humanoid/meshutility_humanoid/</link>
      <pubDate>Thu, 15 Oct 2020 18:23:26 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/humanoid/meshutility_humanoid/</guid>
      <description>
        
        
        &lt;p&gt;&lt;code&gt;UniVRM-0.60.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;fbx が無くても、シーンから直接 humanoid avatar を作成できます。&lt;/p&gt;
&lt;h1 id=&#34;使い方&#34;&gt;使い方&lt;/h1&gt;
&lt;p&gt;ヒューマノイドボーンがあるシーンを用意します。&lt;/p&gt;
&lt;p&gt;例として&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/RiggedFigure/glTF-Binary&#34;&gt;https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/RiggedFigure/glTF-Binary&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;で説明します。&lt;/p&gt;
&lt;p&gt;まず、 &lt;code&gt;RiggedFigure.glb&lt;/code&gt; を Asset フォルダに import してください。
UniVRM の &lt;code&gt;glb&lt;/code&gt; import で prefab が生成されます。&lt;/p&gt;
&lt;p&gt;新規のシーンに &lt;code&gt;RiggedFigure&lt;/code&gt; prefab をインスタンス化します。&lt;/p&gt;
&lt;p&gt;AddComponent で &lt;code&gt;Humanoid&lt;/code&gt; を追加してください。(MeshUtility.Humanoid。UniVRMに含まれています。)&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/bone_required.jpg&#34;   /&gt;

&lt;p&gt;適当に Bone を当てはめます。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/create_avatar.jpg&#34;   /&gt;

&lt;p&gt;&lt;code&gt;Create UnityEngine.Avatar&lt;/code&gt; ボタンを押します。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/humanoid_animator.jpg&#34;   /&gt;

&lt;p&gt;humanoid avatar が新規に作成されます。&lt;/p&gt;
&lt;p&gt;このまま、T-Pose にして VRM 化することもできます。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Glbインポート</title>
      <link>https://vrm.dev/docs/univrm/gltf/glb_import/</link>
      <pubDate>Mon, 12 Oct 2020 17:04:00 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/gltf/glb_import/</guid>
      <description>
        
        
        &lt;h2 id=&#34;エディタモードでglbファイルをインポートする&#34;&gt;エディタモードでGlbファイルをインポートする&lt;/h2&gt;
&lt;p&gt;インポートする手順は&lt;a href=&#34;https://vrm.dev/docs/univrm/import/univrm_import/&#34;&gt;VRM import&lt;/a&gt;と同じです。UnityのAssetsにドラッグ＆ドロップするだけでGlbファイルをインポートできます。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;v0.68.0&lt;/code&gt; 以降。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/DamagedHelmet&#34;&gt;https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/DamagedHelmet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;をサンプルに使っています。&lt;/p&gt;
&lt;h3 id=&#34;reverseaxis-反転軸の設定&#34;&gt;&lt;code&gt;ReverseAxis&lt;/code&gt; 反転軸の設定&lt;/h3&gt;
&lt;p&gt;glTFの右手系Y-UP から Unityの左手系Y-UP に変換するときに反転する軸を選択できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Z軸 (v0.68.0 より前と同じ)&lt;/li&gt;
&lt;li&gt;X軸 (v0.68.0 から追加)&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://vrm.dev/images/unigltf/glb_axis.gif&#34;  width=&#34;400&#34; /&gt;

&lt;p&gt;選択して &lt;code&gt;Apply&lt;/code&gt; を押すと反映されます。&lt;/p&gt;
&lt;h3 id=&#34;extract-materials-and-textures-&#34;&gt;&lt;code&gt;Extract Materials and Textures ...&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;fbx の import と同様に Material と Texture が glb の配下に import されます。
この状態では、Material と Texture は Readonly で設定を変更できません。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/unigltf/glb_material_tab.jpg&#34;  width=&#34;400&#34; /&gt;

&lt;p&gt;&lt;code&gt;Extract Materials and Textures ...&lt;/code&gt; を押すことで Material と Texture を外部アセット(&lt;code&gt;Material.asset&lt;/code&gt;, &lt;code&gt;Texture.png/jpg&lt;/code&gt;) として展開します。
通常の Material と同様に設定を変更できます。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/unigltf/glb_material_tab_extracted.jpg&#34;  width=&#34;400&#34; /&gt;

&lt;p&gt;&lt;code&gt;Remaped Materials&lt;/code&gt;と &lt;code&gt;Remaped Textures&lt;/code&gt; に参照しているリソースが設定されます。
&lt;code&gt;Clear&lt;/code&gt; で extract する前の状態に戻ります。&lt;/p&gt;
&lt;h3 id=&#34;glb-の-extract&#34;&gt;glb の extract&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/DamagedHelmet/glTF-Binary&#34;&gt;https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/DamagedHelmet/glTF-Binary&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;clear&#34;&gt;clear&lt;/h4&gt;
&lt;p&gt;初期状態(clear)では、関連する Asset (Mesh, Material, Texture, AnimationClip)は SubAsset として配下にあります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;texture_1.metallicRoughness&lt;/code&gt; は、&lt;code&gt;texture_1&lt;/code&gt; を元に Unity の Standard Shader 向けに変換したものです。&lt;a href=&#34;https://vrm.dev/docs/univrm/shaders/texture_import/&#34;&gt;テクスチャーのインポート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;texture_3.occlusion&lt;/code&gt; は、 &lt;code&gt;textrue_3&lt;/code&gt; を元に Unity の Standard Shader 向けに変換したものです。&lt;a href=&#34;https://vrm.dev/docs/univrm/shaders/texture_import/&#34;&gt;テクスチャーのインポート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;texture_4.normal&lt;/code&gt; は、 &lt;code&gt;textrue_4&lt;/code&gt; を元に Unity の Standard Shader 向けに変換したものです。&lt;a href=&#34;https://vrm.dev/docs/univrm/shaders/texture_import/&#34;&gt;テクスチャーのインポート&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://vrm.dev/images/unigltf/glb_clear.jpg&#34;  width=&#34;400&#34; /&gt;

&lt;h4 id=&#34;extract&#34;&gt;extract&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Extract Materials and Textures ...&lt;/code&gt; を押すと下記のように変化します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Material_MR.mat&lt;/code&gt; の生成&lt;/li&gt;
&lt;li&gt;&lt;code&gt;texture_0.jpg&lt;/code&gt; の生成(color)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;texture_1.metallicRoughness.png&lt;/code&gt; の生成。&lt;code&gt;texture_1&lt;/code&gt; を元に Unity の Standard Shader 向けに変換したものです。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;texture_2.jpg&lt;/code&gt; の生成(emission)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;texture_3.occlusion.png&lt;/code&gt; の生成。&lt;code&gt;textrue_3&lt;/code&gt; を元に Unity の Standard Shader 向けに変換したものです。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;texture_4.jpg&lt;/code&gt; の生成(normalMap)&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://vrm.dev/images/unigltf/glb_extract.jpg&#34;  width=&#34;400&#34; /&gt;

&lt;h3 id=&#34;gltf-の-extract&#34;&gt;gltf の extract&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/DamagedHelmet/glTF&#34;&gt;https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/DamagedHelmet/glTF&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;clear-1&#34;&gt;clear&lt;/h4&gt;
&lt;p&gt;初期状態(clear)では、関連する Asset (Mesh, Material, Texture(変換が必要なもの), AnimationClip)は SubAsset として配下にあります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Default_AO.occlusion&lt;/code&gt; は、 &lt;code&gt;Default_AO&lt;/code&gt; を元に Unity の Standard Shader 向けに変換したものです。&lt;a href=&#34;https://vrm.dev/docs/univrm/shaders/texture_import/&#34;&gt;テクスチャーのインポート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Defualt_metalRoughness.metallicRoughness&lt;/code&gt; は、&lt;code&gt;Defualt_metalRoughness&lt;/code&gt; を元に Unity の Standard Shader 向けに変換したものです。&lt;a href=&#34;https://vrm.dev/docs/univrm/shaders/texture_import/&#34;&gt;テクスチャーのインポート&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://vrm.dev/images/unigltf/gltf_clear.jpg&#34;  width=&#34;400&#34; /&gt;

&lt;h4 id=&#34;extract-1&#34;&gt;extract&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Extract Materials and Textures ...&lt;/code&gt; を押すと下記のように変化します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Material_MR.mat&lt;/code&gt; の生成&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Default_AO.occlusion.png&lt;/code&gt; の生成。&lt;code&gt;Default_AO&lt;/code&gt; を元に Unity の Standard Shader 向けに変換したものです。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Default_metalRoughness.metallicRoughness.png&lt;/code&gt; の生成。&lt;code&gt;Default_metalRoughness&lt;/code&gt; を元に Unity の Standard Shader 向けに変換したものです。&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://vrm.dev/images/unigltf/gltf_extract.jpg&#34;  width=&#34;400&#34; /&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: LookAt(Blendshape)</title>
      <link>https://vrm.dev/docs/univrm/lookat/lookat_blendshape/</link>
      <pubDate>Tue, 15 Sep 2020 20:06:14 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/lookat/lookat_blendshape/</guid>
      <description>
        
        
        &lt;p&gt;VRMLookAtHead + VRMLookAtBlendShapeApplyer の２つのコンポーネントを組み合わせます。
&lt;code&gt;VRMLookAtBoneApplyer&lt;/code&gt; を削除して、代わりに &lt;code&gt;VRMLookAtBlendShapeApplyer&lt;/code&gt; をアタッチしてください。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Inspector -&amp;gt; Add Component -&amp;gt; VRMLookAtBlendShapeApplyer&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/add_vrm_lookat_blendshape.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;モーフ制御の視線-vrmlookatblendshapeapplyer&#34;&gt;モーフ制御の視線: VRMLookAtBlendShapeApplyer&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/blendshape_applyer.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;BlendShapeで視線制御するモデル用のコンポーネントです。
事前に、 &lt;code&gt;LookUp&lt;/code&gt;, &lt;code&gt;LookDown&lt;/code&gt;, &lt;code&gt;LookLeft&lt;/code&gt;, &lt;code&gt;LookRight&lt;/code&gt; の４つの BlendShape を設定してください。&lt;/p&gt;
&lt;h3 id=&#34;degreemapping&#34;&gt;DegreeMapping&lt;/h3&gt;
&lt;p&gt;以下の設定で、目標物への相対角度 yaw, pitch の適用度合を調整できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;yaw, pitch 角の上限値 =&amp;gt; Curve X Range Degree&lt;/li&gt;
&lt;li&gt;yaw, pitch が上限の時の blendShape の適用割合(0 ～ 1)。1にしてください =&amp;gt; Curve Y Range Degree&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;次の３つを設定してください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VerticalDown&lt;/li&gt;
&lt;li&gt;VerticalUp&lt;/li&gt;
&lt;li&gt;Horizontal&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Standard</title>
      <link>https://vrm.dev/docs/univrm/shaders/univrm_standard/</link>
      <pubDate>Tue, 15 Sep 2020 20:06:14 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/shaders/univrm_standard/</guid>
      <description>
        
        
        &lt;h2 id=&#34;standard&#34;&gt;Standard&lt;/h2&gt;
&lt;p&gt;Unityの&lt;a href=&#34;https://docs.unity3d.com/ja/2019.3/Manual/StandardShaderMaterialParameters.html&#34;&gt;デフォルト&lt;/a&gt;でGLTF標準のPBRマテリアルとほぼ互換性があります。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Unityのデフォルト&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;GLTFのPBRマテリアル&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Albedo カラー&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/pbrMetallicRoughness/baseColorFactor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Albedo テクスチャ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/pbrMetallicRoughness/baseColorTexture&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Metallic レベル&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/pbrMetallicRoughness/metallicFactor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Smoothness レベル&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.0f - (/materials/pbrMetallicRoughness/roughnessFactor)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Metallic テクスチャ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/pbrMetallicRoughness/metallicRoughnessTexture&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;法線マップ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/normalTexture&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;バンプスケール&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/normalTexture/scale&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ハイトマップ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;オクルージョンテクスチャ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/occlusionTexture&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;オクルージョン強度&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/occlusionTexture/strength&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Emission カラー&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/emissiveFactor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Emission テクスチャ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/emissiveTexture&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;詳細マスク&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;セカンダリマップ&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N/A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;レンダリングモード&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;/materials/alphaMode&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;UniVRMのマテリアルインポートに関して、roughnessFactor値はMetallicテクスチャにベイクされる。マテリアルエクスポートではsmoothness値はMetallicテクスチャにベイクされる&lt;a href=&#34;https://github.com/vrm-c/UniVRM/pull/222&#34;&gt;[参照]&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Unity と GLTF でテクスチャーの仕様に非互換があるので、 &lt;code&gt;export/import&lt;/code&gt; で変換しています。&lt;/p&gt;
&lt;h2 id=&#34;テクスチャ変換&#34;&gt;テクスチャ変換&lt;/h2&gt;
&lt;p&gt;Standardシェーダーのカラー以外のテクスチャ(Linear)の処理について。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ノーマルマップの修正。MToonと共通なので次項で説明します&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Materialのプロパティ名 &lt;code&gt;_BumpMap&lt;/code&gt; で判定します。&lt;/li&gt;
&lt;li&gt;EditorImport: &lt;code&gt;TextureImporterType.NormalMap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;RuntimeImport: 法線テクスチャのPack&lt;/li&gt;
&lt;li&gt;Export: 法線テクスチャのUnpack&lt;/li&gt;
&lt;li&gt;sRGBとLinearの対応&lt;/li&gt;
&lt;li&gt;Tangentの対応&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Metallic, Roughnes, OcclusionMapの変換&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RGBAチャンネル組み換え&lt;/li&gt;
&lt;li&gt;Roughness値とSmoothness値の反転&lt;/li&gt;
&lt;li&gt;sRGBとLinearの対応&lt;/li&gt;
&lt;li&gt;Importerで変換、Exporterで逆変換&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;トラブルシューティング&#34;&gt;トラブルシューティング&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ピカピカに反射してしまう。
&lt;ul&gt;
&lt;li&gt;Shaderの種類が &lt;code&gt;Standard&lt;/code&gt; (Unityの標準) で &lt;code&gt;metallic&lt;/code&gt; と &lt;code&gt;smooth&lt;/code&gt; 値が高い状態になっています。 マテリアルのシェーダーを &lt;code&gt;Unlit/UniUnlit&lt;/code&gt; にするとテクスチャがそのまま表示できます。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 2. VRMをセットアップする</title>
      <link>https://vrm.dev/how_to_make_vrm/setup_vrm/</link>
      <pubDate>Wed, 26 Aug 2020 15:52:30 +0900</pubDate>
      
      <guid>https://vrm.dev/how_to_make_vrm/setup_vrm/</guid>
      <description>
        
        
        &lt;h2 id=&#34;vrmモデル&#34;&gt;VRMモデル&lt;/h2&gt;
&lt;p&gt;前節で VRM 出力したモデルの prefab。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;VRMファイルを、UnityのAssetsにドラッグ＆ドロップする&lt;/strong&gt; だけで、VRMファイルがインポートされ &lt;strong&gt;モデルデータのPrefabが生成されます&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_prefab.png&#34;   /&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_components.jpg&#34;   /&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;正規化されている&lt;/li&gt;
&lt;li&gt;VRMMeta, Animator, VRMBlendShapeProxy, VRMFirstPerson, VRMLookAtHead, VRMLookAtBoneApplyer 等がアタッチされている&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vrm-の-prefabをシーンに展開する&#34;&gt;VRM の Prefabをシーンに展開する&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;File&lt;/code&gt; - &lt;code&gt;New Scene&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;prefab をシーンに展開します。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/alicia_scene2.png&#34;   /&gt;

&lt;h2 id=&#34;vrm独自の設定を行う&#34;&gt;VRM独自の設定を行う&lt;/h2&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_settings.png&#34;   /&gt;

&lt;p&gt;読み込まれたモデルデータをHierarchyで選択すると、&lt;strong&gt;インスペクタにさまざまな設定項目&lt;/strong&gt; があらわれます。また、&lt;strong&gt;secondaryには揺れ物の設定&lt;/strong&gt;が入っています。これらを設定していきます。
&lt;strong&gt;少なくとも、&lt;a href=&#34;https://vrm.dev/docs/univrm/meta/univrm_meta/&#34;&gt;タイトル・作者・ライセンス情報&lt;/a&gt;&lt;/strong&gt; は埋めるようにしてください。 &lt;strong&gt;特にライセンス情報は重要です！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ほかに、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/blendshape/univrm_blendshape/&#34;&gt;表情や口パクの設定（BlendShape）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/firstperson/univrm_firstperson/&#34;&gt;一人称視点の設定（一人称視点でモデルを操作する場合、邪魔になる頭などのパーツを指定する、標準の視点位置を設定する）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/lookat/univrm_lookat/&#34;&gt;視線・眼球の可動範囲と可動曲線の設定。ボーンによる眼球回転だけでなく、BlendShapeによる眼球アニメーションにも対応。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/springbone/univrm_secondary/&#34;&gt;揺れ物（SpringBone/SpringBoneCollider）の設定&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;がありますので必要に応じて設定していきます。&lt;/p&gt;
&lt;h3 id=&#34;vrmファイルを出力する&#34;&gt;VRMファイルを出力する&lt;/h3&gt;
&lt;p&gt;調整が終わったら、UnityのHierarchyでモデルデータを選択し、再度メニューから&lt;code&gt;VRM0&lt;/code&gt; - &lt;code&gt;Export UniVRM-0.XX&lt;/code&gt;を実行します。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_menu.jpg&#34; alt=&#34;vrm_menu&#34; width=&#34;250&#34; /&gt;

&lt;br&gt;&lt;/p&gt;
&lt;p&gt;前のバージョンは &lt;code&gt;VRM&lt;/code&gt; - &lt;code&gt;UniVRM-0.XX&lt;/code&gt; - &lt;code&gt;Export humanoid&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/UniVRMExportHumanoid.jpg&#34; alt=&#34;UniVRMExportHumanoid&#34; width=&#34;400&#34; /&gt;

&lt;br&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Pose Freeze&lt;/h4&gt;

    &lt;p&gt;エクスポート時に正規化します。
最新版は、 &lt;code&gt;ExportRoot&lt;/code&gt; をセットしたときにヒエラルキーに回転・拡縮があるかどうかを調べて、このチェックボックスを自動で設定するようになっています。
最初の正規化以降でも、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;アクセサリを追加&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;などの場合に必要です。 &lt;code&gt;ExportRoot&lt;/code&gt; を再セットすれば自動判定します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/blendshape/univrm_bake_blendshape/&#34;&gt;BlendShape の Bake&lt;/a&gt; もあります。&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;

&lt;h3 id=&#34;完成&#34;&gt;完成！&lt;/h3&gt;
&lt;p&gt;これでセットアップ済のVRMファイルが出来ました。&lt;a href=&#34;https://vrm.dev/vrm_applications/&#34;&gt;対応アプリケーション&lt;/a&gt;に読み込ませてみましょう！&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: VRMモデルのファイルサイズ</title>
      <link>https://vrm.dev/docs/univrm/export/vrm_size/</link>
      <pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/export/vrm_size/</guid>
      <description>
        
        
        &lt;p&gt;VRMは、GLB形式なので、&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VRMエクスポートしたファイルのサイズ =&amp;gt; glb のサイズ&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;glb =&amp;gt; json + binary&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;です。&lt;/p&gt;
&lt;p&gt;json はテキストなので通常は 1MB にもなりません。&lt;/p&gt;
&lt;p&gt;binary で主なものは、&lt;/p&gt;
&lt;p&gt;&lt;code&gt;image&lt;/code&gt; と &lt;code&gt;mesh&lt;/code&gt; です。&lt;/p&gt;
&lt;p&gt;5万頂点、5万三角形のモデルを例としてどれくらいの容量になるかを計算する目安を説明します。&lt;/p&gt;
&lt;h2 id=&#34;image&#34;&gt;Image&lt;/h2&gt;
&lt;p&gt;Material が参照する Texture の PNG(JPG) のバイト列がそのまま入っています。
Meta の Thumbnail も対象になります。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;v0.56 でローカルの元ファイルをそのまま使うようにした結果、
元ファイルが巨大であった場合に、以前に比べて大きくなる問題が発生しています。4000x4000のような大きなファイルはPNG(JPG)を縮小してください。v0.58 修正予定。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/issues/502&#34;&gt;https://github.com/vrm-c/UniVRM/issues/502&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;mesh&#34;&gt;Mesh&lt;/h2&gt;
&lt;p&gt;Index バッファ と 頂点バッファです。&lt;/p&gt;
&lt;h3 id=&#34;indexバッファ&#34;&gt;Indexバッファ&lt;/h3&gt;
&lt;p&gt;Indexバッファは、Intの配列を使っています。&lt;/p&gt;
&lt;p&gt;5万三角形のモデルの場合、&lt;/p&gt;
&lt;p&gt;&lt;code&gt;50000 x 4(Int=4byte) x 3(三角形の3頂点) =&amp;gt; 0.6MB&lt;/code&gt; の容量を使います。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GLTFの仕様的には unsigned short も可能ですが、UniVRM のエクスポーターは未対応。65536 頂点までなので 50000 三角形は格納できません。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;頂点バッファ&#34;&gt;頂点バッファ&lt;/h3&gt;
&lt;p&gt;一頂点は、&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    float3 Position; // 頂点位置 4(floatサイズ) x 3(xyz) =&amp;gt; 12byte
    float3 Normal; // 頂点法線 4(floatサイズ) x 3(xyz) =&amp;gt; 12byte
    float2 TEXCOORD_0; // 頂点UV 4(floatサイズ) x 2(xy) =&amp;gt; 8byte
    short4 JOINTS_0; // 頂点BoneIndex 2(shortサイズ) x 4(4boneまで) =&amp;gt; 8byte
    float4 WEIGHTS_0; // 頂点Weight 4(floatサイズ) x 4(4boneまで) =&amp;gt; 16byte
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;となっています。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;頂点カラー、2つめのUV(未対応)などバリエーションがありうる。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;GLTFにはTangent(float4)も保存できますが、UniVRMでは保存せずUnityに計算させています。法線とUVから &lt;code&gt;MIKK T Space&lt;/code&gt; アルゴリズムで計算したものを使う仕様です。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;５万頂点のモデルの場合、&lt;/p&gt;
&lt;p&gt;&lt;code&gt;50000 x (12 + 12 + 8 + 8 + 16) =&amp;gt; 2.8MB&lt;/code&gt; の容量を使います。&lt;/p&gt;
&lt;h2 id=&#34;基本容量&#34;&gt;基本容量&lt;/h2&gt;
&lt;p&gt;以上、 &lt;code&gt;画像サイズ合計 + インデックスバッファ + 頂点バッファ&lt;/code&gt; の合計がモデルの基本容量になります。
5万頂点、5万三角形のモデルの場合、 &lt;code&gt;3.4MB + 画像サイズ合計&lt;/code&gt; が基本容量になります。
基本容量は計算通りの値になります。
以降、時として容量爆発の原因となるブレンドシェイプの容量についてです。&lt;/p&gt;
&lt;h2 id=&#34;ブレンドシェイプmorphtargetの容量&#34;&gt;ブレンドシェイプ(MorphTarget)の容量&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-ブレンドシェイプ頂点&#34; data-lang=&#34;ブレンドシェイプ頂点&#34;&gt;{
    float3 Position; // 頂点位置 4 x 3 =&amp;gt; 12byte. 必須
    float3 Normal; // 頂点法線 4 x 3 =&amp;gt; 12byte. オプション
    float3 Tangent; // 頂点Tangent 4 x 3 =&amp;gt; 12byte. 記録しない
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ひとつのブレンドシェイプで &lt;code&gt;50000 x (12 + 12) =&amp;gt; 1.2MB&lt;/code&gt; の容量を使います。&lt;/p&gt;
&lt;p&gt;20のブレンドシェイプがあったとすると,
&lt;code&gt;50000 x (12 + 12) x 20 =&amp;gt; 24MB&lt;/code&gt; の容量を使います。&lt;/p&gt;
&lt;p&gt;60のブレンドシェイプがあると、
&lt;code&gt;50000 x (12 + 12) x 60 =&amp;gt; 72MB&lt;/code&gt; の容量を使います。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大量のBlendShapeがある&lt;/li&gt;
&lt;li&gt;BlendShapeのある場所と無い場所が分割されていない&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;の条件が揃うと大容量になることに注意してください。
以降、ブレンドシェイプ容量の削減方法についてです。&lt;/p&gt;
&lt;h3 id=&#34;ブレンドシェイプの容量対策&#34;&gt;ブレンドシェイプの容量対策&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/export/univrm_export/&#34;&gt;エクスポートダイアログ&lt;/a&gt;
の以下のオプションがブレンドシェイプの容量に関連します。&lt;/p&gt;
&lt;h4 id=&#34;エクスポートオプション&#34;&gt;エクスポートオプション&lt;/h4&gt;
&lt;p&gt;最初の２つは安全にです。３つめは修正中。4つめは、UniVRM-0.53(含む)以前でロードエラーになるバージョン問題があります。&lt;/p&gt;
&lt;h5 id=&#34;reduceblendshape&#34;&gt;ReduceBlendshape&lt;/h5&gt;
&lt;p&gt;BlendShapeClip設定から参照されないBlendShapeをエクスポートしない。
ファイルサイズを削減できます。&lt;/p&gt;
&lt;h5 id=&#34;reduceblendshapeclip&#34;&gt;ReduceBlendshapeClip&lt;/h5&gt;
&lt;p&gt;Presetが Unknown であるBlendShapeClipをエクスポートしない。
ReduceBlendshapeと組み合わせて使います。&lt;/p&gt;
&lt;h5 id=&#34;usesparseaccessor&#34;&gt;UseSparseAccessor&lt;/h5&gt;
&lt;p&gt;BlendShapeが多数ある場合にファイルサイズを削減できます。&lt;/p&gt;
&lt;p&gt;ブレンドシェイプの値が、 &lt;code&gt;0&lt;/code&gt; でない頂点のみを飛び飛びに記録することで容量を削減する GLTF の仕様です。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;修正中: GLTFの互換性の問題があって、UniVRM以外のローダーでエラーになる&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-ブレンドシェイプ頂点&#34; data-lang=&#34;ブレンドシェイプ頂点&#34;&gt;{
    int Index; // 有効なブレンドシェイプの index =&amp;gt; 4
    float3 Position; // 頂点位置 4 x 3 =&amp;gt; 12byte. 必須
    float3 Normal; // 頂点法線 4 x 3 =&amp;gt; 12byte. オプション
    float3 Tangent; // 頂点Tangent 4 x 3 =&amp;gt; 12byte. 記録しない
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;BlendShapeの有効な頂点数 x (12 + 12 + 4) =&amp;gt; ?MB&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保存方法だけ変わる&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;onlyblendshapeposition&#34;&gt;OnlyBlendshapePosition&lt;/h5&gt;
&lt;p&gt;BlendShapeのNormal, Tangent をエクスポートしない。
ファイルサイズを削減できます。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;UniVRM-0.53 より前のバージョンはインポート時にエラーになるのに注意してください。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;meshutility-で-blendshape-の-あるmesh-と-ないmesh-に分割する&#34;&gt;MeshUtility で BlendShape の あるMesh と ないMesh に分割する&lt;/h4&gt;
&lt;p&gt;例えば、顔(BlendShapeあり)が 10000 頂点、体(BlendShapeなし)が 40000 頂点に分割されていると、&lt;/p&gt;
&lt;p&gt;ひとつのブレンドシェイプで &lt;code&gt;10000 x (12 + 12) =&amp;gt; 0.24MB&lt;/code&gt; の容量を使います。&lt;/p&gt;
&lt;p&gt;分割前の一体型のモデル&lt;/p&gt;
&lt;p&gt;&lt;code&gt;50000 x (12 + 12) =&amp;gt; 1.2MB&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;に比べて容量を節約できます。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ランタイムにも良い可能性があるが、ドローコールは増えるかもしれないのでトレードオフがある&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/gltf/mesh_utility/&#34;&gt;Mesh Utility&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;p&gt;予想より大容量になってしまうときはブレンドシェイプ、次に画像に注意してください。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: エクスポート時にBlendShapeの状態をベイクする</title>
      <link>https://vrm.dev/docs/univrm/blendshape/univrm_bake_blendshape/</link>
      <pubDate>Mon, 27 Jul 2020 19:28:41 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/blendshape/univrm_bake_blendshape/</guid>
      <description>
        
        
        &lt;p&gt;UniVRM ではエクスポートするときに、 &lt;code&gt;SkinnedMeshRenderer&lt;/code&gt; のスライダーを上げておくとその状態を基本状態にすることができます。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/blendshape_value.jpg&#34;  width=&#34;400&#34; /&gt;

&lt;p&gt;&lt;code&gt;Pose Freeze&lt;/code&gt; のチェックボックスを有効にする必要があります。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/check_freeze.jpg&#34;  width=&#34;400&#34; /&gt;

&lt;p&gt;エクスポートすると・・・&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/bake_blink.gif&#34;   /&gt;

&lt;p&gt;基本状態(blendShape が 0 の状態)が変更されます。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: UPMでUniVRMをインストールする</title>
      <link>https://vrm.dev/docs/univrm/install/univrm_upm/</link>
      <pubDate>Wed, 08 Jul 2020 11:42:13 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/install/univrm_upm/</guid>
      <description>
        
        
        &lt;ul&gt;
&lt;li&gt;&lt;code&gt;Unity 2019.4以降&lt;/code&gt; が必要です。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git client&lt;/a&gt; のインストールが必要です。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;unity-向けの-git-のインストール&#34;&gt;Unity 向けの git のインストール&lt;/h3&gt;
&lt;p&gt;Unity Manual &lt;a href=&#34;https://docs.unity3d.com/Manual/upm-git.html#req&#34;&gt;Requirements&lt;/a&gt; を参照してください。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To use Git dependencies in a project, make sure the &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git client&lt;/a&gt; is installed on your machine and that you have added the Git executable path to the PATH system environment variable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;未インストールだと&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An error occurred while resolving packages:
Project has invalid dependencies:
com.vrmc.vrmshaders: No &amp;lsquo;git&amp;rsquo; executable was found. Please install Git on your system then restart Unity and Unity Hub&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;というようなエラーが出ます。&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;他のgit&lt;/h4&gt;

    &lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;https://git-scm.com/&lt;/a&gt; からインストールした git.exe (デフォルトは、 &lt;code&gt;C:\Program Files\Git\cmd\git.exe&lt;/code&gt;) が、Path の中で最初に見つかるように設定してください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;powershell からバージョンを確認した例 (20201130)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-dos&#34; data-lang=&#34;dos&#34;&gt;&amp;gt; git --version
git version 2.29.2.windows.2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3 id=&#34;unitypackagemanager-ウインドウによるインストール&#34;&gt;UnityPackageManager ウインドウによるインストール&lt;/h3&gt;
&lt;p&gt;UnityPackageManagerのWindow&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/menu_packagemanager.jpg&#34;   /&gt;

&lt;hr&gt;
&lt;p&gt;&lt;code&gt;add package from git URL&lt;/code&gt;&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/from_git.jpg&#34;   /&gt;

&lt;hr&gt;
&lt;p&gt;新しいUniVRMバージョンがリリースされる時に、このバージョンに関連するgit urlsを公開します。&lt;/p&gt;
&lt;p&gt;たとえば、&lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases/tag/v0.66.0&#34;&gt;v0.66.0&lt;/a&gt; のgit urlは次のとおりです：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRMShaders#v0.66.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://github.com/vrm-c/UniVRM.git?path=/Assets/UniGLTF#v0.66.0&lt;/code&gt; =&amp;gt; VRMShaders に依存&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRM#v0.66.0&lt;/code&gt; =&amp;gt; UniGLTFとVRMShaders に依存&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;パッケージ同士の依存関係を自動でダウンロードしてくれる機能は無いので、以上の git url を順に追加してください。&lt;/p&gt;
&lt;p&gt;ProjectウィンドウのPackagesフォルダにインポートしたパッケージを確認する：&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/upm_package.jpg&#34;   /&gt;

&lt;hr&gt;
&lt;p&gt;バージョン番号を変更することで、お好きなバージョンに切り替えることができます。&lt;/p&gt;
&lt;h3 id=&#34;packagesmanifestjson-直接編集によるインストール&#34;&gt;packages/manifest.json 直接編集によるインストール&lt;/h3&gt;
&lt;p&gt;以下の内容を追記してください（&lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases/tag/v0.66.0&#34;&gt;v0.66.0&lt;/a&gt;の例)。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;dependencies&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;...&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.vrmshaders&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRMShaders#v0.66.0&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.unigltf&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/UniGLTF#v0.66.0&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.univrm&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRM#v0.66.0&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;...&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;gitの特定コミットを指定する場合&#34;&gt;gitの特定コミットを指定する場合&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;dependencies&lt;/code&gt; に特定のコミットを指定します。&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;dependencies&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;...&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.vrmshaders&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRMShaders#39d54ce7d3b0061d2d9ee236017dca129c7cdc51&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.unigltf&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/UniGLTF#39d54ce7d3b0061d2d9ee236017dca129c7cdc51&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;#34;com.vrmc.univrm&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://github.com/vrm-c/UniVRM.git?path=/Assets/VRM#39d54ce7d3b0061d2d9ee236017dca129c7cdc51&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#a00;background-color:#faa&#34;&gt;...&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: VRMFirstPerson</title>
      <link>https://vrm.dev/docs/univrm/firstperson/univrm_firstperson/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/firstperson/univrm_firstperson/</guid>
      <description>
        
        
        &lt;p&gt;２系統の設定があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VRMモデル内で、VRヘッドセット位置を指定する&lt;/li&gt;
&lt;li&gt;VRで、メッシュごとにカメラの可視設定を分ける&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;※ アプリケーション側でこれらのパラメーターを使っている場合のみ有効です&lt;/p&gt;
&lt;h2 id=&#34;ヘッドセットの位置指定&#34;&gt;ヘッドセットの位置指定&lt;/h2&gt;
&lt;p&gt;ヘッドの動きの頭部への反映を微調整できます。&lt;/p&gt;
&lt;h3 id=&#34;firstpersonbone&#34;&gt;FirstPersonBone&lt;/h3&gt;
&lt;p&gt;通常頭ボーンを指定します。
一人称時にヘッドセットに追随させるボーンです。&lt;/p&gt;
&lt;h3 id=&#34;firstpersonoffset&#34;&gt;FirstPersonOffset&lt;/h3&gt;
&lt;p&gt;追随する位置をFirstPersonBoneの位置からオフセットします。
デフォルト値[0, 0.06, 0]は、Headから両目の間へのオフセットを想定しています。&lt;/p&gt;
&lt;h2 id=&#34;vrの可視設定&#34;&gt;VRの可視設定&lt;/h2&gt;
&lt;p&gt;VRアプリでの可視設定です。
VRアプリでは２種類のカメラが想定されます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一人称(HMDにレンダリングされる)&lt;/li&gt;
&lt;li&gt;三人称(HMD以外。配信用、鏡、マルチユーザーの他のユーザーのHMD)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;です。
このとき、一人称で普通に自身のモデルがすべて見えると不都合があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;近平面で自分の輪切りが見える&lt;/li&gt;
&lt;li&gt;髪が邪魔で何も見えない&lt;/li&gt;
&lt;li&gt;自分モデルの頭部の中身が見えてしまう(歯とか)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;など。
これらの自体に対処するために、メッシュ毎に２種類のカメラに対する可視性を設定できます。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;設定&lt;/th&gt;
&lt;th&gt;一人称カメラ&lt;/th&gt;
&lt;th&gt;三人称カメラ&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Both&lt;/td&gt;
&lt;td&gt;〇&lt;/td&gt;
&lt;td&gt;〇&lt;/td&gt;
&lt;td&gt;体、手、足など頭部から遠い部位を指する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FirstPersonOnly&lt;/td&gt;
&lt;td&gt;〇&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;使わない？&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ThirdPersonOnly&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;〇&lt;/td&gt;
&lt;td&gt;外部カメラしか見えない。頭部、髪、帽子などを指定する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Auto&lt;/td&gt;
&lt;td&gt;後述&lt;/td&gt;
&lt;td&gt;後述&lt;/td&gt;
&lt;td&gt;デフォルト&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;設定のリセット&#34;&gt;設定のリセット&lt;/h3&gt;
&lt;p&gt;FirstPerson は、最初に自動で Auto の設定になるようになっています。
Mesh が増減するなどでモデルの構成が変わった場合に、参照が &lt;code&gt;Missing&lt;/code&gt; になるなどエクスポートできない状態になる場合があります。
VRMFirstPerson をリセットすることで再設定することができます。
リセットする方法は、&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VRM First Person(Script)&lt;/code&gt; インスペクタの右上角の &lt;code&gt;歯車アイコン ⚙&lt;/code&gt; で表示されるメニューから &lt;code&gt;Reset&lt;/code&gt; を選択してください。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/firstperson_reset.gif&#34; alt=&#34;firstperson reset&#34; width=&#34;600&#34; /&gt;

&lt;h3 id=&#34;auto-による-both-と-thirdpersononly-への自動分割&#34;&gt;Auto による Both と ThirdPersonOnly への自動分割&lt;/h3&gt;
&lt;p&gt;設定をAutoにしておくと、ロード時にメッシュを自動で &lt;code&gt;Both&lt;/code&gt; と &lt;code&gt;ThirdPersonOnly&lt;/code&gt; に分離することを指示できます。
UniVRMでは &lt;a href=&#34;https://vrm-c.github.io/UniVRM/ja/vrm0/firstperson.html#setuplayermask&#34;&gt;VRMFirstPerson.Setup()&lt;/a&gt; を呼び出します。
Autoによる自動分割は、重めの処理になります。&lt;/p&gt;
&lt;p&gt;分割基準は、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;含まれる頂点が &lt;code&gt;head&lt;/code&gt; か &lt;code&gt;head&lt;/code&gt; の子孫の weight を持っているか否か&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;です。
すべて同じ側の場合は分割せずに、&lt;code&gt;Both&lt;/code&gt; か &lt;code&gt;ThirdPersonOnly&lt;/code&gt; として扱います。&lt;/p&gt;
&lt;h3 id=&#34;推奨される構成&#34;&gt;推奨される構成&lt;/h3&gt;
&lt;p&gt;あらかじめ、頭と体にモデルを分割しておき&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;頭に &lt;code&gt;ThirdPersonOnly&lt;/code&gt; を指定&lt;/li&gt;
&lt;li&gt;体に &lt;code&gt;Both&lt;/code&gt; を指定&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/firstperson.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;立体ちゃんは頭とそれ以外が分かれているので体をBoth、頭をThirdPersonOnlyに設定します。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/firstperson_runtime.png&#34; alt=&#34;firstperson&#34;  /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;動作例。ThirdPersonOnlyに設定したメッシュがFirstPersonで非表示になりました。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: ビューアでVRMをインポートする</title>
      <link>https://vrm.dev/how_to_view_vrm/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/how_to_view_vrm/</guid>
      <description>
        
        
        &lt;p&gt;VRMビューアアプリは&lt;a href=&#34;https://vrm.dev/vrm_applications/#ビューア&#34;&gt;こちら&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;または&lt;a href=&#34;https://github.com/vrm-c/UniVRMTest/&#34;&gt;UniVRMTest&lt;/a&gt;のビューアを使用できます：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRMTest/releases&#34;&gt;UniVRMTest/releases&lt;/a&gt;からVRMビューア(VRMViewer_v0.xx.x.zip)をダウンロードしてください&lt;/li&gt;
&lt;li&gt;プログラム（VRMViewer_v0.xx.x.exe）を実行して&lt;code&gt;VRMモデル&lt;/code&gt;ボタンをクリックしてください&lt;/li&gt;
&lt;li&gt;VRMモデルを選んでモデルがシーンに表示されます&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Glbエクスポート</title>
      <link>https://vrm.dev/docs/univrm/gltf/how_to_create_glb/</link>
      <pubDate>Mon, 15 Mar 2021 17:10:43 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/gltf/how_to_create_glb/</guid>
      <description>
        
        
        &lt;p&gt;&lt;code&gt;v0.68.0&lt;/code&gt; 以降&lt;/p&gt;
&lt;p&gt;UniVRMに含まれるUniGLTFでglbファイルを作成することが出来ます。
以下、手順を説明します。&lt;/p&gt;
&lt;h3 id=&#34;1-unigltfexport-unigltf-2xy-メニューからダイアログを開きます&#34;&gt;1. &lt;code&gt;UniGLTF/Export UniGLTF-2.X.Y&lt;/code&gt; メニューからダイアログを開きます&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/unigltf/glb_export_dialog.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-exportroot-に対象の-gameiobject-をセットしてください&#34;&gt;2. &lt;code&gt;ExportRoot&lt;/code&gt; に対象の GameIObject をセットしてください&lt;/h3&gt;
&lt;p&gt;ドラッグアンドドロップや、右の◎ボタンを押すことで選択できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一番親は、GLTFのノードではなくシーンとして記録しています。シーンには、移動・回転・拡縮 がありません。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-export-を押す&#34;&gt;3. &lt;code&gt;Export&lt;/code&gt; を押す&lt;/h3&gt;
&lt;p&gt;ファイル保存ダイアログが表示されるので出力先を指定してください。&lt;/p&gt;
&lt;h2 id=&#34;glbのエクスポート対象になるコンポーネント&#34;&gt;Glbのエクスポート対象になるコンポーネント&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MeshRenderer + MeshFilter&lt;/code&gt; (一番親以外の子供につけてください)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SkinnedMeshRenderer&lt;/code&gt; (一番親以外の子供につけてください)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Animation&lt;/code&gt; (一番親のオブジェクトに付けてください。回転はQuaternionのキーフレームを打ってください。移動・回転・拡縮に対応しています。BlendShapeは未対応)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;対応しているshader&#34;&gt;対応しているShader&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Standard&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Unlit/Color&lt;/code&gt;, &lt;code&gt;Unlit/Texture&lt;/code&gt;, &lt;code&gt;Unlit/Transparent&lt;/code&gt;, &lt;code&gt;Unlit/Transparent Cutout&lt;/code&gt;, &lt;code&gt;UniGLTF/UniUnlit&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;v0680-より前&#34;&gt;&lt;code&gt;v0.68.0&lt;/code&gt; より前&lt;/h1&gt;
&lt;h2 id=&#34;手順&#34;&gt;手順&lt;/h2&gt;
&lt;p&gt;UniVRMに含まれるUniGLTFでglbファイルを作成することが出来ます。
以下、手順を説明します。&lt;/p&gt;
&lt;h3 id=&#34;1-空のシーンを用意します&#34;&gt;1. 空のシーンを用意します。&lt;/h3&gt;
&lt;h3 id=&#34;2-一番親になるemptyを作成します移動回転拡縮は無し&#34;&gt;2. 一番親になるemptyを作成します。移動・回転・拡縮は無し。&lt;/h3&gt;
&lt;p&gt;一番親は、GLTFのノードではなくシーンとして記録しています。シーンには、移動・回転・拡縮 がありません。&lt;/p&gt;
&lt;h3 id=&#34;3-エクスポートしたいオブジェクトをemptyの子にします&#34;&gt;3. エクスポートしたいオブジェクトをemptyの子にします。&lt;/h3&gt;
&lt;p&gt;(この例ではCubeを作成しました。Prefab等任意のオブジェクトを追加できます)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/root_cube.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-一番親のオブジェクトを選択してエクスポートメニューを起動します&#34;&gt;4. 一番親のオブジェクトを選択して、エクスポートメニューを起動します。&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/menu_unigltf_export.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;5-ファイル名を選択して-glb-ファイルを書き出せば完了です&#34;&gt;5. ファイル名を選択して &lt;code&gt;glb&lt;/code&gt; ファイルを書き出せば完了です。&lt;/h3&gt;
&lt;h2 id=&#34;glbのエクスポート対象になるコンポーネント-1&#34;&gt;Glbのエクスポート対象になるコンポーネント&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MeshRenderer + MeshFilter&lt;/code&gt; (一番親以外の子供につけてください)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SkinnedMeshRenderer&lt;/code&gt; (一番親以外の子供につけてください)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Animation&lt;/code&gt; (一番親のオブジェクトに付けてください。回転はQuaternionのキーフレームを打ってください。移動・回転・拡縮に対応しています。BlendShapeは未対応)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;対応しているshader-1&#34;&gt;対応しているShader&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Standard&lt;/code&gt; もしくは &lt;code&gt;Unlit/Color&lt;/code&gt;, &lt;code&gt;Unlit/Texture&lt;/code&gt;, &lt;code&gt;Unlit/Transparent&lt;/code&gt;, &lt;code&gt;Unlit/Transparent Cutout&lt;/code&gt;, &lt;code&gt;UniGLTF/UniUnlit&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: BlendShape の法線を確認しよう</title>
      <link>https://vrm.dev/docs/univrm/blendshape/check_blendshape_normal/</link>
      <pubDate>Tue, 17 Nov 2020 16:23:29 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/blendshape/check_blendshape_normal/</guid>
      <description>
        
        
        &lt;p&gt;最近のバージョンの Unity（Unity 2018~）では、 fbx を import したときに blendshape 法線が自動で再計算される挙動になっていて blendshape の見た目がおかしくなることがあります。&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;詳細&lt;/h4&gt;

    BlendShape の法線が (0, 0, 0) ならば、法線が変化しません。
これに、計算された法線が設定されて意図しない変化をするようです。
ベースになるメッシュの法線が加工されている場合、
ミラーリングで左右が分かれている場合の境界などで顕著です。

&lt;/div&gt;

&lt;h2 id=&#34;mtoonの法線デバッグ表示で法線を確認する&#34;&gt;MToonの法線デバッグ表示で法線を確認する&lt;/h2&gt;
&lt;p&gt;fbx の &lt;code&gt;Materials&lt;/code&gt; タブの &lt;code&gt;Extract Materials...&lt;/code&gt; を実行してマテリアルを取り出します。&lt;/p&gt;
&lt;p&gt;すべてのマテリアルを選択します。&lt;/p&gt;
&lt;p&gt;マテリアルの種類を &lt;code&gt;VRM/MToon&lt;/code&gt; に変更します。&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;法線確認&lt;/h4&gt;

    法線確認のために仮に MToon 化するだけなので、テクスチャ等の設定は不要です。

&lt;/div&gt;

&lt;p&gt;MToon の &lt;code&gt;Options - Debugging Options - Visualize&lt;/code&gt; を &lt;code&gt;Normal&lt;/code&gt; に変更します。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/mtoon_normal.gif&#34; alt=&#34;debug normal&#34;&gt;&lt;/p&gt;
&lt;p&gt;SkinnedMeshRenderer を選択します。&lt;/p&gt;
&lt;p&gt;BlendShape のスライダーを動かして法線を確認します。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/broken_normal.jpg&#34; alt=&#34;debug normal&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;鼻先&lt;/li&gt;
&lt;li&gt;下唇&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;の法線が顕著に乱れています。&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;モデル情報&lt;/h4&gt;

    &lt;ul&gt;
&lt;li&gt;vroid さんの vrm を blender に import&lt;/li&gt;
&lt;li&gt;blender から fbx export&lt;/li&gt;
&lt;li&gt;unity に import&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;したものです。

&lt;/div&gt;

&lt;h2 id=&#34;blendshape-の法線をなおす&#34;&gt;BlendShape の法線をなおす&lt;/h2&gt;
&lt;p&gt;上記の方法で BlendShape がおかしいことが分かった場合に修復する方法。&lt;/p&gt;
&lt;p&gt;fbx の &lt;code&gt;Model&lt;/code&gt; タブを選択。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Legacy Blend Shape Normals&lt;/code&gt; をチェックして Apply。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/legacy_normal_fixed.jpg&#34; alt=&#34;fixed normal&#34;&gt;&lt;/p&gt;
&lt;p&gt;BlendShape がなおっていることを確認します。&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;修正前との違い&lt;/h4&gt;

    鼻先、下唇に加えて、舌が全然違う法線になってます。

&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: LookAt(UV)</title>
      <link>https://vrm.dev/docs/univrm/lookat/lookat_uv/</link>
      <pubDate>Tue, 15 Sep 2020 20:06:14 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/lookat/lookat_uv/</guid>
      <description>
        
        
        &lt;p&gt;VRMLookAtHead + VRMLookAtBlendShapeApplyer の２つのコンポーネントを組み合わせます。
&lt;code&gt;VRMLookAtBoneApplyer&lt;/code&gt; を削除して、代わりに &lt;code&gt;VRMLookAtBlendShapeApplyer&lt;/code&gt; をアタッチしてください。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Inspector -&amp;gt; Add Component -&amp;gt; VRMLookAtBlendShapeApplyer&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/add_vrm_lookat_blendshape.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;textureのuv操作による視線制御&#34;&gt;TextureのUV操作による視線制御&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/blendshape_applyer.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;Textureを上下左右にスライドさせることで目線を移動させる方法です。
&lt;code&gt;Unityちゃん&lt;/code&gt; はこのタイプです。&lt;/p&gt;
&lt;h2 id=&#34;目のマテリアルを探す&#34;&gt;目のマテリアルを探す&lt;/h2&gt;
&lt;p&gt;マテリアルのインスペクタの目のテクスチャの &lt;code&gt;Tiling Offset&lt;/code&gt; の設定に注目してください。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/material_tiling_offset.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;1, 1, 0, 0&lt;/code&gt; になっているはずです(なっていない場合は特殊なので以降を適切に読み替えてください)。&lt;/p&gt;
&lt;p&gt;試しに、&lt;code&gt;Offset&lt;/code&gt; Xの値を増減させてみてください。目が左右に動きます。Yの値では上下に動くはずです。
目的の設定が見つかったので元に戻して次に進みます。&lt;/p&gt;
&lt;h2 id=&#34;blendshapeの準備&#34;&gt;BlendShapeの準備&lt;/h2&gt;
&lt;p&gt;LookUp, LookDown, LookLeft, LookRight が、目標のマテリアルのカラーマテリアルの UV を操作するようにします。
例では、Materialに &lt;code&gt;unlit/transparent cutout&lt;/code&gt; を使用しています。&lt;/p&gt;
&lt;h3 id=&#34;lookleftの例&#34;&gt;LookLeftの例&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;LookLeft&lt;/code&gt; 選択してください。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/lookleft.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Material List&lt;/code&gt; タブを選択&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt; を選択&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eye_L1&lt;/code&gt; - &lt;code&gt;_MainTex_ST&lt;/code&gt; を選択&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Tliling = 1, 1&lt;/code&gt;, &lt;code&gt;Offset = 0, 0&lt;/code&gt; に設定します&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/tiling_offset_1100.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Offsetを調整してLookLeftを作ります&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eye_R1&lt;/code&gt; も同様に&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/wiki/look_left.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://unity-chan.com/&#34;&gt;© UTJ/UCL&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;degreemapping&#34;&gt;DegreeMapping&lt;/h3&gt;
&lt;p&gt;以下の設定で、目標物への相対角度 yaw, pitch の適用度合を調整できます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;yaw, pitch 角の上限値 =&amp;gt; Curve X Range Degree&lt;/li&gt;
&lt;li&gt;yaw, pitch が上限の時の blendShape の適用割合(0 ～ 1)。1にしてください =&amp;gt; Curve Y Range Degree&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;次の３つを設定してください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VerticalDown&lt;/li&gt;
&lt;li&gt;VerticalUp&lt;/li&gt;
&lt;li&gt;Horizontal&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: UniVRMサンプルをインストールする</title>
      <link>https://vrm.dev/docs/univrm/install/univrm_install_samples/</link>
      <pubDate>Wed, 02 Sep 2020 12:29:28 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/install/univrm_install_samples/</guid>
      <description>
        
        
        &lt;p&gt;このセクションでは、&lt;a href=&#34;https://vrm.dev/docs/univrm/install/univrm_install/&#34;&gt;UniVRMパッケージをインストール&lt;/a&gt;したことを想定しています。&lt;/p&gt;
&lt;h2 id=&#34;univrmサンプルのパッケージ&#34;&gt;UniVRMサンプルのパッケージ&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;v0.81.0&lt;/code&gt; からUniVRMサンプルはUniVRMパッケージに含まれています。&lt;br&gt;
最新のUniVRMバージョンがインストールされている場合は、&lt;a href=&#34;#univrm%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%81%AE%E3%82%B7%E3%83%BC%E3%83%B3%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B&#34;&gt;UniVRMサンプルのシーンを実行する&lt;/a&gt;セクションをご覧ください。&lt;/p&gt;
&lt;h3 id=&#34;-v0800&#34;&gt;~ v0.80.0&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM/releases&#34;&gt;https://github.com/vrm-c/UniVRM/releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;UniVRM-samples-0.XX.X_XXXX.unitypackage&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;です。&lt;/p&gt;
&lt;h3 id=&#34;インポート&#34;&gt;インポート&lt;/h3&gt;
&lt;p&gt;メニューから &lt;code&gt;Assets -&amp;gt; Import Package -&amp;gt; Custom Package&lt;/code&gt; で &lt;code&gt;UniVRM-samples-0.XX.X_XXXX.unitypackage&lt;/code&gt; を選択します。&lt;/p&gt;
&lt;p&gt;以下の画像ようにインポートウィンドウを見たら、&lt;code&gt;Import&lt;/code&gt;ボタンをクリックしてください：&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/sample_package_import.jpg&#34; alt=&#34;sample_package_import&#34; width=&#34;300&#34; /&gt;

&lt;h2 id=&#34;univrmサンプルのシーンを実行する&#34;&gt;UniVRMサンプルのシーンを実行する&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;VRM.Samples&lt;/code&gt;フォルダは&lt;code&gt;Assets&lt;/code&gt;にあります。プロジェクトウィンドウに&lt;code&gt;SampleViewer&lt;/code&gt;を選択します：&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/sample_scene.jpg&#34; alt=&#34;sample_scene&#34; width=&#34;300&#34; /&gt;

&lt;hr&gt;
&lt;p&gt;&lt;code&gt;Game&lt;/code&gt;タブをクリックして、&lt;code&gt;SampleViewer&lt;/code&gt;のインタフェースを表示させます：&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/sample_viewer.jpg&#34; alt=&#34;sample_viewer&#34; width=&#34;500&#34; /&gt;

&lt;hr&gt;
&lt;p&gt;&lt;code&gt;Play&lt;/code&gt;ボタンをクリックして&lt;code&gt;SampleViewer&lt;/code&gt;を有効になります。実行時に&lt;code&gt;Open&lt;/code&gt;ボタンをクリックしてVRMモデルをシーンにインポートします：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/play_mode.jpg&#34; alt=&#34;play_mode&#34; width=&#34;150&#34; /&gt;

&lt;br&gt;
&lt;br&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/sample_viewer_activate.jpg&#34; alt=&#34;sample_viewer_activate&#34; width=&#34;600&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VRM.Samples&lt;/code&gt;に&lt;a href=&#34;https://github.com/vrm-c/UniVRM/tree/master/Assets/VRM/Samples/RuntimeExporterSample&#34;&gt;ランタイムVRMエクスポート&lt;/a&gt;と&lt;a href=&#34;https://github.com/vrm-c/UniVRM/tree/master/Assets/VRM/Samples/FirstPersonSample&#34;&gt;一人称レンダリング&lt;/a&gt;のサンプルがあります。&lt;/p&gt;
&lt;p&gt;Aliciaモデルは&lt;a href=&#34;https://github.com/vrm-c/UniVRM/blob/master/Tests/Models/Alicia_vrm-0.51/AliciaSolid_vrm-0.51.vrm&#34;&gt;こちら&lt;/a&gt;。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: VRMの動作を確認する</title>
      <link>https://vrm.dev/how_to_make_vrm/vrm_behavior_confirmation/</link>
      <pubDate>Wed, 26 Aug 2020 15:52:48 +0900</pubDate>
      
      <guid>https://vrm.dev/how_to_make_vrm/vrm_behavior_confirmation/</guid>
      <description>
        
        
        &lt;p&gt;このセクションでは、作成したVRMモデルをUnity上で再生し挙動を確認することを想定しています。&lt;/p&gt;
&lt;h3 id=&#34;目の動きを確認する&#34;&gt;目の動きを確認する&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;AnimationClip/AnimationController&lt;/code&gt;をセットしたり、&lt;code&gt;VRMLookAtHead&lt;/code&gt;の&lt;code&gt;Target&lt;/code&gt;に&lt;a href=&#34;https://vrm.dev/docs/univrm/lookat/univrm_lookat/#target&#34;&gt;GameObject&lt;/a&gt;をセットしたり（視線がどこを向くかの設定）、&lt;code&gt;Head&lt;/code&gt;欄にヘッドコンポーネントを探したり、実際にUnity上で動作を確認します。モデルはプレイモードでターゲット位置を追跡します（たとえば、&lt;code&gt;GameObject -&amp;gt; 3D Object -&amp;gt; Cube&lt;/code&gt;からターゲットとしてキュ​​ーブをヒエラルキーに作成できます）。シーンに配置されたオブジェクトをドラッグして、モデルの目がリアルタイムでオブジェクトを追跡しているかどうかをテストできます。モデルのクローズアップフェイスは、インスペクターウィンドウで見れます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/LookAtTarget.png&#34; alt=&#34;LookAtTarget&#34; width=&#34;900&#34; /&gt;

&lt;br&gt;
&lt;br&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/TargetTracking.png&#34; alt=&#34;TargetTracking&#34; width=&#34;500&#34; /&gt;
&lt;/p&gt;
&lt;h3 id=&#34;表情を確認する&#34;&gt;表情を確認する&lt;/h3&gt;
&lt;p&gt;モデルの表情を確認するには、非常に簡単なテストスクリプト「AIUEO」と「Blinker」を用意しています。&lt;a href=&#34;https://vrm.dev/docs/univrm/blendshape/univrm_blendshape/#vrmblendshapeproxy&#34;&gt;BlendShape&lt;/a&gt;をセットアップした後、&lt;code&gt;Add Component&lt;/code&gt;から「AIUEO」を選んでセットすれば「あ」「い」「う」「え」「お」の口の形に順番に切り替わるアニメーションが、「Blinker」を選んでセットすれば定期的にまばたきのアニメーションが行われます。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/BlendShapeProxy.png&#34; alt=&#34;BlendShapeProxy&#34; width=&#34;650&#34; /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;BlendShapeAvatar&lt;/code&gt;フィールドにダブルクリックして、3Dモデルの表情を設定します&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/AddExpressionScripts.png&#34; alt=&#34;AddExpressionScripts&#34; width=&#34;650&#34; /&gt;

&lt;br&gt;
&lt;br&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/InspectorFaceView.png&#34; alt=&#34;InspectorFaceView&#34; width=&#34;400&#34; /&gt;
&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: VRMファイルが使えるアプリケーションは？</title>
      <link>https://vrm.dev/vrm_applications/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/vrm_applications/</guid>
      <description>
        
        
        &lt;h2 id=&#34;3dキャラクターのプラットフォーム&#34;&gt;3Dキャラクターのプラットフォーム&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://seed.online/&#34;&gt;ザ・シードオンライン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://3d.nicovideo.jp/&#34;&gt;ニコニ立体&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.vroid.com/&#34;&gt;VRoid Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://connect.vrlab.dmm.com/&#34;&gt;DMM VR CONNECT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cryptoavatars.io/home&#34;&gt;CryptoAvatars&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;プラグイン&#34;&gt;プラグイン&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;アプリケーション&lt;/th&gt;
&lt;th&gt;プラットフォーム&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/vrm-c/UniVRM&#34;&gt;UniVRM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unityエディタ拡張, Unityライブラリ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/saturday06/VRM_Addon_for_Blender&#34;&gt;VRM Add-on for Blender&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Blenderアドオン&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/ruyo/VRM4U&#34;&gt;VRM4U&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;UnrealEngineプラグイン&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/V-Sekai/godot-vrm&#34;&gt;godot-vrm&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Godotアドオン&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/kashikacojp/glTF-Maya-Exporter&#34;&gt;glTF-Maya-Exporter&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mayaスクリプト&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://pokemori.booth.pm/items/1025226&#34;&gt;VRM Converter for VRChat&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unityエディタ拡張&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://pokemori.booth.pm/items/1788660&#34;&gt;UniVRMExtensions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unityエディタ拡張&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;キャラメイクツール&#34;&gt;キャラメイクツール&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;アプリケーション&lt;/th&gt;
&lt;th&gt;プラットフォーム&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://vroid.com/studio/&#34;&gt;VRoid Studio&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, macOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://vroid.com/mobile/&#34;&gt;VRoid Mobile&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://fantia.jp/fanclubs/10552&#34;&gt;セシル変身アプリ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, macOS&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;配信ツール&#34;&gt;配信ツール&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;アプリケーション&lt;/th&gt;
&lt;th&gt;プラットフォーム&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://sites.google.com/view/vdraw/&#34;&gt;VDRAW&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://campaign.showroom-live.com/showroom-v/&#34;&gt;SHOWROOM V&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://sites.google.com/site/vhitogata/&#34;&gt;Hitogata&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://3tene.com/&#34;&gt;3tene&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, macOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://store.steampowered.com/app/870820/Wakaru_ver_beta/&#34;&gt;Wakaru&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://sh-akira.github.io/VirtualMotionCapture/&#34;&gt;バーチャルモーションキャプチャー&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://facevtuber.com/&#34;&gt;FaceVTuber&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Google Chrome&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/m2wasabi/LiveAvatar&#34;&gt;LiveAvatar&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;HTC VIVE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://luppet.appspot.com/&#34;&gt;Luppet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows + optional hand tracking&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://apps.apple.com/jp/app/vear/id1490697369&#34;&gt;vear&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/xelloss120/CharWebCam&#34;&gt;CharWebCam&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://malaybaku.github.io/VMagicMirror/&#34;&gt;VMagicMirror&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://2dr.info/&#34;&gt;2DR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://store.steampowered.com/app/1207050/VUPVTuber_Maker_Animation_MMDLive2D__facial_capture/&#34;&gt;VUP-VTuber&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.next-system.com/michicon&#34;&gt;ミチコンPlus&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://vovola.wixsite.com/website&#34;&gt;VOVOLA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.vseeface.icu/&#34;&gt;VSeeFace&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows + optional hand tracking&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://halmin.wixsite.com/zz3d&#34;&gt;ZZ3D&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://liv.tv/&#34;&gt;LIV&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;モーションキャプチャ&#34;&gt;モーションキャプチャ&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Application&lt;/th&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://deatrathias.net/TW/&#34;&gt;TRACKING WORLD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://booth.pm/ja/items/1779185&#34;&gt;waidayo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;PC, iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/digital-standard/ThreeDPoseTracker&#34;&gt;ThreeDPoseTracker&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://digital-standard.com/tdpt_lp/&#34;&gt;TDPT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://booth.pm/ja/items/1801535&#34;&gt;EasyVirtualMotionCaptureForUnity&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;アニメーション&#34;&gt;アニメーション&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Application&lt;/th&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://lsengine.net/&#34;&gt;Ls ENGINE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/t-takasaka/AI4Animation/tree/master/AI4Animation/Assets/Demo/ARKit&#34;&gt;AI4Animation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unityライブラリ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://booth.pm/ja/items/2216222&#34;&gt;Dance Dance Maker!&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Oculus Quest&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;撮影&#34;&gt;撮影&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Application&lt;/th&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://120byte.booth.pm/items/1654585&#34;&gt;VRMお人形遊びPC版&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://120byte.booth.pm/items/1099618&#34;&gt;VRMお人形遊び&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://app.famitsu.com/gametitle/8356/&#34;&gt;Vタビ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://vismuth.com/&#34;&gt;Vismuth&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Android, iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://bnut.jp/vstamp&#34;&gt;Vスタンプ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://matsuvr.booth.pm/items/2223918&#34;&gt;VRM Automatic Photographing&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://booth.pm/ja/items/1808860&#34;&gt;VRMCardMaker&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://apps.apple.com/jp/app/pose-arch/id1483326327&#34;&gt;Pose Arc‪h&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cocop.site/cocopstudio/&#34;&gt;COCOPStudio&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Android, iOS, Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://booth.pm/ja/items/2495794&#34;&gt;Emmv Studio&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://ayato3d.booth.pm/items/2202577&#34;&gt;PaSha!&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows 10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;メタバース&#34;&gt;メタバース&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;アプリケーション&lt;/th&gt;
&lt;th&gt;プラットフォーム&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://virtualcast.jp/&#34;&gt;バーチャルキャスト&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://store.steampowered.com/app/947890/VirtualCast/&#34;&gt;Windows VR&lt;/a&gt;, &lt;a href=&#34;https://www.oculus.com/experiences/quest/4174249979259348/&#34;&gt;Oculus Quest&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://cluster.mu/&#34;&gt;cluster&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;PCVR, Windows, macOS, iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://biscrat.booth.pm/items/1193414&#34;&gt;Clarie&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://exokit.org/&#34;&gt;Exokit&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, macOS, Linux, VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://teco-vr.com/&#34;&gt;TECO&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, macOS, Oculus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://brother-pv.booth.pm/items/2016717&#34;&gt;コラボル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://webaverse.com/&#34;&gt;Webaverse&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Web browser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://ambr.co.jp/&#34;&gt;ambr&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR, macOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://store.steampowered.com/app/1424930/Connect_Chat/&#34;&gt;Connect Chat&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://facevtuber.com/vzero/&#34;&gt;VZero&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Web browser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://substrata.info/&#34;&gt;Substrata&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, MacOS, Linux&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;ゲームなど&#34;&gt;ゲームなど&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;アプリケーション&lt;/th&gt;
&lt;th&gt;プラットフォーム&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://naby.booth.pm/items/990663&#34;&gt;Vワールド&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://wandv.jp/seiya/&#34;&gt;SEIYA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://orenodinner.booth.pm/items/952450&#34;&gt;BONFIRE~焚き火~&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Oculus Go&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://store.steampowered.com/app/867090/VR__TSUNTSUN_VR/&#34;&gt;つんつんVR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.mediaplex.co.jp/korokoro/&#34;&gt;コロコロシステム&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Oculus Rift&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://n-mattun.booth.pm/&#34;&gt;パイロットクロス&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://ootamato.itch.io/primitier&#34;&gt;プリミティア&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://store.steampowered.com/app/885000/Synth_Riders/&#34;&gt;Synth Riders&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://store.steampowered.com/app/1144460/SOUNDART/&#34;&gt;SOUNDART&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://rc-cobalt.booth.pm/items/1756359&#34;&gt;VRAST!&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.spacepupstudio.com/lots&#34;&gt;Legend of the Shieldbearers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Oculus Rift/Oculus Quest&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://bowman.vrlab.dmm.com/ja/&#34;&gt;BOW MAN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://store.steampowered.com/app/1307550/Craftopia/&#34;&gt;Craftopia&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://store.steampowered.com/app/1366570/RESONARK_X/&#34;&gt;RESONARK X&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR, &lt;a href=&#34;https://www.oculus.com/experiences/quest/3405379359561787/&#34;&gt;Oculus Quest&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://rakugaki-kingdom.com/&#34;&gt;ラクキン&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://booth.pm/ja/items/1293100&#34;&gt;FantasySeed&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://fujisunflower.booth.pm/items/2510498&#34;&gt;Roduet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://simplestar-game.booth.pm/items/2622434&#34;&gt;Cube Art World&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://booth.pm/ja/items/2349960&#34;&gt;TouroReminiscence&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://ktamayan.booth.pm/items/2790105&#34;&gt;VRM Cyber walk&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://paldynojosh.booth.pm/items/1485218&#34;&gt;Virtual Home Run Derby&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;ブラウザゲーム&#34;&gt;ブラウザゲーム&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;アプリケーション&lt;/th&gt;
&lt;th&gt;プラットフォーム&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://unityroom.com/games/bakuretsu&#34;&gt;あけろ！爆裂駐車場！&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Web browser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://unityroom.com/games/hyperdimension-virtual-super-extreme-vrm-soccer&#34;&gt;スーパーエクストリームVRMサッカー&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Web browser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://unityroom.com/games/mitsussion&#34;&gt;密ッションインポッシブル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Web browser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://unityroom.com/games/aguroshoutest&#34;&gt;スーパーVRMブラザーズ3D&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Web browser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://unityroom.com/games/paseup&#34;&gt;ペースアップ！&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Web browser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://unityroom.com/games/vrm_bike&#34;&gt;二輪VRM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Web browser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://unityroom.com/games/vrmtriplejump&#34;&gt;VRM三段跳び&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Web browser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://unityroom.com/games/step-panel-match&#34;&gt;(超)STEP PANEL MATCH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Web browser&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;ビューア&#34;&gt;ビューア&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;アプリケーション&lt;/th&gt;
&lt;th&gt;プラットフォーム&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/virtual-cast/babylon-vrm-loader/&#34;&gt;Babylon VRM Viewer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Babylon.js拡張&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/pixiv/three-vrm/&#34;&gt;Three-VRM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;three.js拡張&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://booooooh.booth.pm/items/1033823&#34;&gt;VPocket&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Android, iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://w.atwiki.jp/beamman/&#34;&gt;VRMビュアー&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://vrm-viewer.yukimochi.io/&#34;&gt;VRM Viewer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Webブラウザ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/magicien/VRMQuickLook&#34;&gt;VRMQuickLook&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;macOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://fantom1x.blog130.fc2.com/blog-entry-309.html&#34;&gt;VRM Live Viewer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/kirurobo/UniWinApi&#34;&gt;UniWinApi Example project&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unityライブラリ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/m2wasabi/KinectV2VRM&#34;&gt;KinectV2VRM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unityライブラリ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.vrai.jp/vr_mocuvrm.html&#34;&gt;MocuMocuVRM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR, Looking Glass&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://akarimichi.github.io/vrm-display-releases/&#34;&gt;VRM Display&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://store.steampowered.com/app/1096550/Desktop_Magic_Engine/&#34;&gt;Desktop Magic Engine&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;その他のvrm対応アプリ&#34;&gt;その他のVRM対応アプリ&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;アプリケーション&lt;/th&gt;
&lt;th&gt;プラットフォーム&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/m2wasabi/VRMLoaderUI&#34;&gt;VRMLoaderUI&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unityライブラリ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://teator.jp/&#34;&gt;テアトル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://neoseast-japan.booth.pm/items/2562276&#34;&gt;NeoRoidHub for Unity&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unityエディタ拡張&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://eyesout.itch.io/virtual-presentation-space&#34;&gt;Virtual Presentation Space&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows VR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://store.steampowered.com/app/1454500/VTuber_Editor/&#34;&gt;VTuber Editor&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://riemgoshawk.booth.pm/items/1990160&#34;&gt;ACUAH β&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://melonspeedruns.itch.io/tifa&#34;&gt;TIFA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://styly.cc/&#34;&gt;STYLY&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, Windows VR, Android, iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://kuniyan.booth.pm/items/2437978&#34;&gt;[HANA] BlendShapeをコントロールするツール&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://natsunatsu.booth.pm/items/2956377&#34;&gt;Virtual Studio&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;内部的にvrmを活用しているサービス&#34;&gt;内部的にVRMを活用しているサービス&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;アプリケーション&lt;/th&gt;
&lt;th&gt;プラットフォーム&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://vkatsu.jp/&#34;&gt;Vカツ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://customcast.jp/&#34;&gt;カスタムキャスト&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://reality.wrightflyer.net/&#34;&gt;REALITY&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.puppemoji.com/&#34;&gt;パペ文字&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://materializer.co/lab/mayalive&#34;&gt;メイアライブオーダーメイド版&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Windows, macOS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://gugenka.jp/digital/make_avatar.php&#34;&gt;MakeAvatar&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iOS, Android&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: UniVRMの座標系変換について</title>
      <link>https://vrm.dev/docs/univrm/programming/univrm_coordinate/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/programming/univrm_coordinate/</guid>
      <description>
        
        
        &lt;p&gt;UniVRMは、インポート・エクスポート時に自動でGLTFとの座標変換を実行しています。&lt;/p&gt;
&lt;h2 id=&#34;vrmの座標系&#34;&gt;VRMの座標系&lt;/h2&gt;
&lt;p&gt;VRMはGLTFの拡張なので、GLTFの座標系に準拠します。
OpenGL標準の右手系Y-UP座標系です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;右:X+&lt;/li&gt;
&lt;li&gt;上:Y+&lt;/li&gt;
&lt;li&gt;前:Z-&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;unityの座標系&#34;&gt;Unityの座標系&lt;/h2&gt;
&lt;p&gt;左手系Y-UP座標系です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;右:X+&lt;/li&gt;
&lt;li&gt;上:Y+&lt;/li&gt;
&lt;li&gt;前:Z+(+-が反転)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;各値の変換&#34;&gt;各値の変換&lt;/h2&gt;
&lt;p&gt;Z軸を反転します。&lt;/p&gt;
&lt;h3 id=&#34;vector3position-normalなど&#34;&gt;Vector3(Position, Normalなど)&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;static&lt;/span&gt; Vector3 ReverseZ(&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;this&lt;/span&gt; Vector3 v)
{
    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;new&lt;/span&gt; Vector3(v.x, v.y, -v.z);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;quaternionrotation&#34;&gt;Quaternion(Rotation)&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;static&lt;/span&gt; Quaternion ReverseZ(&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;this&lt;/span&gt; Quaternion q)
{
    &lt;span style=&#34;color:#078;font-weight:bold&#34;&gt;float&lt;/span&gt; angle;
    Vector3 axis;
    q.ToAngleAxis(&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;out&lt;/span&gt; angle, &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;out&lt;/span&gt; axis);
    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; Quaternion.AngleAxis(-angle, ReverseZ(axis));
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;matrixbindmatrices&#34;&gt;Matrix(BindMatrices)&lt;/h3&gt;
&lt;p&gt;スケール値が入っているとうまくいきません&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;static&lt;/span&gt; Matrix4x4 ReverseZ(&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;this&lt;/span&gt; Matrix4x4 m)
{
&lt;span style=&#34;color:#099&#34;&gt;#if UNITY_2017_1_OR_NEWER
&lt;/span&gt;&lt;span style=&#34;color:#099&#34;&gt;&lt;/span&gt;    m.SetTRS(m.GetColumn(&lt;span style=&#34;color:#f60&#34;&gt;3&lt;/span&gt;).ReverseZ(), m.rotation.ReverseZ(), Vector3.one);
&lt;span style=&#34;color:#099&#34;&gt;#else
&lt;/span&gt;&lt;span style=&#34;color:#099&#34;&gt;&lt;/span&gt;    m.SetTRS(m.ExtractPosition().ReverseZ(), m.ExtractRotation().ReverseZ(), Vector3.one);
&lt;span style=&#34;color:#099&#34;&gt;#endif
&lt;/span&gt;&lt;span style=&#34;color:#099&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;return&lt;/span&gt; m;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 🚧Meta の設定</title>
      <link>https://vrm.dev/docs/univrm1/vrm1_tutorial/meta/</link>
      <pubDate>Thu, 12 Aug 2021 21:22:24 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm1/vrm1_tutorial/meta/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm1/vrm1_tutorial/vrm_object/&#34;&gt;VrmObject&lt;/a&gt; の &lt;code&gt;Meta&lt;/code&gt; GUI で設定します。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/vrm_meta_settings.jpg&#34;  width=&#34;400&#34; /&gt;


      </description>
    </item>
    
    <item>
      <title>Docs: アニメーション</title>
      <link>https://vrm.dev/docs/univrm/gltf/animation_exporter/</link>
      <pubDate>Mon, 15 Mar 2021 17:10:43 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/gltf/animation_exporter/</guid>
      <description>
        
        
        &lt;p&gt;GLTF は、Animation の定義があります。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;VRM は、Animation を使わないという仕様です&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;対応バージョン&#34;&gt;対応バージョン&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;v0.44&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;対応状況&#34;&gt;対応状況&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;KeyName&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;TranslationKey&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;○&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;RotationKey&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;○&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;ScaleKey&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;○&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;BlendShapeKey&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;×&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;animatorをエクスポートする場合&#34;&gt;Animatorをエクスポートする場合&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;ルートGameObjectにAnimatorコンポーネントを追加&lt;/li&gt;
&lt;li&gt;AnimatorControllerを作成し、それをAnimatorのController項目に設定&lt;/li&gt;
&lt;li&gt;UnityEditorのツールバーからWindow&amp;gt;AnimationでAnimationウインドウを開く&lt;/li&gt;
&lt;li&gt;ルートGameObjectが選択状態であることを確認してAnimationウインドウ中央に表示されているCreateボタンを押してAnimationClipを作る&lt;/li&gt;
&lt;li&gt;このクリップに対してアニメーションキーを追加&lt;/li&gt;
&lt;li&gt;UniGLTF&amp;gt;Exportからglbを出力する&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;animationをエクスポートする場合&#34;&gt;Animationをエクスポートする場合&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;ルートGameObjectにAnimationコンポーネントを追加&lt;/li&gt;
&lt;li&gt;UnityEditorのツールバーからWindow&amp;gt;AnimationでAnimationウインドウを開く&lt;/li&gt;
&lt;li&gt;ルートGameObjectが選択状態であることを確認してAnimationウインドウ中央に表示されているCreateボタンを押してAnimationClipを作る&lt;/li&gt;
&lt;li&gt;Inspectorの設定をDebugモードにしてAnimationClipのLegacyフラグをONにする&lt;br&gt;
&lt;img src=&#34;https://vrm.dev/images/wiki/LegacyClip.png&#34; alt=&#34;Interpolation&#34;&gt;&lt;/li&gt;
&lt;li&gt;AnimationコンポーネントのAnimation項目に作成したAnimationClipを設定&lt;/li&gt;
&lt;li&gt;クリップに対してアニメーションキーを追加&lt;/li&gt;
&lt;li&gt;UniGLTF&amp;gt;Exportからglbを出力する&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;注意事項&#34;&gt;注意事項&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;RotationKeyのInterpolation設定をQuaternionかまたはEulerAngles(Quaternion)にすること&lt;br&gt;
&lt;img src=&#34;https://vrm.dev/images/wiki/Interpolation.png&#34; alt=&#34;Interpolation&#34;&gt;&lt;/li&gt;
&lt;li&gt;Animatorの場合は設定されている全てのClipを検索して書き出しをしているが、ステートの状態などは出力されない&lt;/li&gt;
&lt;li&gt;Animator経由だと複数のアニメーションが書き込まれるが、UniGLTFのImporterが読み込むのは最初の１つだけ(UniGLTF-1.25時点）&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: UniVRMをアンインストールする</title>
      <link>https://vrm.dev/docs/univrm/install/univrm_uninstall/</link>
      <pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/install/univrm_uninstall/</guid>
      <description>
        
        
        &lt;p&gt;以下のフォルダを削除してください。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;folder&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Assets/VRM&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;UniVRM-0.XX.0.unitypackage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Assets/UniGLTF&lt;/td&gt;
&lt;td&gt;v0.63.0以降&lt;/td&gt;
&lt;td&gt;UniVRM-0.XX.0.unitypackage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Assets/VRMShaders&lt;/td&gt;
&lt;td&gt;v0.56.0以降&lt;/td&gt;
&lt;td&gt;UniVRM-0.XX.0.unitypackage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Assets/MeshUtility&lt;/td&gt;
&lt;td&gt;v0.59.0以降～v0.63.0&lt;/td&gt;
&lt;td&gt;UniVRM-0.XX.0.unitypackage&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;folder&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Assets/VRM.Samples&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;UniVRM-samples-0.XX.0.unitypackage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Assets/StreamingAssets/VRM.Samples&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;UniVRM-samples-0.XX.0.unitypackage&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;UniVRMのバージョンを更新する前に一度上記を削除する方が安全です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;バージョン間でファイルが移動していた場合に、元の場所で上書きされて不整合を起こす場合があります。&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: VRMファイルに設定できるライセンスデータ</title>
      <link>https://vrm.dev/docs/vrm/vrm_meta/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/vrm/vrm_meta/</guid>
      <description>
        
        
        &lt;p&gt;VRMは複数アプリケーション間で相互利用されることが想定される、VR時代の3Dアバターフォーマットです。たとえば「ネットワークに相互接続されたアバターによるVRコミュニケーション」を考えた場合、 &lt;strong&gt;自分のアバターデータを「他の人から自分の姿が見えるように」他のユーザへ送信する&lt;/strong&gt; 、ということも行われることになります。
この場合、従来の考え方に基づく「再配布」規定だけでは対応できない場面が考えられます。そのため、VRMでは&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;モデルデータ自体に対しての改変・再配布規定（Creative Commonsなどから設定可能）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;のほかに&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;モデルデータを使用して「人格を演じる」ことについての許諾規定&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;を &lt;strong&gt;ファイルに設定できる&lt;/strong&gt; など、VR時代を想定したフォーマットとなっています。&lt;/p&gt;
&lt;h3 id=&#34;アバターの人格に関する許諾範囲personation--characterization-permission&#34;&gt;アバターの人格に関する許諾範囲(Personation / Characterization Permission)&lt;/h3&gt;
&lt;h4 id=&#34;アバターに人格を与えることの許諾範囲a-person-who-can-perform-with-this-avatar&#34;&gt;アバターに人格を与えることの許諾範囲(A person who can perform with this avatar)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;アバターを操作することはアバター作者にのみ許される(The avatar may only be manipulated by its creator)&lt;/li&gt;
&lt;li&gt;明確に許可された人限定(Authorized only to explicitly specified person)&lt;/li&gt;
&lt;li&gt;全員に許可(Authorized to anyone)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;このアバターを用いて暴力表現を演じることの許可permission-to-perform-violent-acts-with-this-avatar&#34;&gt;このアバターを用いて暴力表現を演じることの許可(Permission to perform violent acts with this avatar)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;不許可(Disallow)&lt;/li&gt;
&lt;li&gt;許可(Allow)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;このアバターを用いて性的表現を演じることの許可permission-to-perform-sexual-acts-with-this-avatar&#34;&gt;このアバターを用いて性的表現を演じることの許可(Permission to perform sexual acts with this avatar)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;不許可(Disallow)&lt;/li&gt;
&lt;li&gt;許可(Allow)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;商用利用の許可for-commercial-use&#34;&gt;商用利用の許可(For commercial use)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;不許可(Disallow)&lt;/li&gt;
&lt;li&gt;許可(Allow)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;その他のライセンス条件other-license-url&#34;&gt;その他のライセンス条件(Other License Url)&lt;/h4&gt;
&lt;p&gt;上記許諾条件以外のライセンス条件がある場合はそのライセンス文書へのURLを記述&lt;/p&gt;
&lt;h3 id=&#34;再配布改変に関する許諾範囲redistribution--modifications-license&#34;&gt;再配布・改変に関する許諾範囲(Redistribution / Modifications License)&lt;/h3&gt;
&lt;h4 id=&#34;ライセンスタイプlicense-type&#34;&gt;ライセンスタイプ(License Type)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;再配布禁止(Redistribution Prohibited)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/deed.ja&#34;&gt;著作権放棄(CC0)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/deed.ja&#34;&gt;Creative Commons CC BYライセンス(CC_BY)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/deed.ja&#34;&gt;Creative Commons CC BY NCライセンス(CC_BY_NC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/deed.ja&#34;&gt;Creative Commons CC BY SAライセンス(CC_BY_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ja&#34;&gt;Creative Commons CC BY NC SAライセンス(CC_BY_NC_SA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nd/4.0/deed.ja&#34;&gt;Creative Commons CC BY NDライセンス(CC_BY_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.ja&#34;&gt;Creative Commons CC BY NC NDライセンス(CC_BY_NC_ND)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;その他(Other)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;その他ライセンス条件other-license-url&#34;&gt;その他ライセンス条件(Other License Url)&lt;/h4&gt;
&lt;p&gt;上記許諾条件以外のライセンス条件がある場合はそのライセンス文書へのURLを記述&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: VRMSpringBone</title>
      <link>https://vrm.dev/docs/univrm/springbone/univrm_secondary/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/springbone/univrm_secondary/</guid>
      <description>
        
        
        &lt;p&gt;揺れモノ設定。&lt;/p&gt;
&lt;h1 id=&#34;コンポーネントのアタッチされるノード&#34;&gt;コンポーネントのアタッチされるノード&lt;/h1&gt;
&lt;p&gt;VRMをインポートしたとき、揺れモノ関連のコンポーネントは以下のようにアタッチされます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VRMSpringBoneは、名前が&lt;code&gt;secondary&lt;/code&gt;のノードが自動的に作成されてそこにアタッチされます。&lt;/li&gt;
&lt;li&gt;VRMSpringBoneColliderGroupは、エクスポート時にアタッチされていたノードに復旧されます。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/vrm_settings.png&#34;   /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;VRMSpringBoneが見つからない場合には&lt;code&gt;secondary&lt;/code&gt;ノードをご確認ください。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;vrmspringbone&#34;&gt;VRMSpringBone&lt;/h1&gt;
&lt;p&gt;尻尾、髪の毛、衣装などで動きに合わせて揺れて欲しいものの設定です。
揺らしたいオブジェクトの一番親のGameObjectをRootBonesにセットしてください。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/VRMSpringBone.png&#34; alt=&#34;lookat&#34;  /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;RootBonesに髪の毛とリボンを設定&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;これだけで、指定したボーンが動きに合わせて揺れます。&lt;/p&gt;
&lt;h1 id=&#34;オプションvrmspringbonecollidergroup当たり判定&#34;&gt;[オプション]VRMSpringBoneColliderGroup(当たり判定)&lt;/h1&gt;
&lt;p&gt;揺れモノが特定の部位を貫通しないように、当たり判定を入れることができます。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/collider.png&#34; alt=&#34;collider&#34;  /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;headに頭に当たり判定(VRMSpringBoneColliderGroup)を設定&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;当たり判定を入れたいボーンにVRMSpringBoneColliderGroupをアタッチして、VRMSpringBoneのColliderGroupsにセットしてください。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/set_collider.png&#34; alt=&#34;set_collider&#34;  /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;headにVRMSpringBoneColliderGroupをアタッチして、VRMSpringBoneのCollierGroupsに設定&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/spring_gizmo.png&#34; alt=&#34;gizmo&#34;  /&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;動作時のGizmo。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;ひとつのvrmspringbonecollidergroupに複数の当たり判定を設定できます&#34;&gt;ひとつのVRMSpringBoneColliderGroupに複数の当たり判定を設定できます&lt;/h2&gt;
&lt;p&gt;VRMSpringBoneColliderGroupには最初からひとつの球が設定されますが、複数の球をセットすることができます。&lt;/p&gt;
&lt;h1 id=&#34;設定したvrmspringboneが居なくなった&#34;&gt;設定したVRMSpringBoneが居なくなった&lt;/h1&gt;
&lt;p&gt;VRMSpringBoneはインポート時に&lt;code&gt;secondary&lt;/code&gt;ノードにアタッチされます。
エクスポート時と違う場所に現れるのでご注意ください。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/springbone/univrm_secondary/#コンポーネントのアタッチされるノード&#34;&gt;VRMSpringBone&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Expression の設定</title>
      <link>https://vrm.dev/docs/univrm1/vrm1_tutorial/expression/</link>
      <pubDate>Wed, 11 Aug 2021 18:25:12 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm1/vrm1_tutorial/expression/</guid>
      <description>
        
        
        

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;旧blendShape&lt;/h4&gt;

    Vrm-0.X の BlendShape は、 Vrm-1.0 の Expression に名称を変更しました。

&lt;/div&gt;

&lt;h2 id=&#34;expression-の割り当て設定&#34;&gt;Expression の割り当て設定&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm1/vrm1_tutorial/vrm_object/&#34;&gt;VrmObject&lt;/a&gt; の Expression GUI で設定します。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/vrm_expression_settings.jpg&#34;  width=&#34;800&#34; /&gt;

&lt;h2 id=&#34;個別の-expression-設定&#34;&gt;個別の Expression 設定&lt;/h2&gt;
&lt;p&gt;ひとつずつ独立したアセットです。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/expression_asset.jpg&#34;  width=&#34;400&#34; /&gt;

&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/expression.jpg&#34;  width=&#34;400&#34; /&gt;
&lt;/p&gt;
&lt;h3 id=&#34;morphtarget&#34;&gt;MorphTarget&lt;/h3&gt;
&lt;p&gt;blend shape のある &lt;code&gt;SkinnedMeshRenderer&lt;/code&gt; がリストされます。&lt;/p&gt;
&lt;h3 id=&#34;list&#34;&gt;List&lt;/h3&gt;
&lt;h4 id=&#34;morphtarget-1&#34;&gt;MorphTarget&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;MorphTarget の List 表示です&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;materialcolor&#34;&gt;MaterialColor&lt;/h4&gt;
&lt;p&gt;Material 色を [0-1] の weight値でアニメーションさせることができます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Color&lt;/li&gt;
&lt;li&gt;EmissionColor&lt;/li&gt;
&lt;li&gt;ShadeColor&lt;/li&gt;
&lt;li&gt;RimColor&lt;/li&gt;
&lt;li&gt;OutlineColor&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;texturetransform&#34;&gt;TextureTransform&lt;/h4&gt;
&lt;p&gt;Texture の offset, scale を [0-1] の weight値でアニメーションさせることができます。&lt;/p&gt;
&lt;h3 id=&#34;option&#34;&gt;Option&lt;/h3&gt;
&lt;p&gt;MorphTarget 以外の詳細な設定項目です。&lt;/p&gt;
&lt;h4 id=&#34;isbinary&#34;&gt;IsBinary&lt;/h4&gt;
&lt;p&gt;漫画風の表現などで、中間の値を見せたくない場合に有効にしてください。
中間の値を取ることができなくなります。&lt;/p&gt;
&lt;h4 id=&#34;override&#34;&gt;Override&lt;/h4&gt;
&lt;p&gt;プロシージャルな Expression の値を制御します。&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;プロシージャルなExpression&lt;/h4&gt;

    &lt;p&gt;アプリケーションが自動的に weight 値を生成することが多いと想定される Expression に対して &lt;code&gt;プロシージャルなExpression&lt;/code&gt; を定義しました。
3つのグループ &lt;code&gt;Blink&lt;/code&gt;, &lt;code&gt;LookAt&lt;/code&gt;, &lt;code&gt;Mouth&lt;/code&gt; を設定しています。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;グループ&lt;/th&gt;
&lt;th&gt;weight生成例&lt;/th&gt;
&lt;th&gt;含まれる Expression preset&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Blink&lt;/td&gt;
&lt;td&gt;ランダム&lt;/td&gt;
&lt;td&gt;Blink, BlinkLeft, BlinkRight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LookAt&lt;/td&gt;
&lt;td&gt;VrmコンポーネントのLookAt機能による生成&lt;/td&gt;
&lt;td&gt;LookUp, LookDown, LookLeft, LookRight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mouth&lt;/td&gt;
&lt;td&gt;音声やテキスト解析による生成&lt;/td&gt;
&lt;td&gt;Aa, Ih, Ou, Ee, Oh&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;/div&gt;

&lt;p&gt;プロシージャルな Expression の Weight はシステムにより自動生成されることが想定され、
その場合既存の Expression Weight との組み合わせで問題が発生する可能性があります。&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Expressionの組み合わせで起こる問題の例&lt;/h4&gt;

    &lt;ul&gt;
&lt;li&gt;口が開く &lt;code&gt;happy&lt;/code&gt; と同時に &lt;code&gt;aa&lt;/code&gt; が適用される =&amp;gt; 口が開きすぎて変になる&lt;/li&gt;
&lt;li&gt;目を閉じる &lt;code&gt;sad&lt;/code&gt; と同時に &lt;code&gt;blink&lt;/code&gt; が適用される =&amp;gt; 目が2回閉じて瞼が頬を貫通してしまう&lt;/li&gt;
&lt;li&gt;&lt;code&gt;blink&lt;/code&gt; と同時に &lt;code&gt;lookRight&lt;/code&gt; が適用される =&amp;gt; 目が瞼を貫通してしまう&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;

&lt;p&gt;組み合わせ問題を回避するために自動生成される &lt;code&gt;Blink&lt;/code&gt;, &lt;code&gt;LookAt&lt;/code&gt;, &lt;code&gt;Mouth&lt;/code&gt; の Weight 値を加工(Override)する機能です。
Override 設定した Expression の Weight 値が 0 より大きいときに機能が有効になります。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;設定&lt;/th&gt;
&lt;th&gt;機能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td&gt;procedual.weight = procedual.weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Block&lt;/td&gt;
&lt;td&gt;procedual.weight = 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Blend&lt;/td&gt;
&lt;td&gt;procedual.weight = (1 - expression.weight)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;preview&#34;&gt;Preview&lt;/h3&gt;
&lt;p&gt;Expression アセットのインスペクターの下部の頭部表示画面です。
Expression の設定を適用した結果を描画します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Preview Prefab&lt;/li&gt;
&lt;li&gt;Preview Weight: スライダーを動かすことで、[0-1] 間での変化をプレビューできます。Advanced の &lt;code&gt;IsBinary&lt;/code&gt; チェックボックスの影響をテストできます。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;作業例&#34;&gt;作業例&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;asset&lt;/th&gt;
&lt;th&gt;morphtarget&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;aa&lt;/td&gt;
&lt;td&gt;head.lip_a =&amp;gt; 100&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Mesh Utility</title>
      <link>https://vrm.dev/docs/univrm/gltf/mesh_utility/</link>
      <pubDate>Wed, 21 Apr 2021 16:09:47 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm/gltf/mesh_utility/</guid>
      <description>
        
        
        &lt;h1 id=&#34;meshutility&#34;&gt;MeshUtility&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;MeshUtility&lt;/code&gt;はメッシュ処理のツールです。&lt;br&gt;
現在利用可能な機能： &lt;code&gt;MeshSeparator&lt;/code&gt;、&lt;code&gt;MeshIntegrator&lt;/code&gt;、&lt;code&gt;StaticMeshIntegrator&lt;/code&gt;と&lt;code&gt;BoneMeshEraser&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;使用例&#34;&gt;使用例&lt;/h2&gt;
&lt;p&gt;ここでは、&lt;code&gt;MeshSeparator&lt;/code&gt;の使い方を紹介していきます。他の機能の使い方は大体同じです。&lt;br&gt;
&lt;code&gt;MeshSeparator&lt;/code&gt;が適用されると、BlendShapeを含むメッシュは分割されます。
先ず、ヒエラルキーにモデルのGameObjectを選択します。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/mesh_utility_exp1.jpg&#34;  width=&#34;200&#34; /&gt;

&lt;hr&gt;
&lt;p&gt;または、GameObjectを&lt;code&gt;TargetObject&lt;/code&gt;フィールドにドラッグ＆ドロップします。&lt;br&gt;
メッシュ処理のウィンドウを表示するため、メニューから&lt;code&gt;UniGLTF&lt;/code&gt; -&amp;gt; &lt;code&gt;MeshUtility&lt;/code&gt; -&amp;gt; &lt;code&gt;MeshProcessing Wizard&lt;/code&gt;をクリックしてください：&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/mesh_utility_ja_exp2.jpg&#34;  width=&#34;800&#34; /&gt;

&lt;hr&gt;
&lt;p&gt;&lt;code&gt;Process&lt;/code&gt;ボタンをクリックすると、処理したモデルのGameObjectを生成されます。このGameObjectを選択してエクスポータします（&lt;code&gt;VRM0&lt;/code&gt; -&amp;gt; &lt;code&gt;Export UniVRM-0.xx&lt;/code&gt;）。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm/mesh_utility_exp3.jpg&#34;  width=&#34;300&#34; /&gt;

&lt;hr&gt;
&lt;p&gt;分割されたメッシュも&lt;code&gt;Assets&lt;/code&gt;フォルダーに保存されます。&lt;br&gt;
この例では、モデルのメッシュは顔と体の2つの部分に分割された。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;顔: BlendShapeを含む      　&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;体: BlendShapeを含まない&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/mesh_sep_result_1.jpg&#34;  width=&#34;200&#34; /&gt;
&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://vrm.dev/images/vrm/mesh_sep_result_2.jpg&#34;  width=&#34;200&#34; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;meshseparator&#34;&gt;MeshSeparator&lt;/h3&gt;
&lt;p&gt;BlendShapeを含むメッシュは分割されます。BlendShapeのサイズを削減できます。&lt;/p&gt;
&lt;h3 id=&#34;meshintegrator&#34;&gt;MeshIntegrator&lt;/h3&gt;
&lt;p&gt;Prefab GameObjectのすべてのメッシュを統合します。BlendShapeを含むメッシュは独立して統合されます。&lt;/p&gt;
&lt;h3 id=&#34;staticmeshintegrator&#34;&gt;StaticMeshIntegrator&lt;/h3&gt;
&lt;p&gt;Prefab GameObjectのすべての静的メッシュを一つに統合します。&lt;/p&gt;
&lt;h3 id=&#34;bonemesheraser&#34;&gt;BoneMeshEraser&lt;/h3&gt;
&lt;p&gt;ボーン（Erase Rootのヒエラルキー）に関連するメッシュを削除します。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: VRMで開発する</title>
      <link>https://vrm.dev/docs/vrm/vrm_development/</link>
      <pubDate>Mon, 16 Apr 2018 16:30:00 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/vrm/vrm_development/</guid>
      <description>
        
        
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm-c.github.io/UniVRM/&#34;&gt;programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/install/univrm_install_samples/&#34;&gt;samples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vrmの特徴開発者的な視点&#34;&gt;VRMの特徴(開発者的な視点)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;右手系Y-UPである ➡️ &lt;a href=&#34;https://vrm.dev/docs/univrm/programming/univrm_coordinate/&#34;&gt;Coordinate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;メートル単位である ➡️ 1が、1メートルなのか、1cmなのか心配がありません&lt;/li&gt;
&lt;li&gt;人型モデルでありボーン構成が決まっている ➡️ 汎用の人型モーションやモーションキャプチャーが使いやすい&lt;/li&gt;
&lt;li&gt;初期姿勢が決まっている(Z-向きのT-Pose) ➡️ TPS的な用途でそのまま使えます&lt;/li&gt;
&lt;li&gt;初期姿勢で回転・スケールが無いことが保証されている ➡️ 初期姿勢を加味したコードを書く負担が軽減できます&lt;/li&gt;
&lt;li&gt;初期姿勢でボーンとMeshが重なることが保証されている(スキニングのBind行列に移動しか含まれていない) ➡️ Meshを加工する前にBakeするなどの負担が軽減できます&lt;/li&gt;
&lt;li&gt;表情・視線操作が統一されている ➡️ &lt;a href=&#34;https://vrm-c.github.io/UniVRM/ja/vrm0/0_58_blendshape.html&#34;&gt;BlendShapeProxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;物理でない揺れものがセットアップ済み ➡️ 物理と干渉せずに揺れるのでゲームのギミックと干渉したり、暴れたりしません&lt;/li&gt;
&lt;li&gt;VRの設定が含まれている ➡️ &lt;a href=&#34;https://vrm-c.github.io/UniVRM/ja/vrm0/firstperson.html&#34;&gt;FirstPerson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ライセンス情報が定義されている ➡️ モデルの持ち主の意思にそぐわない使用を回避できます&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;従来のゲーム開発のようにプロジェクトにアセットとして作り込むというよりは、
ランタイムにロードして動かす、という用途が想定されます。&lt;/p&gt;
&lt;h2 id=&#34;univrmで-ランタイムロードする&#34;&gt;UniVRMで ランタイムロードする&lt;/h2&gt;
&lt;p&gt;ランタイムで UniVRM の ロード機能を使うことができます。
UniVRM は Asset(Prefab) を作成せずに、シーン上に直接 GameObject を作ります。
ロードした GameObject は、Instanciate した Prefab と同様に扱うことができます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm-c.github.io/UniVRM/ja/&#34;&gt;runtime load&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;univrmで-ランタイムエクスポートする&#34;&gt;UniVRMで ランタイムエクスポートする&lt;/h2&gt;
&lt;p&gt;ランタイムで UniVRM の エクスポート機能 を使うことができます。
この機能を使って、キャラクタークリエーションツール を実装することができます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm/install/univrm_install_samples/&#34;&gt;samples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Assets/VRM.Samples/Scenes/VRMRuntimeExporterSample.unity&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;が例です。&lt;/p&gt;
&lt;h2 id=&#34;univrm以外の実装&#34;&gt;UniVRM以外の実装&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ruyo/VRM4U&#34;&gt;https://github.com/ruyo/VRM4U&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/saturday06/VRM_IMPORTER_for_Blender&#34;&gt;https://github.com/saturday06/VRM_IMPORTER_for_Blender&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/virtual-cast/babylon-vrm-loader/&#34;&gt;https://github.com/virtual-cast/babylon-vrm-loader/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pixiv/three-vrm/&#34;&gt;https://github.com/pixiv/three-vrm/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/V-Sekai/godot-vrm&#34;&gt;https://github.com/V-Sekai/godot-vrm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: LookAt の設定</title>
      <link>https://vrm.dev/docs/univrm1/vrm1_tutorial/lookat/</link>
      <pubDate>Mon, 16 Aug 2021 20:32:50 +0900</pubDate>
      
      <guid>https://vrm.dev/docs/univrm1/vrm1_tutorial/lookat/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://vrm.dev/docs/univrm1/vrm1_tutorial/vrm_object/&#34;&gt;VrmObject&lt;/a&gt; の LookAt GUI で設定します。&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/vrm_lookat_settings.jpg&#34;  width=&#34;600&#34; /&gt;

&lt;p&gt;VRM ３種類の LookAt をサポートしています。
モデルに応じて、以下の３種類の何れかの設定をしてください。&lt;/p&gt;
&lt;h2 id=&#34;boneタイプ&#34;&gt;Boneタイプ&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Alicia&lt;/code&gt; を例に説明します。
デフォルトでボーンタイプに設定されるので特に変更する必要ありません。
以下の項目が関連します。&lt;/p&gt;
&lt;p&gt;humanoid に eye ボーンが存在する。
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/alicia_humanoid.jpg&#34;  width=&#34;300&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VrmObject&lt;/code&gt; の &lt;code&gt;LookAt&lt;/code&gt; 設定で &lt;code&gt;LookAtType&lt;/code&gt; に &lt;code&gt;Bone&lt;/code&gt; を指定。
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/lookat_bone.jpg&#34;  width=&#34;500&#34; /&gt;
&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/lookat_bone_anim.gif&#34;  width=&#34;400&#34; /&gt;

&lt;p&gt;動作確認 の項に進んでください。&lt;/p&gt;
&lt;h2 id=&#34;expressionタイプmorph-target-タイプ&#34;&gt;Expressionタイプ(Morph Target タイプ)&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;new_seedsan&lt;/code&gt; を例に説明します。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;preset&lt;/th&gt;
&lt;th&gt;expression&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LookLeft&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/expression_lookleft.jpg&#34;  width=&#34;600&#34; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LookRight&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/expression_lookright.jpg&#34;  width=&#34;600&#34; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LookUp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/expression_lookup.jpg&#34;  width=&#34;600&#34; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LookDown&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/expression_lookdown.jpg&#34;  width=&#34;600&#34; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;VrmObject&lt;/code&gt; の &lt;code&gt;LookAt&lt;/code&gt; 設定で &lt;code&gt;LookAtType&lt;/code&gt; に &lt;code&gt;Expression&lt;/code&gt; を指定。
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/lookat_expression.jpg&#34;  width=&#34;500&#34; /&gt;

&lt;code&gt;Y Range&lt;/code&gt; に 1 を設定&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/lookat_expression_anim.gif&#34;  width=&#34;400&#34; /&gt;

&lt;p&gt;動作確認 の項に進んでください。&lt;/p&gt;
&lt;h2 id=&#34;expressionタイプtexture-transform-タイプ&#34;&gt;Expressionタイプ(Texture Transform タイプ)&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;unity chan&lt;/code&gt; を例に説明します。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;© Unity Technologies Japan/UCL&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;preset&lt;/th&gt;
&lt;th&gt;expression&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LookLeft&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/uv_left.jpg&#34;  width=&#34;600&#34; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LookRight&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/uv_right.jpg&#34;  width=&#34;600&#34; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LookUp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/uv_up.jpg&#34;  width=&#34;600&#34; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;LookDown&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/uv_down.jpg&#34;  width=&#34;600&#34; /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;VrmObject&lt;/code&gt; の &lt;code&gt;LookAt&lt;/code&gt; 設定で &lt;code&gt;LookAtType&lt;/code&gt; に &lt;code&gt;Expression&lt;/code&gt; を指定。
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/lookat_expression.jpg&#34;  width=&#34;500&#34; /&gt;

&lt;code&gt;Y Range&lt;/code&gt; に 1 を設定&lt;/p&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/lookat_uv_anim.gif&#34;  width=&#34;400&#34; /&gt;

&lt;h2 id=&#34;動作確認&#34;&gt;動作確認&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;シーンに Cube を作成(scale [0.1, 0.1, 0.1])&lt;/li&gt;
&lt;li&gt;VrmController の Gaze にセット&lt;/li&gt;
&lt;li&gt;VrmController の LookAtTargetType に &lt;code&gt;Calc Yaw Pitch To Gaze&lt;/code&gt; を設定(デフォルト)&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://vrm.dev/images/vrm10/tutorial/lookat_targettype.jpg&#34;  width=&#34;500&#34; /&gt;

&lt;ul&gt;
&lt;li&gt;Play&lt;/li&gt;
&lt;li&gt;Cube を動かして目が動くことを確認&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;lookat-基準位置を調整&#34;&gt;LookAt 基準位置を調整&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;HeadBone位置&lt;/code&gt; + &lt;code&gt;Offset From Head&lt;/code&gt; が LookAt の基準位置になります。
両目の間辺りを目安に設定してください。
この設定は、 VR 時の HMD 座標と兼用です。&lt;/p&gt;
&lt;p&gt;TODO: UI&lt;/p&gt;
&lt;h3 id=&#34;可動範囲を調整&#34;&gt;可動範囲を調整&lt;/h3&gt;
&lt;p&gt;VrmObject の LookAt 画面下部の &lt;code&gt;HorizontalOuter&lt;/code&gt;, &lt;code&gt;HorizontalInner&lt;/code&gt;, &lt;code&gt;VerticalDown&lt;/code&gt;, &lt;code&gt;VerticalUp&lt;/code&gt; のスライダーを調整してください。&lt;/p&gt;
&lt;h4 id=&#34;curve-x-range&#34;&gt;Curve X Range&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;大きくするゆっくり動く&lt;/li&gt;
&lt;li&gt;小さくすると速く動く&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LookAt は 以下の２直線の角度を計算します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LookAt 基準位置から Head ボーンの正面方向(local Z+)&lt;/li&gt;
&lt;li&gt;LookAt 基準位置から 注視点方向(VrmControllerのGaze)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;角度を Yaw(水平) と Pitch(垂直) に分解します。
Yaw は &lt;code&gt;+-180度&lt;/code&gt;、Pitch は &lt;code&gt;+-90度&lt;/code&gt; になります。
Yaw, Pitch の上限角度を設定できます。
&lt;code&gt;Curve X Range&lt;/code&gt; がその設定で初期設定は &lt;code&gt;90度&lt;/code&gt; です。&lt;/p&gt;
&lt;h4 id=&#34;curve-y-rangelookat-type-bone&#34;&gt;Curve Y Range(LookAt Type: Bone)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;ボーンの回転角度の制限&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上限を制限された角度をそのまま、 EyeBone  に代入すると回転しすぎになる場合が多いです。
これを適当な角度に減らす設定が &lt;code&gt;Curve Y Range&lt;/code&gt; です。
初期設定は &lt;code&gt;10度&lt;/code&gt; です。上限角度のときに &lt;code&gt;10度&lt;/code&gt; 回転します。&lt;/p&gt;
&lt;p&gt;初期設定では、注視点が &lt;code&gt;90度&lt;/code&gt; のときに EyeBone が &lt;code&gt;10度&lt;/code&gt; 回転します。
&lt;code&gt;0-90度&lt;/code&gt; では比例して回転し、&lt;code&gt;90度&lt;/code&gt; を超えないようになっています。&lt;/p&gt;
&lt;h4 id=&#34;curve-y-rangelookat-type-expression&#34;&gt;Curve Y Range(LookAt Type: Expression)&lt;/h4&gt;
&lt;p&gt;Expression は角度ではなく &lt;code&gt;0-1&lt;/code&gt; の Weight になります。
&lt;code&gt;1&lt;/code&gt; を設定してください。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;1&lt;/code&gt; で多すぎる場合はいかのいずれかの方法で調整してください。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1&lt;/code&gt; 以下に減らす&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Expression&lt;/code&gt; の設定を調整(お勧め)&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
